<?xml version="1.0" encoding="utf-8"?>

<!--

Copyright (c) 2008-2013 University of Utah and the Flux Group.

{{{GENIPUBLIC-LICENSE

GENI Public License

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and/or hardware specification (the "Work") to
deal in the Work without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Work, and to permit persons to whom the Work
is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Work.

THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
IN THE WORK.

}}}

-->

<esri:LabelDataRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:esri="http://www.esri.com/2008/ags"
		  xmlns:components="com.flack.shared.display.components.*"
		  dataChange="labeldatarenderer1_dataChangeHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.esri.ags.Graphic;
			import com.esri.ags.events.LocatorEvent;
			import com.esri.ags.tasks.Locator;
			import com.esri.ags.tasks.supportClasses.AddressCandidate;
			import com.esri.ags.utils.WebMercatorUtil;
			import com.flack.geni.display.DisplayUtil;
			import com.flack.geni.resources.physical.PhysicalNodeCollection;
			import com.flack.geni.resources.sites.GeniManager;
			import com.flack.geni.resources.sites.GeniManagerCollection;
			import com.flack.geni.resources.virt.VirtualNodeCollection;
			import com.flack.shared.display.components.DataButton;
			import com.flack.shared.utils.ColorUtil;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			
			[Bindable]
			public var marker:EsriMapNodeMarker;
			
			[Bindable]
			public var count:String;
			
			[Bindable]
			public var place:String;
			
			[Bindable]
			public var includeManagers:Boolean;
			
			protected function labeldatarenderer1_dataChangeHandler(event:FlexEvent):void
			{
				if(data == null)
					return;
				
				marker = data.marker;
				includeManagers = true;
				count = marker.Nodes.length.toString();
				if(marker.locations.length > 1)
					place = marker.locations.length + " Locations";
				else
				{
					place = marker.location.name;
					
					if(marker.location.name.length == 0)
					{
						var d:Locator = new Locator("http://tasks.arcgisonline.com/ArcGIS/rest/services/Locators/TA_Address_NA_10/GeocodeServer");
						d.addEventListener(LocatorEvent.LOCATION_TO_ADDRESS_COMPLETE, onLocationToAddressComplete);
						d.addEventListener(FaultEvent.FAULT, onFault);
						d.locationToAddress(marker.mapPoint, 100);
					}
				}
				
				groupsVbox.removeAllElements();
				includeManagers = marker.Nodes.Managers.length > 1;
				
				var managers:GeniManagerCollection = marker.Nodes.Managers;
				if(managers.length > 1)
				{
					moreInfoButton.setStyle("chromeColor", getStyle("chromeColor"));
					moreInfoButton.setStyle("color", getStyle("color"));
					
					var managerButtons:ArrayCollection = new ArrayCollection();
					var managerButton:DataButton;
					for each(var manager:GeniManager in managers.collection)
					{
						var managerNodes:* = marker.Nodes.getByManager(manager);
						managerButton = new DataButton(managerNodes.length + " @ " + manager.hrn, manager.hrn, null, managerNodes, marker.Nodes is PhysicalNodeCollection ? "physicalNodeCollection" : "virtualNodeCollection");
						managerButton.percentWidth = 100;
						managerButton.setStyle("chromeColor", ColorUtil.colorsDark[manager.colorIdx]);
						managerButton.setStyle("color", ColorUtil.colorsLight[manager.colorIdx]);
						var added:Boolean = false;
						for(var i:int=0; i < managerButtons.length; i++)
						{
							if(managerNodes.length >= managerButtons[i].data.length)
							{
								added = true;
								managerButtons.addItemAt(managerButton, i);
								break;
							}
						}
						if(!added)
							managerButtons.addItem(managerButton);
					}
					for each(managerButton in managerButtons)
						groupsVbox.addElement(managerButton);
				}
				else
				{
					moreInfoButton.setStyle("chromeColor", ColorUtil.colorsDark[managers.collection[0].colorIdx]);
					moreInfoButton.setStyle("color", ColorUtil.colorsLight[managers.collection[0].colorIdx]);
				}
			}
			
			private function onLocationToAddressComplete(event:LocatorEvent):void
			{
				var candidate:AddressCandidate = event.addressCandidate;
				if (candidate && candidate.address)
				{
					if(candidate.address.City)
						marker.location.name = candidate.address.City;
					else if(candidate.address.State)
						marker.location.name = candidate.address.State;
					else
						marker.location.name = candidate.address.Address;
					place = marker.location.name;
				}
			}
			
			private function onFault(event:FaultEvent):void
			{
				trace(event.fault.name);
				trace(event.fault.faultCode);
				trace(event.fault.faultString);
				trace("D:" + event.fault.faultDetail);
			}
		]]>
	</fx:Script>
	<esri:label>{place}</esri:label>
	<s:VGroup horizontalAlign="center"
			  right="0" left="0" top="0" bottom="0"
			  paddingLeft="8"
			  minHeight="0"
			  minWidth="0">
		<s:Button label="All Nodes ({count})"
				  id="moreInfoButton"
				  click="DisplayUtil.view(marker.Nodes)"/>
		<s:Scroller visible="{includeManagers}"
					includeInLayout="{includeManagers}"
					width="100%"
					maxHeight="120">
			<s:VGroup id="groupsVbox"
					  width="100%" paddingRight="2"
					  gap="2" />
		</s:Scroller>
	</s:VGroup>
</esri:LabelDataRenderer>
