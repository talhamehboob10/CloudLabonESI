<?xml version="1.0" encoding="utf-8"?>

<!--

Copyright (c) 2008-2013 University of Utah and the Flux Group.

{{{GENIPUBLIC-LICENSE

GENI Public License

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and/or hardware specification (the "Work") to
deal in the Work without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Work, and to permit persons to whom the Work
is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Work.

THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
IN THE WORK.

}}}

-->

<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:components="com.flack.shared.display.components.*"
		  width="100%"
		  height="100%"
		  gap="2"
		  creationComplete="afterReady()"
		  remove="destroy()">
	
	<fx:Script>
		<![CDATA[
			import com.flack.geni.GeniMain;
			import com.flack.geni.display.areas.AddManagerArea;
			import com.flack.geni.resources.sites.GeniManager;
			import com.flack.geni.resources.sites.GeniManagerCollection;
			import com.flack.geni.tasks.groups.GetPublicResourcesTaskGroup;
			import com.flack.geni.tasks.groups.GetResourcesTaskGroup;
			import com.flack.shared.FlackEvent;
			import com.flack.shared.SharedMain;
			import com.flack.shared.tasks.TaskCollection;
			import com.flack.shared.tasks.TaskGroup;
			import com.flack.shared.utils.ImageUtil;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			
			public function afterReady():void
			{
				SharedMain.sharedDispatcher.addEventListener(FlackEvent.CHANGED_MANAGERS, tryUpdateManagers);
			}
			
			public function destroy():void
			{
				SharedMain.sharedDispatcher.removeEventListener(FlackEvent.CHANGED_MANAGERS, tryUpdateManagers);
			}
			
			public function tryUpdateManagers(e:FlackEvent):void
			{
				var viewManagers:GeniManagerCollection = GeniMain.geniUniverse.managers.Clone;
				
				// Keep sliver infos for slivers we are already viewing
				var i:int;
				var managerItem:ManagerItem;
				for(i = 0; i < managerItems.numElements; i++)
				{
					managerItem = managerItems.getElementAt(i) as ManagerItem;
					if(!viewManagers.contains(managerItem.manager))
					{
						managerItems.removeElementAt(i);
						i--;
					}
					else
						viewManagers.remove(managerItem.manager);
				}
				
				// Add sliver infos for new slivers
				for each(var manager:GeniManager in viewManagers.collection)
				{
					var managerHrn:String = manager.hrn.toLowerCase();
					for(i = 0; i < managerItems.numElements; i++)
					{
						managerItem = managerItems.getElementAt(i) as ManagerItem;
						if(managerHrn < managerItem.manager.hrn.toLowerCase())
							break;
					}
					managerItem = new ManagerItem();
					managerItem.manager = manager;
					managerItems.addElementAt(managerItem, i);
				}
			}
			
			public function selectAllChange():void
			{
				for(var i:int = 0; i < managerItems.numElements; i++)
					(managerItems.getElementAt(i) as ManagerItem).showCheckbox.selected = selectAllCheckbox.selected;
				
				GeniMain.mapper.changeManagers(GeniMain.geniUniverse.managers, selectAllCheckbox.selected);
			}
			
			public function tryReloadManagers():void
			{
				var allPendingTasks:TaskCollection = SharedMain.tasker.tasks.AllNotFinished;
				if(allPendingTasks.getOfClass(GetResourcesTaskGroup).length > 0
					|| allPendingTasks.getOfClass(GetPublicResourcesTaskGroup).length > 0)
				{
					Alert.show("There is already a task running or waiting to run to load all of the managers");
					return;
				}
				var reloadManagers:TaskGroup;
				if(!GeniMain.geniUniverse.user.hasSetupSecurity)
					reloadManagers = new GetPublicResourcesTaskGroup();
				else
					reloadManagers = new GetResourcesTaskGroup();
				reloadManagers.forceRunNow = true;
				reloadManagers.forceSerial = false;
				SharedMain.tasker.add(reloadManagers);
			}
			
			public function addManager():void
			{
				FlexGlobals.topLevelApplication.viewContent(new AddManagerArea());
			}
			
		]]>
	</fx:Script>
	<components:DefaultLine percentWidth="100"
							lineThickness="2" />
	<s:HGroup width="100%"
			  verticalAlign="middle"
			  paddingRight="2"
			  gap="2">
		<components:ImageButton icon="{ImageUtil.refreshIcon}"
								toolTip="Reload managers"
								click="tryReloadManagers()" />
		<s:Label text="Managers"
				 fontSize="14"
				 fontWeight="bold" />
		<s:Rect percentWidth="100" />
		<s:Button icon="{ImageUtil.addIcon}"
				  label="Add"
				  toolTip="Manually add a manager"
				  click="addManager()" />
	</s:HGroup>
	
	<s:CheckBox id="selectAllCheckbox"
				label="Show/Hide"
				toolTip="View or hide all managers from the map"
				change="selectAllChange()"
				selected="true" />
	<s:Scroller height="100%"
				width="100%">
		<s:VGroup width="100%"
				  id="managerItems"
				  gap="2"
				  paddingRight="2" paddingBottom="2" />
	</s:Scroller>
	
</s:VGroup>
