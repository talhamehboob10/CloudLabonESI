#!/usr/bin/perl -w
#
# Copyright (c) 2008-2021 University of Utah and the Flux Group.
# 
# {{{GENIPUBLIC-LICENSE
# 
# GENI Public License
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and/or hardware specification (the "Work") to
# deal in the Work without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Work, and to permit persons to whom the Work
# is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Work.
# 
# THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
# IN THE WORK.
# 
# }}}
#
use strict;
use English;

# Do this early so that we talk to the right DB.
use vars qw($GENI_DBNAME $GENI_METHODS $EMULAB_PEMFILE $GENI_VERSION);
BEGIN { $GENI_DBNAME = "geni-cm"; }

# Configure variables
my $ETCDIR         = "@prefix@/etc";
$EMULAB_PEMFILE    = "$ETCDIR/genicm.pem";

# Testbed libraries.
use lib '@prefix@/lib';
use GeniCM;
use GeniCMV2;

# Default
if (!defined($GENI_VERSION)) {
    $GENI_VERSION = "2.0";
}

if ($GENI_VERSION eq "1.0") {
    $GENI_METHODS = {
	"GetVersion"        => \&GeniCM::GetVersion,
	"Resolve"	    => \&GeniCM::Resolve,
	"DiscoverResources" => \&GeniCM::DiscoverResources,
	"GetTicket"         => \&GeniCM::GetTicket,
	"UpdateTicket"      => \&GeniCM::UpdateTicket,
	"ReleaseTicket"     => \&GeniCM::ReleaseTicket,
	"RedeemTicket"      => \&GeniCM::RedeemTicket,
	"StartSliver"       => \&GeniCM::StartSliver,
	"DeleteSliver"      => \&GeniCM::DeleteSliver,
	"DeleteSlice"       => \&GeniCM::DeleteSlice,
	"SplitSliver"       => \&GeniCM::SplitSliver,
	"UpdateSliver"      => \&GeniCM::UpdateSliver,
	"GetSliver"         => \&GeniCM::GetSliver,
	"BindToSlice"       => \&GeniCM::BindToSlice,
	"Shutdown"          => \&GeniCM::Shutdown,
	"ListUsage"         => \&GeniCM::ListUsage,
	"SliceStatus"       => \&GeniCM::SliceStatus,
	"SliverStatus"      => \&GeniCM::SliverStatus,
	"SliverTicket"      => \&GeniCM::SliverTicket,
	"ListTickets"       => \&GeniCM::ListTickets,
	"ListHistory"       => \&GeniCM::ListHistory,
	"RenewSlice"	    => \&GeniCM::RenewSlice,
    };
}
elsif ($GENI_VERSION eq "2.0") {
    $GENI_METHODS = {
	"GetVersion"        => \&GeniCMV2::GetVersion,
	"Resolve"	    => \&GeniCMV2::Resolve,
	"DiscoverResources" => \&GeniCMV2::DiscoverResources,
	"CreateSliver"      => \&GeniCMV2::CreateSliver,
	"UpdateSliver"      => \&GeniCMV2::UpdateSliver,
	"DeleteSliver"      => \&GeniCMV2::DeleteSliver,
	"GetSliver"         => \&GeniCMV2::GetSliver,
	"Shutdown"          => \&GeniCMV2::Shutdown,
	"SliverStatus"      => \&GeniCMV2::SliverStatus,
	"RenewSlice"        => \&GeniCMV2::RenewSlice,
	"GetTicket"         => \&GeniCMV2::GetTicket,
	"ReleaseTicket"     => \&GeniCMV2::ReleaseTicket,
	"UpdateTicket"      => \&GeniCMV2::UpdateTicket,
	"RedeemTicket"      => \&GeniCMV2::RedeemTicket,
	"DeleteSlice"       => \&GeniCMV2::DeleteSlice,
	"StartSliver"       => \&GeniCMV2::StartSliver,
	"StopSliver"        => \&GeniCMV2::StopSliver,
	"RestartSliver"     => \&GeniCMV2::RestartSliver,
	"PowerCycleSliver"  => \&GeniCMV2::PowerCycleSliver,
	"ReloadSliver"      => \&GeniCMV2::ReloadSliver,
	"BindToSlice"       => \&GeniCMV2::BindToSlice,
	"ListUsage"         => \&GeniCMV2::ListUsage,
	"ListHistory"       => \&GeniCMV2::ListHistory,
	"ReserveVlanTags"   => \&GeniCMV2::ReserveVlanTags,
	"InjectEvent"       => \&GeniCMV2::InjectEvent,
	"CreateImage"       => \&GeniCMV2::CreateImage,
	"DeleteImage"       => \&GeniCMV2::DeleteImage,
	"ImageInfo"         => \&GeniCMV2::ImageInfo,
	"ListImages"        => \&GeniCMV2::ListImages,
	"ShareLan"          => \&GeniCMV2::ShareLan,
	"UnShareLan"        => \&GeniCMV2::UnShareLan,
	"ListActiveSlivers" => \&GeniCMV2::ListActiveSlivers,
	"ConsoleURL"	    => \&GeniCMV2::ConsoleURL,
	"ConsoleInfo"	    => \&GeniCMV2::ConsoleInfo,
	"CreateDataset"     => \&GeniCMV2::CreateDataset,
	"DeleteDataset"     => \&GeniCMV2::DeleteDataset,
	"DescribeDataset"   => \&GeniCMV2::DescribeDataset,
	"ModifyDataset"     => \&GeniCMV2::ModifyDataset,
	"ApproveDataset"    => \&GeniCMV2::ApproveDataset,
	"GetDatasetCredential" => \&GeniCMV2::GetDatasetCredential,
	# This will not work in the fcgid world without more work.
	"SecureImageDownload"  => \&GeniCMV2::SecureImageDownload,
	"Lockdown"          => \&GeniCMV2::Lockdown,
	"TriggerImageUpdate"=> \&GeniCMV2::TriggerImageUpdate,
	"AddNodes"          => \&GeniCMV2::AddNodes,
	"DeleteNodes"       => \&GeniCMV2::DeleteNodes,
	"Panic"             => \&GeniCMV2::Panic,
	"RunLinktest"       => \&GeniCMV2::RunLinktest,
	"Recovery"          => \&GeniCMV2::Recovery,
	"Flash"             => \&GeniCMV2::Flash,
	"PrestageImages"    => \&GeniCMV2::PrestageImages,
    };
}

1;

