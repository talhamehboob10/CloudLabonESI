#!/usr/bin/perl -w
#
# Copyright (c) 2008-2010 University of Utah and the Flux Group.
# 
# {{{GENIPUBLIC-LICENSE
# 
# GENI Public License
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and/or hardware specification (the "Work") to
# deal in the Work without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Work, and to permit persons to whom the Work
# is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Work.
# 
# THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
# IN THE WORK.
# 
# }}}
#
use strict;
use English;
use Data::Dumper;

#
# Configure variables
#
my $TB       = "@prefix@";
my $SACERT   = "$TB/etc/genisa.pem";

# Geni libraries.
use lib "@prefix@/lib";
use Genixmlrpc;
use GeniCertificate;

my $cert   = shift(@ARGV);
my $server = shift(@ARGV);
my $method = shift(@ARGV);

#
# Load the SA cert to act as caller context.
#
my $certificate = GeniCertificate->LoadFromFile($cert);
if (!defined($certificate)) {
    print STDERR "*** Could not load certificate from $SACERT\n";
    exit(1);
}
my $context = Genixmlrpc->Context($certificate);
if (!defined($context)) {
    print STDERR "*** Could not create context to talk to clearinghouse\n";
    exit(1);
}

my $response = 
    Genixmlrpc::CallMethod($server, $context, $method, @ARGV);

print Dumper($response);


