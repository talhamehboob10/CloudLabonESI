<?php
#
# Copyright (c) 2000-2019 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
chdir("..");
include_once("webtask.php");
chdir("apt");

function Do_List()
{
    global $this_user;
    global $ajax_args;
    $result = array();
    $licenses = $this_user->Licenses();

    foreach ($licenses as $license) {
        $blob = array("idx"              => $license["license_idx"],
                      "name"             => $license["license_name"],
                      "description_type" => $license["description_type"],
                      "description_text" => $license["description_text"],
                      "license_type"     => $license["license_type"],
                      "license_text"     => $license["license_text"]);
        $result[] = $blob;
    }
    SPITAJAX_RESPONSE($result);
}

function Do_Accept()
{
    global $this_user;
    global $ajax_args;
    $licenses = $this_user->Licenses();
    $license  = null;

    if (!isset($ajax_args["idx"]) || $ajax_args["idx"] == "") {
	SPITAJAX_ERROR(1, "Missing license idx");
	return 1;
    }
    $idx  = $ajax_args["idx"];
    if (!is_numeric($idx)) {
	SPITAJAX_ERROR(1, "License idx is not an integer");
	return 1;
    }
    # Find the License so we know what kind it is.
    foreach ($licenses as $tmp) {
        if ($tmp["license_idx"] == $idx) {
            $license = $tmp;
            break;
        }
    }
    if (!$license) {
	SPITAJAX_ERROR(1, "Not a license that needs to be accepted.");
	return 1;
    }
    if ($license["license_level"] == "project") {
        $target = $license["pid"];
        $project = Project::Lookup($target);
        if (!$project) {
            SPITAJAX_ERROR(1, "No such project");
            return 1;
        }
        if (!$project->IsLeader($this_user)) {
            SPITAJAX_ERROR(1, "Not allowed to accept/reject this license");
            return 1;
        }
    }
    else {
        $target = $license["uid"];
    }
    $this_uid = $this_user->uid();
    $webtask  = WebTask::CreateAnonymous();
    
    $retval = SUEXEC($this_uid, "nobody",
		     "webmanage_licenses -t " . $webtask->task_id() . " -- ".
                     "  accept $idx $target ",
		     SUEXEC_ACTION_IGNORE);
    $webtask->Refresh();
    if ($retval != 0) {
        if (!$webtask->exited() || $retval < 0) {
            SUEXECERROR(SUEXEC_ACTION_CONTINUE);
            SPITAJAX_ERROR(-1, "Internal error");
        }
        else {
            # Need to pass exitcode through on this one.
            SPITAJAX_ERROR($webtask->exitcode(), $webtask->output());
        }
        $webtask->Delete();
        return;
    }
    $webtask->Delete();
    SPITAJAX_RESPONSE(1);
}

function Do_Reject()
{
    global $this_user;
    global $ajax_args;
    $licenses = $this_user->Licenses();
    $license  = null;

    if (!isset($ajax_args["idx"]) || $ajax_args["idx"] == "") {
	SPITAJAX_ERROR(1, "Missing license idx");
	return 1;
    }
    $idx  = $ajax_args["idx"];
    if (!is_numeric($idx)) {
	SPITAJAX_ERROR(1, "License idx is not an integer");
	return 1;
    }
    # Find the License so we know what kind it is.
    foreach ($licenses as $tmp) {
        if ($tmp["license_idx"] == $idx) {
            $license = $tmp;
            break;
        }
    }
    if (!$license) {
	SPITAJAX_ERROR(1, "Not a license that needs to be rejected");
	return 1;
    }
    if ($license["license_level"] == "project") {
        $target = $license["pid"];
        $project = Project::Lookup($target);
        if (!$project) {
            SPITAJAX_ERROR(1, "No such project");
            return 1;
        }
        if (!$project->IsLeader($this_user)) {
            SPITAJAX_ERROR(1, "Not allowed to accept/reject this license");
            return 1;
        }
    }
    else {
        $target = $license["uid"];
    }
    $this_uid = $this_user->uid();
    $webtask  = WebTask::CreateAnonymous();
    
    $retval = SUEXEC($this_uid, "nobody",
		     "webmanage_licenses -t " . $webtask->task_id() . " -- ".
                     "  norequire $idx $target ",
		     SUEXEC_ACTION_IGNORE);
    $webtask->Refresh();
    if ($retval != 0) {
        if (!$webtask->exited() || $retval < 0) {
            SUEXECERROR(SUEXEC_ACTION_CONTINUE);
            SPITAJAX_ERROR(-1, "Internal error");
        }
        else {
            # Need to pass exitcode through on this one.
            SPITAJAX_ERROR($webtask->exitcode(), $webtask->output());
        }
        $webtask->Delete();
        return;
    }
    $webtask->Delete();
    SPITAJAX_RESPONSE(1);
}

function Do_Request()
{
    global $this_user;
    global $ajax_args;

    if (!isset($ajax_args["idx"]) || $ajax_args["idx"] == "") {
	SPITAJAX_ERROR(1, "Missing license idx");
	return 1;
    }
    $idx  = $ajax_args["idx"];
    if (!is_numeric($idx)) {
	SPITAJAX_ERROR(1, "License idx is not an integer");
	return 1;
    }
    if (!isset($ajax_args["pid"]) || $ajax_args["pid"] == "") {
	SPITAJAX_ERROR(1, "Missing project");
	return 1;
    }
    $project = Project::Lookup($ajax_args["pid"]);
    if (!$project) {
	SPITAJAX_ERROR(1, "No such project");
	return 1;
    }
    if (!(ISADMIN() || $project->IsLeader($this_user))) {
	SPITAJAX_ERROR(1, "Not enough permission to request this license");
	return 1;
    }
    $pid      = $project->pid();
    $this_uid = $this_user->uid();
    $webtask  = WebTask::CreateAnonymous();
    
    $retval = SUEXEC($this_uid, "nobody",
		     "webmanage_licenses -t " . $webtask->task_id() . " -- ".
                     "  require $idx $pid ",
		     SUEXEC_ACTION_IGNORE);
    $webtask->Refresh();
    if ($retval != 0) {
        if (!$webtask->exited() || $retval < 0) {
            SUEXECERROR(SUEXEC_ACTION_CONTINUE);
            SPITAJAX_ERROR(-1, "Internal error");
        }
        else {
            # Need to pass exitcode through on this one.
            SPITAJAX_ERROR($webtask->exitcode(), $webtask->output());
        }
        $webtask->Delete();
        return;
    }
    $webtask->Delete();
    SPITAJAX_RESPONSE(1);
}

# Local Variables:
# mode:php
# End:
?>
