<?php
#
# Copyright (c) 2000-2021 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
chdir("..");
include_once("webtask.php");
chdir("apt");
include_once("profile_defs.php");

#
# Helper function to run a geni-lib (or NS) script.
#
function CheckScript($profile, $script, $project, 
                     $warningsfatal, $usenewgenilib,
                     $refspec, $getparams, $reponame, &$blob)
{
    global $this_user;

    if (isset($this_user)) {
        $this_uid = $this_user->uid();
    }
    else {
        # Maybe not the best approach.
        $this_uid = $profile->creator();
    }

    if (preg_match("/^import/m", $script)) {
        $command = "webrungenilib";
        if ($warningsfatal) {
            $command .= " -W";
        }
        if ($usenewgenilib) {
            $command .= " -N";
        }
        if ($getparams) {
            $pfname = tempnam("/tmp", "genilibparams");
            chmod($pfname, 0666);
            
            $command .= " -P $pfname";
        }
        if ($profile) {
            if ($profile->repourl()) {
                # Repo argument to rungenilib;
                $command .= " -r " . $profile->reponame();
                if ($refspec)
                    $command .= " -h " . escapeshellarg($refspec);
            }
        }
        elseif ($reponame) {
            # Repo argument to rungenilib, when creating new profile.
            $command .= " -r " . $reponame;
        }
    }
    elseif (preg_match("/^source tb_compat/m", $script)) {
        $command = "webns2rspec";
        #
        # We want to parse in the context of the project, so we can do
        # project based checks. 
        #
        if ($project) {
            $command .= " -p " . $project->pid();
        }
        else {
            $command .= " -a ";
        }
    }

    $infname  = tempnam("/tmp", "genilibin");
    $outfname = tempnam("/tmp", "genilibout");

    $fp = fopen($infname, "w");
    fwrite($fp, $script);
    fclose($fp);
    chmod($infname, 0666);
    chmod($outfname, 0666);

    #
    # Invoke the backend.
    #
    $retval = SUEXEC($this_uid, "nobody", "$command -o $outfname $infname",
		     SUEXEC_ACTION_IGNORE);
    
    if ($retval != 0) {
        $errors = file_get_contents($outfname);
	if ($retval < 0) {
	    SUEXECERROR(SUEXEC_ACTION_CONTINUE);
	    SPITAJAX_ERROR(-1, $errors);
	}
	else {
	    $errors = file_get_contents($outfname);
	    SPITAJAX_ERROR(1, $errors);
	}
        unlink($infname);
        unlink($outfname);
        if ($getparams) {
            unlink($pfname);
        }
        return -1;
    }
    $blob = array("rspec" => file_get_contents($outfname));
    if ($getparams) {
        $paramdefs = file_get_contents($pfname);
        if ($paramdefs != "") {
            $blob["paramdefs"] = $paramdefs;
        }
        unlink($pfname);
    }
    unlink($infname);
    unlink($outfname);
    return 0;
}
                     
# Local Variables:
# mode:php
# End:
?>
