#!/usr/bin/perl -w

#
# Copyright (c) 2000-2017 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
use strict;
use English;
use Getopt::Std;
use Socket;
use File::Basename;
use File::Temp qw(tempfile unlink0 :POSIX );

#
# Do an RTE check on a geni-lib script; generate rspec from geni-lib,
# then convert rspec back to geni-lib, and compare the two scripts to
# see if are equal. 
#
sub usage()
{
    print STDERR "Usage: rtecheck [options] infile\n";
    print STDERR "Options:\n";
    print STDERR "  -d       - Turn on debugging\n";
    print STDERR "  -g       - Print intermediate geni-lib script\n";
 
    exit(-1);
}
my $optlist    = "dg";
my $debug      = 0;
my $printgl    = 0;

#
# Configure variables
#
my $TB              = "@prefix@";
my $TBOPS           = "@TBOPSEMAIL@";
my $MAINSITE        = @TBMAINSITE@;
my $RUNGENILIB      = "$TB/bin/rungenilib";
my $RSPECTOGENILIB  = "$TB/bin/rspec2genilib";
my $DIFF            = "/usr/bin/diff";

# Locals
my $this_user;
my $file;

# Protos
sub fatal($);

#
# Turn off line buffering on output
#
$| = 1;

#
# Untaint the path
# 
$ENV{'PATH'} = "$TB/bin:$TB/sbin:/bin:/usr/bin:/sbin:/usr/sbin";
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

#
# Testbed Support libraries
#
use lib "@prefix@/lib";
use emutil;
use libtestbed;
use GeniXML;

#
# Parse command arguments. Once we return from getopts, all that should
# left are the required arguments.
#
my %options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (defined($options{"d"})) {
    $debug = 1;
}
if (defined($options{"g"})) {
    $printgl = 1;
}
usage()
    if (@ARGV != 1);

$file = $ARGV[0];

#
# Must taint check!
#
if ($file =~ /^([-\w\/\.]+)$/) {
    $file = $1;
}
else {
    die("Bad data in argument: $file.");
}

#
# Exclusion for NS converted files which have the original NS file as
# a comment at the end of the file. Lets find that and strip it out of
# the comparison. If the user uses the topology editor we are going to
# lose the comment block anyway, but thats okay.
#
my ($copyfd, $copyname) = tempfile("/tmp/rtecheckXXXXX", UNLINK => 1);
if (!defined($copyfd)) {
    fatal("Could not open temporary file for geni-lib");
}
open(IN, $file) or
    fatal("Could not open $file for reading: $!");
while (<IN>) {
    if ($_ =~ /^\# Here is the original NS file/) {
	while (<IN>) {
	    next
		if ($_ =~ /^\#$/);
	}
	next;
    }
    print $copyfd $_;
}
close(IN);

#
# First convert to rspec.
#
my $rspec = emutil::ExecQuiet("$RUNGENILIB -W $copyname");
if ($?) {
    print STDERR $rspec;
    print STDERR "Could not convert geni-lib script to an rspec\n";
    # For the web interface.
    exit(1);
}
if ($debug) {
    print $rspec;
}

#
# Now convert back to a geni-lib.
#
my ($fd, $filename) = tempfile("/tmp/rtecheckXXXXX", UNLINK => 1);
if (!defined($fd)) {
    fatal("Could not open temporary file for rspec");
}
print $fd $rspec;

my $genilib = emutil::ExecQuiet("$RSPECTOGENILIB -t $filename");
if ($?) {
    print STDERR $genilib;
    print STDERR "Could not convert rspec back to geni-lib\n";
    # For the web interface
    exit(1);
}
if ($debug || $printgl) {
    print $genilib;
}
unlink0($fd, $filename);

#
# Now compare.
#
($fd, $filename) = tempfile("/tmp/rtecheckXXXXX", UNLINK => 1);
if (!defined($fd)) {
    fatal("Could not open temporary file for geni-lib");
}
print $fd $genilib;

my $output = emutil::ExecQuiet("$DIFF -I '^\#\$' -E -B -b $copyname $filename");
if ($?) {
    print STDERR $output;
    # For the web interface.
    exit(1);
}
if ($debug) {
    print $output;
}
exit(0);

sub fatal($) {
    my ($mesg) = $_[0];

    print STDERR "*** $0:\n".
	         "    $mesg\n";
    exit(-1);
}
