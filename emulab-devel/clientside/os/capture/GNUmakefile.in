#
# Copyright (c) 2000-2021 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
SRCDIR		= @srcdir@
TESTBED_SRCDIR	= @top_srcdir@
OBJDIR		= @top_builddir@
SUBDIR		= $(subst $(TESTBED_SRCDIR)/,,$(SRCDIR))
RPC_CPPFLAGS	= @RPC_CPPFLAGS@

SYSTEM	       := $(shell uname -s)
LN_S		= /bin/ln -s
MKDIR_P		= /bin/mkdir -p

include $(OBJDIR)/Makeconf

# For console server boxes that speak telnet.
# Requires libtelnet, see install/ports/libtelnet for a FreeBSD port
WITH_TELNET	= 0

all:		boss-all tipserv-all
boss-all:	capserver
tipserv-all:	capture capture-tty capquery caplogserver caplog caplog.bin caplogroll
client:		capture capture-nossl capquery caplog caplog.bin caplogroll
control:
subboss:	client
rack-control:   capture-nossl

include $(TESTBED_SRCDIR)/GNUmakerules

DBFLAGS	+= -I/usr/local/include -I$(TESTBED_LIBSRCDIR)/libtb
LOGPATH  = $(TBROOT)/log/tiplogs

#
# Define LOG_DROPS to record warnings in syslog whenever chars were dropped
# due to the output device/pty being full.
#
CFLAGS += -Wall -g -O2 -DLOG_DROPS -I${OBJDIR} -DLOG_TESTBED=$(LOG_TESTBED)
CFLAGS += -DLOGPATH=\"$(LOGPATH)\"
CFLAGS += $(RPC_CPPFLAGS)
LDFLAGS  += $(LDSTATIC)

ifeq ($(SYSTEM),Linux)
ifneq ($(wildcard /usr/kerberos/bin/krb5-config),)
CFLAGS   += `/usr/kerberos/bin/krb5-config --cflags`
LIBS     += `/usr/kerberos/bin/krb5-config --libs krb5`
ifneq ($(wildcard /usr/lib/libkrb5support.a),)
LIBS     += -lkrb5support
endif
endif
LIBS	 += -ldl -lz
endif
ifeq ($(WITH_TELNET),1)
CFLAGS	+= -DWITH_TELNET -I/usr/local/include
LIBS	+= -L/usr/local/lib -ltelnet
endif

capture: capture.c capdecls.h
	$(CC) $(CFLAGS) -DUSESOCKETS -DWITHSSL -DPREFIX=\"$(TBROOT)\" -o capture $< $(LDFLAGS) -lssl -lcrypto $(LIBS)

capquery: capquery.c capdecls.h
	$(CC) $(CFLAGS) -DPREFIX=\"$(TBROOT)\" -o $@ $< $(LDFLAGS) $(LIBS)

caplog.bin: caplog.c capdecls.h
	$(CC) $(CFLAGS) -DPREFIX=\"$(TBROOT)\" -o $@ $< $(LDFLAGS) $(LIBS)

caplogserver: caplogserver.c capdecls.h
	$(CC) $(CFLAGS) -DPREFIX=\"$(TBROOT)\" -o $@ $< $(LDFLAGS) $(LIBS)

capture-nossl: capture.c capdecls.h
	$(CC) $(CFLAGS) -DUSESOCKETS -DPREFIX=\"$(TBROOT)\" -o capture-nossl $<

capture-tty: capture.c capdecls.h
	$(CC) $(CFLAGS) -o capture-tty $<

capserver:	capserver.c capdecls.h
	$(CC) $(CFLAGS) $(DBFLAGS) -o capserver $< \
		${TESTBED_LIBOBJDIR}/libtb/libtb.a \
		-L/usr/local/lib/mysql -lmysqlclient

#
# Do not capture install by default.
#
install:	all $(INSTALL_SBINDIR)/capserver $(INSTALL_SBINDIR)/capture
	$(INSTALL_PROGRAM) capture $(INSTALL_DIR)/opsdir/sbin/capture

client-install: client
	-mkdir -p $(DESTDIR)$(INSTALL_SBINDIR)
	$(INSTALL_PROGRAM) capture$(EXE) $(DESTDIR)$(INSTALL_SBINDIR)/capture$(EXE)
	$(INSTALL_PROGRAM) capquery$(EXE) $(DESTDIR)$(INSTALL_SBINDIR)/capquery$(EXE)
	$(INSTALL_PROGRAM) capture-nossl$(EXE) $(DESTDIR)$(INSTALL_SBINDIR)/capture-nossl$(EXE)

subboss-install: subboss client-install

real-install:	all $(INSTALL_SBINDIR)/capserver $(INSTALL_SBINDIR)/capture

tipserv-install:	tipserv-all $(INSTALL_SBINDIR)/capture \
			$(INSTALL_SBINDIR)/caplogserver \
			$(INSTALL_SBINDIR)/caplogroll

rack-control-install: rack-control
	-mkdir -p /var/log/tiplogs
	$(INSTALL_PROGRAM) capture-nossl$(EXE) $(DESTDIR)$(INSTALL_SBINDIR)/capture-nossl$(EXE)

rack-control-startup-install: rack-control-install
	if [ -x "/bin/systemctl" ]; then \
		$(MKDIR_P) /etc/systemd/system ; \
		$(INSTALL_PROGRAM) $(SRCDIR)/capture-boss.service /etc/systemd/system ; \
		$(INSTALL_PROGRAM) $(SRCDIR)/capture-ops.service /etc/systemd/system ; \
		$(MKDIR_P) /etc/systemd/system/multi-user.target.wants ; \
		$(LN_S) ../capture-boss.service \
			/etc/systemd/system/multi-user.target.wants/capture-boss.service ; \
		$(LN_S) ../capture-ops.service \
			/etc/systemd/system/multi-user.target.wants/capture-ops.service ; \
	else \
		$(MKDIR_P) /etc/init.d ; \
		$(INSTALL_PROGRAM) $(SRCDIR)/linux-capture-boss.sh /etc/init.d/capture-boss ; \
		$(INSTALL_PROGRAM) $(SRCDIR)/linux-capture-ops.sh /etc/init.d/capture-ops ; \
		$(MKDIR_P) /etc/rc2.d ; \
		(cd /etc/rc2.d && \
			$(LN_S) -f ../init.d/capture-boss S95capture-boss && \
			$(LN_S) -f ../init.d/capture-ops S95capture-ops) ; \
		$(MKDIR_P) /etc/rc3.d ; \
		(cd /etc/rc3.d && \
			$(LN_S) -f ../init.d/capture-boss S95capture-boss && \
			$(LN_S) -f ../init.d/capture-ops S95capture-ops) ; \
		$(MKDIR_P) /etc/rc1.d ; \
		(cd /etc/rc1.d && \
			$(LN_S) -f ../init.d/capture-boss K13capture-boss && \
			$(LN_S) -f ../init.d/capture-ops K13capture-ops) ; \
		$(MKDIR_P) /etc/rc6.d ; \
		(cd /etc/rc6.d && \
			$(LN_S) -f ../init.d/capture-boss K13capture-boss && \
			$(LN_S) -f ../init.d/capture-ops K13capture-ops) ; \
	fi

clean:
	rm -f *.o capture capture-tty capserver capquery core errs Errs
	rm -f caplog caplog.bin caplogserver caplogroll
