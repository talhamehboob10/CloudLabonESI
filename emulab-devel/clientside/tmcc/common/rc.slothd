#!/bin/sh
#
# Copyright (c) 2002-2004 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

USAGE="usage: $0 (start|stop|restart)"

if [ $# -lt 1 ]
then
        echo $USAGE
        exit 1
fi

. /etc/emulab/paths.sh

BOSSINFO=`$BINDIR/tmcc bossinfo`
BOSSNAME=`echo $BOSSINFO | awk '{ print $1 }'`

ARGS="-s $BOSSNAME "
SEDCMD='sed -e s/^.*=\(.*\)/\1/'

start () {
        for arg in `${BINDIR}/tmcc sdparams`
        do
                case $arg in
                        reg*)
                                ARGS="$ARGS -i `echo $arg | $SEDCMD`"
                                ;;
                        agg*)
                                ARGS="$ARGS -g `echo $arg | $SEDCMD`"
                                ;;
                        load*)
                                ARGS="$ARGS -l `echo $arg | $SEDCMD`"
                                ;;
                        expt*)
                                ARGS="$ARGS -c `echo $arg | $SEDCMD`"
                                ;;
                        ctl*)
                                ARGS="$ARGS -n `echo $arg | $SEDCMD`"
                                ;;
                esac
        done

        ${BINDIR}/slothd ${ARGS}
	exit $?
}

stop () {
        kill `cat /var/run/slothd.pid`
}

case $1 in
        start)
                start
                ;;
        stop)
                stop
                ;;
        restart)
                stop
                sleep 1
                start
                ;;
        *)
                echo "Command $1 not valid"
                echo $USAGE
                exit 1
                ;;
esac
