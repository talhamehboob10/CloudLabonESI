#! /bin/sh
#
# Copyright (c) 2000-2016 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

#
# Enable ICMP ping-of-death
# Support both the old style (host only) and the new style (host+mask+key)
#
# This is a shell script instead of a perl script since we want to use this
# in the frisbee MFS which does not include perl.
#

if [ -r /etc/emulab/paths.sh ]; then
	. /etc/emulab/paths.sh
else
	BINDIR=/etc/testbed
fi

#
# Grotesque sed/awk converts IP addrs into an integer for sysctl
# XXX update: only semi-grotesque now, we convert to hex strings since
# BSD sysctl takes hex numbers (and one-true-awk botches integers close
# to MAXINT)!
#
IPODINFO=`$BINDIR/tmcc ipodinfo`
if [ x"$IPODINFO" != x ]; then
	IPODHOST=`echo $IPODINFO | \
		sed -e 's/.*HOST=\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\1 \2 \3 \4/' | \
		awk '{ printf "0x%02x%02x%02x%02x\n", $1, $2, $3, $4 }'`
	IPODMASK=`echo $IPODINFO | \
		sed -e 's/.*MASK=\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\1 \2 \3 \4/' | \
		awk '{ printf "0x%02x%02x%02x%02x\n", $1, $2, $3, $4 }'`
	IPODKEY=`echo $IPODINFO | \
		sed -e 's/.*HASH=\(.*\)/\1/'`

	# figure out the version
	version=`sysctl net.inet.icmp.ipod.version 2>/dev/null`
	if [ "$version"x = x ]; then
		sysctl net.inet.icmp.ipod.enabled >/dev/null 2>&1
		case $? in
		0)
			# XXX ick we sorta had a version 1.5 in BSD
			sysctl net.inet.icmp.ipod.hash >/dev/null 2>&1
			case $? in
			0)
				version=1.5
				;;
			*)
				version=1
				;;
			esac
			;;
		*)
			version=0
			;;
		esac
	fi

	# enable if possible
	case $version in
	0)
		echo "*** WARNING: no IPOD sysctls, not enabled"
		str=""
		;;
	1)
		sysctl -w net.inet.icmp.ipod_host=$IPODHOST >/dev/null
		sysctl -w net.inet.icmp.ipod_enabled=1 >/dev/null
		str="Old-style"
		;;
	1.5)
		sysctl -w net.inet.icmp.ipod.host=$IPODHOST >/dev/null
		sysctl -w net.inet.icmp.ipod.mask=$IPODMASK >/dev/null
		sysctl -w net.inet.icmp.ipod.hash=$IPODKEY >/dev/null
		sysctl -w net.inet.icmp.ipod.enabled=1 >/dev/null
		str="Authenticated"
		;;
	*)
		sysctl -w net.inet.icmp.ipod.host=$IPODHOST >/dev/null
		sysctl -w net.inet.icmp.ipod.mask=$IPODMASK >/dev/null
		sysctl -w net.inet.icmp.ipod.key=$IPODKEY >/dev/null
		sysctl -w net.inet.icmp.ipod.enabled=1 >/dev/null
		str="Authenticated"
		;;
	esac
	if [ "$str"x != x ]; then
		IPODHOST=`echo $IPODINFO | \
		    sed -e 's/.*HOST=\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\).*/\1/'`
		IPODMASK=`echo $IPODINFO | \
		    sed -e 's/.*MASK=\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\).*/\1/'`
		echo "$str IPOD enabled from $IPODHOST/$IPODMASK"
	fi
else
	echo "*** WARNING: no IPOD info, not enabled"
fi
exit 0
