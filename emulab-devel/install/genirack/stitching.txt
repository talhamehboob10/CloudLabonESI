To setup a rack for stitching with Ion, you will need the following
information:

RACKNAME -- short name for the rack
BANDWIDTH -- Available bandwidth for stitching. Usually 1Gb
CARD,PORT -- card and port numbers on the procurve2 rack switch
EXTERNAL_IFACE_URN -- URN of the Ion end of the link. The name at the
                      end is used to construct the EXTERNAL_WIRE_URN below.
EXTERNAL_WIRE_URN -- URN to give for the entire link. It should be:

  urn:publicid:IDN+ion.internet2.edu+link+link-RACKNAME:procurve2:CARD.PORT-ion:IFACE_NAME

EXTERNAL_AUTHORITY_URN -- URN of ion itself. Usually this is:

  urn:publicid:IDN+ion.internet2.edu+authority+am

VLAN_RANGE -- This is a comma delimited list of ranges. The ranges are
              inclusive.
              Ex: 4-5,9-13
              Ex: 2000-2019

---

Then run the following commands on the rack. I use quotes when
specifying URNs because I'm paranoid about shell special characters:

/usr/testbed/sbin/wap /usr/testbed/sbin/addspecialdevice \
  -t interconnect -s 100 interconnect-ion

/usr/testbed/sbin/wap /usr/testbed/sbin/addspecialiface \
  -b BANDWIDTH -s procurve2,CARD,PORT interconnect-ion eth0

/usr/testbed/sbin/wap /usr/testbed/sbin/addexternalnetwork \
  -w 'EXTERNAL_WIRE_URN' \
  -i 'EXTERNAL_IFACE_URN' \
  -t interconnect-vm ion interconnect-ion \
  'EXTERNAL_AUTHORITY_URN' \
  VLAN_RANGE

---

After constructing these commands from the information above, make
sure to save them as stitch.txt in the rack directory. This way we can
go back and figure out what happened if there is a problem or if we
need to clear the stitching and rerun them.

---

Finally, notify Xi so that he can update the SCS.
