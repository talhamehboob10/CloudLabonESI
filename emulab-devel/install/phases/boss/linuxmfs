#
# Install the linux MFS.
#
use strict;
use libinstall;
use installvars;
use emutil;

my $MFSURL    = "http://www.emulab.net/downloads/linux-mfs";
my @TARBALLS  = (
    {
	"name" => "master",
	"file" => "emulab-grub2-tftpboot-x86-master",
	"args" => "--strip-components 2",
    },
    {
	"name" => "configs",
	"file" => "emulab-grub2-tftpboot-mfs-configs",
	"args" => "--strip-components 1",
    },
    {
	"name" => "buildroot",
	"file" => "buildroot-2018.05-linux-4.14-x86_64",
	"args" => "",
    },
    {
	"name" => "buildroot-full",
	"file" => "buildroot-2018.05-linux-4.14-x86_64-full",
	"args" => "",
    },
);

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    Phase "mfs", "Setting up MFSs", sub {
	foreach my $ref (@TARBALLS) {
	    my $name = $ref->{'name'};
	    my $file = $ref->{'file'};
	    my $args = $ref->{'args'};
	    my $localfile = "$TFTP_DIR/${file}.tar.gz";
	    my $mfsurl    = "$MFSURL/${file}.tar.gz";

	    Phase "mfsfetch", "Fetching tarball $name", sub {
		DoneIfExists($localfile);
		FetchFileFatal($mfsurl, $localfile);
	    };
	    Phase "mfsunpack", "Unpacking MFS tarball $name", sub {
		DoneIfExists("$TFTP_DIR/.${file}");
		ExecQuietFatal("$TAR xzf $localfile --no-same-owner ".
			       "  -C $TFTP_DIR/ $args");
		ExecQuietFatal("/usr/bin/touch $TFTP_DIR/.${file}");
	    };
	    if ($name =~ /^buildroot/) {
		Phase "localize", "Localizing $name MFS", sub {
		    ExecQuietFatal("cd $TFTP_DIR/$file; ./localize_initramfs");
		};
	    }
	    if ($name eq "buildroot") {
		foreach my $mfs ("admin_linux_kernel", "frisbee_linux_kernel",
				 "newnode_linux_kernel") {
		    Phase "symlink", "Symlinking $mfs", sub {
			ExecQuietFatal("cd $TFTP_DIR; ln -s $file $mfs");
		    };
		}
	    }
	    elsif ($name eq "buildroot-full") {
		Phase "symlink", "Symlinking recovery_linux_kernel", sub {
		    ExecQuietFatal("cd $TFTP_DIR; ".
				   "  ln -s $file recovery_linux_kernel");
		};
	    }
	}
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
