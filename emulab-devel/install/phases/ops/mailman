#
# The template
#
use strict;
use libinstall;
use installvars;

my $MAILMANDIR   = "/usr/local/mailman";
my $MAILMANCFG   = "$MAILMANDIR/Mailman/mm_cfg.py";
my $MAILMANLISTS = "$MAILMANDIR/lists";
my $MAILMANPWD   = "$ETCDIR/mailman.pwd";
my $MAILMANALIAS = "/etc/mail/aliases.mailman";
    
sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    my $mailman_hoststuff =
	"DEFAULT_EMAIL_HOST = '${OURDOMAIN}'\n".
	"DEFAULT_URL_HOST = '${USERNODE}'";

    if ($isupdate) {
	Phase "Mailman", "Updating Mailman config", sub {
	    PhaseSkip("mailman no enabled")
		if (!$MAILMANSUPPORT);
	    PhaseSkip("mailman not supported on ops")
		if ($FBSD_MAJOR == 4);

	    DoneIfUpdated($MAILMANCFG, $mailman_hoststuff);
	    UpdateFileFatal($MAILMANCFG,
			    [ qr(^DEFAULT_EMAIL_HOST\s),
			      qr(^DEFAULT_URL_HOST\s) ],
			    $mailman_hoststuff);
	};
	return 0;
    }

    Phase "Mailman", "Setting up Mailman", sub {
	PhaseSkip("mailman not enabled")
	    if (!$MAILMANSUPPORT);
	PhaseSkip("mailman not supported on ops")
	    if ($FBSD_MAJOR == 4);

	# Patch for broken install
	ExecQuietFatal("$CHMOD 2770 $MAILMANDIR/archives/private");

	# Get a password for the mailman installation.
	Phase "password", "Generating mailman password", sub {
	    DoneIfExists($MAILMANPWD);
	    
	    my $string = substr(GenSecretKey(), 0, 10);

	    PhaseFail("Invalid password supplied")
		if (!defined($string) || $string eq "");
	
	    CreateFileFatal("$MAILMANPWD", "$string");
	    ExecQuietFatal("$CHMOD 750 $MAILMANPWD");
	    ExecQuietFatal("$CHGRP tbadmin $MAILMANPWD");
	};
	my $secret = `cat $MAILMANPWD`;
	chomp($secret);

	Phase "config", "Editing local config file", sub {
	    DoneIfEdited("$MAILMANCFG");

	    my $string = "$mailman_hoststuff\n". 
		"add_virtualhost(DEFAULT_URL_HOST, DEFAULT_EMAIL_HOST)";
	
	    AppendToFileFatal($MAILMANCFG, $mailman_hoststuff);
	};
	Phase "mailman", "Creating mailman list", sub {
	    PhaseSkip("List already created")
		if (-d "$MAILMANLISTS/mailman");

	    ExecQuietFatal("cd $MAILMANDIR; ".
			   "bin/newlist -q mailman $TBOPSEMAIL $secret");
	};
	Phase "subscribe", "Subscribing testbed-ops", sub {
	    PhaseSkip("Already subscribed")
		if (ExecQuiet("$MAILMANDIR/bin/list_members mailman | ".
			      "fgrep -q -s $TBOPSEMAIL") == 0);

	    ExecQuietFatal("cd $MAILMANDIR; ".
			   "echo $TBOPSEMAIL | ".
			   "   bin/add_members -r - -w n -a n mailman");
	};
	# Can do this as many times as we like. No way to know.
	ExecQuietFatal("cd $MAILMANDIR; ".
		       "bin/config_list -i data/sitelist.cfg mailman");
	# Ditto
	ExecQuietFatal("cd $MAILMANDIR; ".
		       "bin/mmsitepass $secret; ".
		       "bin/mmsitepass -c $secret");

	Phase "config", "Editing $SENDMAIL_CF", sub {
	    PhaseSkip("Already edited")
		if (ExecQuiet("fgrep AliasFile $SENDMAIL_CF | ".
			      "fgrep -q -s mailman") == 0);

	    # Insert the mailman aliases file first, to avoid a forwarding loop.
	    ExecQuietFatal("sed -i .orig -e ".
			   "  '/AliasFile=/s;=;=$MAILMANALIAS,;' ".
			   "$SENDMAIL_CF");
	};
	Phase "aliases", "Creating $MAILMANALIAS", sub {
	    DoneIfExists($MAILMANALIAS);
	    CreateFileFatal($MAILMANALIAS);
	};
	Phase "newaliases", "Running newaliases", sub {
	    PhaseSkip("No new aliases") if PhaseWasSkipped("aliases");
	    ExecQuietFatal($NEWALIASES);
	};
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
