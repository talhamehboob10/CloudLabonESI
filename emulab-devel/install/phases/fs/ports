#
# The template
#
use strict;
use libinstall;
use installvars;

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    # Replace if this script does an update for ip/domain.
    return 0
	if ($isupdate);

    Phase "ports", "Installing ports", sub {
	DoneIfPackageInstalled($FS_PORT, 1);
	Phase "packages", "Installing packages", sub {
	    if (!$packagedir) {
		PhaseSkip("No package directory provided");
	    }
	    AddPackage($FS_PORT, $packagedir);
	};
	PhaseSkip("Package directory provided; not installing from sources")
	    if ($packagedir);

	Phase "pcopy", "Copying ports into place", sub {
	    DoneIfExists("$PORTSMISCDIR/emulab-fs");
	    ExecQuietFatal("$SH $TOP_SRCDIR/ports/ports-install");
	};
	Phase "pinstall", "Installing ports (may take a while)", sub {
	    #
	    # No interaction or options to worry about,
	    # so it's safe to install the port from this script
	    #
	    my $pwd = `$PWD`;
	    chomp $pwd;
	    chdir "$PORTSMISCDIR/emulab-fs" or
		PhaseFail "Unable to change to $PORTSMISCDIR/emulab-fs: $!";
	    ExecQuietFatal("make -DBATCH install");
	    chdir $pwd;
	};
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
