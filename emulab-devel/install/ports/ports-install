#!/bin/sh

#
# A little script to put the testbed ports into the ports tree
#

PORTSDIR=${PORTSDIR:-/usr/ports}
PORTSUBDIR=misc
SRCDIR=`dirname $0`
PORTS="abac emulab-boss emulab-extras emulab-fs emulab-genilib emulab-ops emulab-protogeni emulab-pubsub emulab-tftp-hpa emulab-tipserv emulab-ipmitool-old libtelnet otcl xerces-c2 p5-IO-EventMux p5-IO-EventMux-Socket-MsgHdr p5-Privileges-Drop p5-RPC-Async"

echo "Copying Emulab ports ..."
for PORT in $PORTS
do
    if [ -d "$PORTSDIR/$PORTSUBDIR/$PORT" ]
    then
	echo "WARNING: $PORT already installed, skipping..."
    else
	cp -r $SRCDIR/$PORT $PORTSDIR/$PORTSUBDIR
    fi
    if [ "$?" != "0" ]
    then
	exit 1
    fi
done

echo "Patching medusa 2.2 port ..."
if [ -d $PORTSDIR/security/medusa ]
then
    if [ ! -e "$PORTSDIR/security/medusa/files/patch-src" ]
    then
	cp medusa-2.2.patch $PORTSDIR/security/medusa/files/patch-src
    else
	echo 'WARNING: medusa patch already installed, skipping...'
    fi
else
    echo 'WARNING: no Medusa port!'
fi

# "register" the emulab ports
if [ ! -e "$PORTSDIR/$PORTSUBDIR/Makefile.orig" ]
then
    echo "Patching $PORTSDIR/$PORTSUBDIR/Makefile ..."
    patch -p0 $PORTSDIR/$PORTSUBDIR/Makefile ports.patch
else
    echo "WARNING: $PORTSDIR/$PORTSUBDIR/Makefile already patched, skipping..."
fi
echo "Done!"
exit 0
