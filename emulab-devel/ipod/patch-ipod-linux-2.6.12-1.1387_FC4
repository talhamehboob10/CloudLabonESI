diff -ur linux-2.6.12-1.1387_FC4/include/linux/sysctl.h linux-2.6.12/include/linux/sysctl.h
--- linux-2.6.12-1.1387_FC4/include/linux/sysctl.h	2005-07-12 01:00:08.000000000 -0600
+++ linux-2.6.12/include/linux/sysctl.h	2005-07-06 11:25:25.000000000 -0600
@@ -351,6 +351,13 @@
 	NET_TCP_TSO_WIN_DIVISOR=107,
 	NET_TCP_BIC_BETA=108,
 	NET_IPV4_ICMP_ERRORS_USE_INBOUND_IFADDR=109,
+
+   	/* CONFIG_ICMP_PINGOFDEATH */
+  	NET_IPV4_ICMP_POD_ENABLED=110,
+  	NET_IPV4_ICMP_POD_HOST=111,
+  	NET_IPV4_ICMP_POD_MASK=112,
+  	NET_IPV4_ICMP_POD_KEY=113,
+  	NET_IPV4_ICMP_POD_VERSION=114,
 };
 
 enum {
diff -ur linux-2.6.12-1.1387_FC4/net/ipv4/Kconfig linux-2.6.12/net/ipv4/Kconfig
--- linux-2.6.12-1.1387_FC4/net/ipv4/Kconfig	2005-06-17 13:48:29.000000000 -0600
+++ linux-2.6.12/net/ipv4/Kconfig	2005-07-06 11:22:48.000000000 -0600
@@ -407,5 +407,11 @@
 config IP_TCPDIAG_IPV6
 	def_bool (IP_TCPDIAG=y && IPV6=y) || (IP_TCPDIAG=m && IPV6)
 
+#
+# Emulab special
+#
+config ICMP_PINGOFDEATH
+	bool "ICMP: ICMP Ping-of-Death (Emulab)"
+
 source "net/ipv4/ipvs/Kconfig"
 
diff -ur linux-2.6.12-1.1387_FC4/net/ipv4/icmp.c linux-2.6.12/net/ipv4/icmp.c
--- linux-2.6.12-1.1387_FC4/net/ipv4/icmp.c	2005-06-17 13:48:29.000000000 -0600
+++ linux-2.6.12/net/ipv4/icmp.c	2005-07-06 11:22:48.000000000 -0600
@@ -918,6 +918,67 @@
 out:;
 }
 
+#ifdef CONFIG_ICMP_PINGOFDEATH
+#include <linux/reboot.h>
+
+int sysctl_ipod_version = 2;
+int sysctl_ipod_enabled = 0;
+u32 sysctl_ipod_host = 0xffffffff;
+u32 sysctl_ipod_mask = 0xffffffff;
+char sysctl_ipod_key[32+1] = { "SETMETOSOMETHINGTHIRTYTWOBYTES!!" };
+#define IPOD_CHECK_KEY \
+	(sysctl_ipod_key[0] != 0)
+#define IPOD_VALID_KEY(d) \
+	(strncmp(sysctl_ipod_key, (char *)(d), strlen(sysctl_ipod_key)) == 0)
+
+static void icmp_ping_of_death(struct sk_buff *skb)
+{
+	struct icmphdr *icmph = skb->h.icmph;
+	struct iphdr *iph = skb->nh.iph;
+	int doit = 0;
+
+#if 0
+	printk(KERN_INFO "IPOD: got type=6, code=%d, host=%u.%u.%u.%u\n", icmph->code, ntohs(iph->tot_len), NIPQUAD(iph->saddr));
+#endif
+
+	/*
+	 * If IPOD not enabled or wrong ICMP code, ignore.
+	 */
+	if (!sysctl_ipod_enabled || icmph->code != 6)
+		return;
+
+	/*
+	 * First check the source address info.
+	 * If host not set, ignore.
+	 */
+	if (sysctl_ipod_host != 0xffffffff &&
+	    (ntohl(iph->saddr) & sysctl_ipod_mask) == sysctl_ipod_host) {
+		/*
+		 * Now check the key if enabled.
+		 * If packet doesn't contain enough data or key
+		 * is otherwise invalid, ignore.
+		 */
+		if (IPOD_CHECK_KEY) {
+			if (pskb_may_pull(skb, sizeof(sysctl_ipod_key)-1) &&
+			    IPOD_VALID_KEY(skb->data))
+				doit = 1;
+		} else {
+			doit = 1;
+		}
+	}
+
+	if (doit) {
+		sysctl_ipod_enabled = 0;
+		printk(KERN_CRIT "IPOD: reboot forced by %u.%u.%u.%u...\n",
+		       NIPQUAD(iph->saddr));
+		machine_restart(NULL);
+	} else {
+		printk(KERN_WARNING "IPOD: from %u.%u.%u.%u rejected\n",
+		       NIPQUAD(iph->saddr));
+	}
+}
+#endif
+
 static void icmp_discard(struct sk_buff *skb)
 {
 }
@@ -1032,12 +1093,22 @@
 		.handler = icmp_redirect,
 		.error = 1,
 	},
+#ifdef CONFIG_ICMP_PINGOFDEATH
+	/* PING_OF_DEATH (6) */
+	[6] = {
+		.output_entry = ICMP_MIB_DUMMY,
+		.input_entry = ICMP_MIB_DUMMY,
+		.handler = icmp_ping_of_death,
+		.error = 1,
+	},
+#else
 	[6] = {
 		.output_entry = ICMP_MIB_DUMMY,
 		.input_entry = ICMP_MIB_INERRORS,
 		.handler = icmp_discard,
 		.error = 1,
 	},
+#endif
 	[7] = {
 		.output_entry = ICMP_MIB_DUMMY,
 		.input_entry = ICMP_MIB_INERRORS,
diff -ur linux-2.6.12-1.1387_FC4/net/ipv4/sysctl_net_ipv4.c linux-2.6.12/net/ipv4/sysctl_net_ipv4.c
--- linux-2.6.12-1.1387_FC4/net/ipv4/sysctl_net_ipv4.c	2005-06-17 13:48:29.000000000 -0600
+++ linux-2.6.12/net/ipv4/sysctl_net_ipv4.c	2005-07-06 11:27:39.000000000 -0600
@@ -24,6 +24,13 @@
 extern int sysctl_icmp_echo_ignore_broadcasts;
 extern int sysctl_icmp_ignore_bogus_error_responses;
 extern int sysctl_icmp_errors_use_inbound_ifaddr;
+#ifdef CONFIG_ICMP_PINGOFDEATH
+extern int sysctl_ipod_version;
+extern int sysctl_ipod_enabled;
+extern u32 sysctl_ipod_host;
+extern u32 sysctl_ipod_mask;
+extern char sysctl_ipod_key[32+1];
+#endif
 
 /* From ip_fragment.c */
 extern int sysctl_ipfrag_low_thresh;
@@ -699,6 +706,18 @@
 		.mode		= 0644,
 		.proc_handler	= &proc_dointvec,
 	},
+#ifdef CONFIG_ICMP_PINGOFDEATH
+ 	{NET_IPV4_ICMP_POD_ENABLED, "icmp_ipod_version",
+ 	 &sysctl_ipod_version, sizeof(int), 0444, NULL, &proc_dointvec},
+ 	{NET_IPV4_ICMP_POD_ENABLED, "icmp_ipod_enabled",
+ 	 &sysctl_ipod_enabled, sizeof(int), 0644, NULL, &proc_dointvec},
+ 	{NET_IPV4_ICMP_POD_HOST, "icmp_ipod_host",
+ 	 &sysctl_ipod_host, sizeof(int), 0644, NULL, &proc_dointvec},
+ 	{NET_IPV4_ICMP_POD_MASK, "icmp_ipod_mask",
+ 	 &sysctl_ipod_mask, sizeof(int), 0644, NULL, &proc_dointvec},
+ 	{NET_IPV4_ICMP_POD_KEY, "icmp_ipod_key",
+ 	 sysctl_ipod_key, sizeof(sysctl_ipod_key), 0600, NULL, &proc_dostring, &sysctl_string},
+#endif
 	{ .ctl_name = 0 }
 };
 
