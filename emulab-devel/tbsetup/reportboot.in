#!/usr/bin/perl -w
#
# Copyright (c) 2014-2016 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
use English;
use Socket;

#
# This script is invoked on a dhcpd "commit" event.
#
# Intended to trigger Emulab node boot related activities.
#

sub usage()
{
    print "Usage: $0 IP MAC boot-type\n";
    print("boot-type is one of OS, PXE, UBOOT.\n");
 
    exit(1);
}
sub fatal($);

#
# Configure variables
#
my $SOCKETFILE    = "/var/run/reportboot.sock";

#
# Turn off line buffering on output
#
$| = 1;

if ($UID != 0) {
    fatal("Must be root to run this script");
}
if (@ARGV != 3) {
    usage();
}
my ($ip,$mac,$which) = @ARGV;

if (! -e $SOCKETFILE) {
    fatal("$SOCKETFILE does not exist!");
}
socket(SOCK, PF_UNIX, SOCK_STREAM, 0)
    or fatal("Could not create socket");
connect(SOCK, sockaddr_un($SOCKETFILE))
    or fatal("Could not connect socket");
print SOCK "$ip,$mac,$which\n";
close(SOCK);
exit(0);

sub fatal($)
{
    my ($msg) = @_;
    
    die("*** $0:\n".
	"    $msg\n");
}
