#! /usr/bin/env python
#
# Copyright (c) 2006 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

import sys
import os, os.path
import getopt

def usage():
    print "Usage: example_checkup [-h] <object> <state>"
    return

try:
    opts, req_args = getopt.getopt(sys.argv[1:],
                                   "h",
                                   [ "help", ])
    
    for opt, val in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit()
            pass
        pass
    
    if len(req_args) < 2:
        raise getopt.error('error: too few arguments')

    if len(req_args) > 2:
        raise getopt.error('error: too many arguments')

    object, state = req_args

    if state not in ("new", "running", "locked"):
        raise getopt.error('error: unknown state - %s' % state)
    
    pass
except getopt.error, e:
    print e.args[0]
    usage()
    sys.exit(2)
    pass

if state == "new":
    file = open("counter", "w")
    file.write("0")
    file.close()
    rc = 10
    pass
elif state == "running":
    value = int(open("counter", "r").read())
    if value < 2:
        file = open("counter", "w")
        file.write(str(value + 1))
        file.close()
        rc = 10
        pass
    else:
        sys.stderr.write("error: value not less than 2 - %d\n" % value)
        sys.stderr.write("info: remove %s/counter to unlock this checkup.\n" %
                         os.getcwd())
        rc = 1
        pass
    pass
elif state == "locked":
    if os.path.exists("counter"):
        rc = 10
        pass
    else:
        rc = 0
        pass
    pass

sys.exit(rc)
