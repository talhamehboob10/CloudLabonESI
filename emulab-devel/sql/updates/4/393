#
# Add the relocatable flag to indicate whether the lba_low field must
# be respected (0) or whether the image is "position independent" (1).
#
use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBSlotExists("apt_profiles", "locked")) {
	DBQueryFatal("ALTER TABLE apt_profiles ADD ".
		     " `locked` datetime default NULL ".
		     "   AFTER listed");
    }
    if (!DBSlotExists("apt_profiles", "status")) {
	DBQueryFatal("ALTER TABLE apt_profiles ADD ".
		     " `status` varchar(32) default NULL ".
		     "   AFTER locked");
    }
    if (!DBTableExists("web_sessions")) {
	DBQueryFatal("CREATE TABLE `web_sessions` ( ".
		     " `session_id` varchar(128) NOT NULL default '', ".
		     " `session_expires` datetime NOT NULL ".
		     "          default '0000-00-00 00:00:00', ".
		     " `session_data` text, ".
		     " PRIMARY KEY  (`session_id`) ".
		     ") ENGINE=MyISAM DEFAULT CHARSET=latin1");
    }
    if (!DBTableExists("web_tasks")) {
	DBQueryFatal("CREATE TABLE `web_tasks` ( ".
		     " `task_id` varchar(128) NOT NULL default '', ".
		     " `created` datetime NOT NULL ".
		     "             default '0000-00-00 00:00:00', ".
		     " `modified` datetime NOT NULL ".
		     "             default '0000-00-00 00:00:00', ".
		     " `exited` datetime default NULL, ".
		     " `process_id` int(11) default '0', ".
		     " `object_uuid` varchar(40) NOT NULL default '', ".
		     " `exitcode` tinyint(3) default '0', ".
		     " `task_data` text, ".
		     " PRIMARY KEY  (`task_id`), ".
		     " KEY `object_uuid` (`object_uuid`) ".
		     ") ENGINE=MyISAM DEFAULT CHARSET=latin1");
    }
    return 0;
}

# Local Variables:
# mode:perl
# End:
