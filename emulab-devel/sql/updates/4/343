#
# Add a public and compressed flag to logfiles.
#
use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBSlotExists("logfiles", "public")) {
	DBQueryFatal("alter table logfiles add  ".
		     " `public` tinyint(1) NOT NULL default '0'");
    }
    if (!DBSlotExists("logfiles", "compressed")) {
	DBQueryFatal("alter table logfiles add  ".
		     " `compressed` tinyint(1) NOT NULL default '0'");
    }
    if (!DBSlotExists("logfiles", "stored")) {
	DBQueryFatal("alter table logfiles add  ".
		     " `stored` tinyint(1) NOT NULL default '0'");
    }
    if (!DBSlotExists("logfiles", "idx")) {
	DBQueryFatal("alter table logfiles add  ".
		     " `logidx` int(10) unsigned NOT NULL default '0' ".
		     " after logid");
    }
    if (!DBKeyExists("logfiles", "logidx")) {
	DBQueryFatal("alter table logfiles add  ".
		     " KEY `logidx` (`logidx`)");
    }
    if (!DBTableExists("logfile_metadata")) {
	DBQueryFatal("CREATE TABLE `logfile_metadata` ( ".
		     " `logidx` int(10) unsigned NOT NULL default '0', ".
		     " `idx` int(10) unsigned NOT NULL auto_increment, ".
		     " `metakey` tinytext, ".
		     " `metaval` tinytext, ".
		     " PRIMARY KEY  (`logidx`,`idx`), ".
		     " UNIQUE KEY `logidxkey` (`logidx`,`metakey`(128)), ".
		     " KEY `headervalue` (`metakey`(64),`metaval`(128)) ".
		     ") ENGINE=MyISAM DEFAULT CHARSET=latin1");
    }
    #
    # Need to assign indicies to all of the existing records.
    #
    my $query_result =
	DBQueryFatal("select logid from logfiles ".
		     "where logidx=0 order by date_created asc");
    while (my ($logid) = $query_result->fetchrow_array()) {
	my $idx = TBGetUniqueIndex('next_logfile', 1);
	DBQueryFatal("update logfiles set logidx='$idx' ".
		     "where logid='$logid'");
    }
    return 0;
}
1;

# Local Variables:
# mode:perl
# End:
