#
# Site variables for controlling HW info collection
#
use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;
    my $var;

    $var = "hwcollect/interval";
    if (!TBSiteVarExists($var)) {
	my $desc = "If non-zero, interval in minutes between HW collection events for any node. Whenever a node is in emulab-ops/hwcheckup and more than the interval has passed since the last collection, new data will be collected. Set to zero to disable collection.";
	my $defval = "0";

	DBQueryFatal("INSERT INTO sitevariables VALUES ".
                     "('$var',NULL,'$defval','$desc',0)");
    }
    $var = "hwcollect/experiment";
    if (!TBSiteVarExists($var)) {
	my $desc = "Project (pid) or experiment (pid/eid) in which the node must reside to run collection.";
	my $defval = "emulab-ops/hwcheckup";

	DBQueryFatal("INSERT INTO sitevariables VALUES ".
                     "('$var',NULL,'$defval','$desc',0)");
    }
    $var = "hwcollect/outputdir";
    if (!TBSiteVarExists($var)) {
	my $desc = "NFS-shared filesystem into which HW info command output is stored. Directory must exist.";
	my $defval = "/proj/emulab-ops/hwcollect";

	DBQueryFatal("INSERT INTO sitevariables VALUES ".
                     "('$var',NULL,'$defval','$desc',0)");
    }
    $var = "hwcollect/commands";
    if (!TBSiteVarExists($var)) {
	my $desc = "Collection programs to run. A semi-colon separated list of OS,program,cmdline triples.";
	my $defval = "Any,dmesg,dmesg;Linux,lshw,lshw";

	DBQueryFatal("INSERT INTO sitevariables VALUES ".
                     "('$var',NULL,'$defval','$desc',0)");
    }
    return 0;
}
1;

# Local Variables:
# mode:perl
# End:
