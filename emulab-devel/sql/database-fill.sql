-- MySQL dump 8.23
--
-- Host: localhost    Database: tbdb
-- -------------------------------------------------------
-- Server version	3.23.59-nightly-20050301-log

--
-- Dumping data for table `causes`
--


REPLACE INTO causes VALUES ('temp','Temp Resource Shortage');
REPLACE INTO causes VALUES ('user','User Error');
REPLACE INTO causes VALUES ('internal','Internal Error');
REPLACE INTO causes VALUES ('software','Software Problem');
REPLACE INTO causes VALUES ('hardware','Hardware Problem');
REPLACE INTO causes VALUES ('unknown','Cause Unknown');
REPLACE INTO causes VALUES ('canceled','Canceled');

--
-- Dumping data for table `comments`
--


REPLACE INTO comments VALUES ('users','','testbed user accounts');
REPLACE INTO comments VALUES ('experiments','','user experiments');
REPLACE INTO comments VALUES ('images','','available disk images');
REPLACE INTO comments VALUES ('current_reloads','','currently pending disk reloads');
REPLACE INTO comments VALUES ('delays','','delay nodes');
REPLACE INTO comments VALUES ('loginmessage','','appears under login button in web interface');
REPLACE INTO comments VALUES ('nodes','','hardware, software, and status of testbed machines');
REPLACE INTO comments VALUES ('projects','','projects using the testbed');
REPLACE INTO comments VALUES ('partitions','','loaded operating systems on node partitions');
REPLACE INTO comments VALUES ('os_info','','available operating system features and information');
REPLACE INTO comments VALUES ('reserved','','node reservation');
REPLACE INTO comments VALUES ('wires','','physical wire types and connections');
REPLACE INTO comments VALUES ('nologins','','presence of a row will disallow non-admin web logins');
REPLACE INTO comments VALUES ('nsfiles','','NS simulator files used to configure experiments');
REPLACE INTO comments VALUES ('tiplines','','serial control \'TIP\' lines');
REPLACE INTO comments VALUES ('proj_memb','','project membership');
REPLACE INTO comments VALUES ('group_membership','','group membership');
REPLACE INTO comments VALUES ('node_types','','specifications regarding types of node hardware available');
REPLACE INTO comments VALUES ('last_reservation','','the last project to have reserved listed nodes');
REPLACE INTO comments VALUES ('groups','','groups information');
REPLACE INTO comments VALUES ('vlans','','configured router VLANs');
REPLACE INTO comments VALUES ('tipservers','','machines driving serial control \'TIP\' lines');
REPLACE INTO comments VALUES ('uidnodelastlogin','','last node logged into by users');
REPLACE INTO comments VALUES ('nodeuidlastlogin','','last user logged in to nodes');
REPLACE INTO comments VALUES ('scheduled_reloads','','pending disk reloads');
REPLACE INTO comments VALUES ('tmcd_redirect','','used to redirect node configuration client (TMCC) to \'fake\' database for testing purposes');
REPLACE INTO comments VALUES ('deltas','','user filesystem deltas');
REPLACE INTO comments VALUES ('delta_compat','','delta/OS compatibilities');
REPLACE INTO comments VALUES ('delta_inst','','nodes on which listed deltas are installed');
REPLACE INTO comments VALUES ('delta_proj','','projects which own listed deltas');
REPLACE INTO comments VALUES ('next_reserve','','scheduled reservations (e.g. by sched_reserve)');
REPLACE INTO comments VALUES ('outlets','','power controller and outlet connections for nodes');
REPLACE INTO comments VALUES ('exppid_access','','allows access to one project\'s experiment by another project');
REPLACE INTO comments VALUES ('lastlogin','','list of recently logged in web interface users');
REPLACE INTO comments VALUES ('switch_stacks','','switch stack membership');
REPLACE INTO comments VALUES ('switch_stack_types','','types of each switch stack');
REPLACE INTO comments VALUES ('nodelog','','log entries for nodes');
REPLACE INTO comments VALUES ('unixgroup_membership','','Unix group memberships for control (non-experiment) nodes');
REPLACE INTO comments VALUES ('interface_types','','network interface types');
REPLACE INTO comments VALUES ('foo','bar','baz');
REPLACE INTO comments VALUES ('login','','currently active web logins');
REPLACE INTO comments VALUES ('portmap','','provides consistency of ports across swaps');
REPLACE INTO comments VALUES ('webdb_table_permissions','','table access permissions for WebDB interface ');
REPLACE INTO comments VALUES ('comments','','database table and row descriptions (such as this)');
REPLACE INTO comments VALUES ('interfaces','','node network interfaces');
REPLACE INTO comments VALUES ('foreign_keys','','foreign key constraints for use by the dbcheck script');
REPLACE INTO comments VALUES ('nseconfigs','','Table for storing NSE configurations');
REPLACE INTO comments VALUES ('widearea_delays','','Delay and bandwidth metrics between WAN nodes');
REPLACE INTO comments VALUES ('virt_nodes','','Experiment virtual nodes');

--
-- Dumping data for table `client_services`
--


REPLACE INTO `client_services` VALUES (10,'rc.tbsetup','boot','every',1);
REPLACE INTO `client_services` VALUES (20,'rc.ipod','boot','every',0);
REPLACE INTO `client_services` VALUES (30,'rc.healthd','boot','every',0);
REPLACE INTO `client_services` VALUES (40,'rc.slothd','boot','every',0);
REPLACE INTO `client_services` VALUES (50,'rc.firewall','boot','every',0);
REPLACE INTO `client_services` VALUES (60,'rc.tpmsetup','boot','every',0);
REPLACE INTO `client_services` VALUES (70,'rc.misc','boot','every',0);
REPLACE INTO `client_services` VALUES (80,'rc.localize','boot','every',0);
REPLACE INTO `client_services` VALUES (90,'rc.keys','boot','every',0);
REPLACE INTO `client_services` VALUES (100,'rc.mounts','boot','every',0);
REPLACE INTO `client_services` VALUES (110,'rc.blobs','boot','every',0);
REPLACE INTO `client_services` VALUES (120,'rc.topomap','boot','every',0);
REPLACE INTO `client_services` VALUES (130,'rc.accounts','boot','every',0);
REPLACE INTO `client_services` VALUES (140,'rc.route','boot','every',0);
REPLACE INTO `client_services` VALUES (150,'rc.tunnels','boot','every',0);
REPLACE INTO `client_services` VALUES (160,'rc.ifconfig','boot','every',0);
REPLACE INTO `client_services` VALUES (170,'rc.delays','boot','every',0);
REPLACE INTO `client_services` VALUES (180,'rc.hostnames','boot','every',0);
REPLACE INTO `client_services` VALUES (190,'rc.lmhosts','boot','every',0);
REPLACE INTO `client_services` VALUES (200,'rc.trace','boot','every',0);
REPLACE INTO `client_services` VALUES (210,'rc.syncserver','boot','every',0);
REPLACE INTO `client_services` VALUES (220,'rc.trafgen','boot','every',0);
REPLACE INTO `client_services` VALUES (230,'rc.tarfiles','boot','every',0);
REPLACE INTO `client_services` VALUES (240,'rc.rpms','boot','every',0);
REPLACE INTO `client_services` VALUES (250,'rc.progagent','boot','every',0);
REPLACE INTO `client_services` VALUES (260,'rc.linkagent','boot','every',0);
REPLACE INTO `client_services` VALUES (270,'rc.tiptunnels','boot','every',0);
REPLACE INTO `client_services` VALUES (280,'rc.motelog','boot','every',0);
REPLACE INTO `client_services` VALUES (290,'rc.simulator','boot','every',0);
REPLACE INTO `client_services` VALUES (1000,'rc.canaryd','boot','every',1);
REPLACE INTO `client_services` VALUES (1010,'rc.linktest','boot','every',1);
REPLACE INTO `client_services` VALUES (1020,'rc.isup','boot','every',1);
REPLACE INTO `client_services` VALUES (1030,'rc.startcmd','boot','every',0);
REPLACE INTO `client_services` VALUES (1040,'rc.vnodes','boot','every',1);
REPLACE INTO `client_services` VALUES (1050,'rc.subnodes','boot','every',1);

--
-- Dumping data for table `event_eventtypes`
--


REPLACE INTO event_eventtypes VALUES (0,'REBOOT');
REPLACE INTO event_eventtypes VALUES (1,'START');
REPLACE INTO event_eventtypes VALUES (2,'STOP');
REPLACE INTO event_eventtypes VALUES (3,'UP');
REPLACE INTO event_eventtypes VALUES (4,'DOWN');
REPLACE INTO event_eventtypes VALUES (5,'UPDATE');
REPLACE INTO event_eventtypes VALUES (6,'MODIFY');
REPLACE INTO event_eventtypes VALUES (7,'SET');
REPLACE INTO event_eventtypes VALUES (8,'TIME');
REPLACE INTO event_eventtypes VALUES (9,'RESET');
REPLACE INTO event_eventtypes VALUES (10,'KILL');
REPLACE INTO event_eventtypes VALUES (11,'HALT');
REPLACE INTO event_eventtypes VALUES (12,'SWAPOUT');
REPLACE INTO event_eventtypes VALUES (13,'NSEEVENT');
REPLACE INTO event_eventtypes VALUES (14,'REPORT');
REPLACE INTO event_eventtypes VALUES (15,'ALERT');
REPLACE INTO event_eventtypes VALUES (16,'SETDEST');
REPLACE INTO event_eventtypes VALUES (17,'COMPLETE');
REPLACE INTO event_eventtypes VALUES (18,'MESSAGE');
REPLACE INTO event_eventtypes VALUES (19,'LOG');
REPLACE INTO event_eventtypes VALUES (20,'RUN');
REPLACE INTO event_eventtypes VALUES (21,'SNAPSHOT');
REPLACE INTO event_eventtypes VALUES (22,'RELOAD');
REPLACE INTO event_eventtypes VALUES (23,'CLEAR');
REPLACE INTO event_eventtypes VALUES (24,'CREATE');
REPLACE INTO event_eventtypes VALUES (25,'STOPRUN');

--
-- Dumping data for table `event_objecttypes`
--


REPLACE INTO event_objecttypes VALUES (0,'TBCONTROL');
REPLACE INTO event_objecttypes VALUES (1,'LINK');
REPLACE INTO event_objecttypes VALUES (2,'TRAFGEN');
REPLACE INTO event_objecttypes VALUES (3,'TIME');
REPLACE INTO event_objecttypes VALUES (4,'PROGRAM');
REPLACE INTO event_objecttypes VALUES (5,'FRISBEE');
REPLACE INTO event_objecttypes VALUES (6,'SIMULATOR');
REPLACE INTO event_objecttypes VALUES (7,'LINKTEST');
REPLACE INTO event_objecttypes VALUES (8,'NSE');
REPLACE INTO event_objecttypes VALUES (9,'SLOTHD');
REPLACE INTO event_objecttypes VALUES (10,'NODE');
REPLACE INTO event_objecttypes VALUES (11,'SEQUENCE');
REPLACE INTO event_objecttypes VALUES (12,'TIMELINE');
REPLACE INTO event_objecttypes VALUES (13,'CONSOLE');
REPLACE INTO event_objecttypes VALUES (14,'TOPOGRAPHY');
REPLACE INTO event_objecttypes VALUES (15,'LINKTRACE');
REPLACE INTO event_objecttypes VALUES (16,'EVPROXY');
REPLACE INTO event_objecttypes VALUES (17,'BGMON');
REPLACE INTO event_objecttypes VALUES (18,'DISK');
REPLACE INTO event_objecttypes VALUES (19,'CUSTOM');
REPLACE INTO event_objecttypes VALUES (20,'BSTORE');

--
-- Dumping data for table `exported_tables`
--


REPLACE INTO exported_tables VALUES ('causes');
REPLACE INTO exported_tables VALUES ('comments');
REPLACE INTO exported_tables VALUES ('event_eventtypes');
REPLACE INTO exported_tables VALUES ('event_objecttypes');
REPLACE INTO exported_tables VALUES ('exported_tables');
REPLACE INTO exported_tables VALUES ('foreign_keys');
REPLACE INTO exported_tables VALUES ('mode_transitions');
REPLACE INTO exported_tables VALUES ('priorities');
REPLACE INTO exported_tables VALUES ('state_timeouts');
REPLACE INTO exported_tables VALUES ('state_transitions');
REPLACE INTO exported_tables VALUES ('state_triggers');
REPLACE INTO exported_tables VALUES ('table_regex');
REPLACE INTO exported_tables VALUES ('testsuite_preentables');
REPLACE INTO exported_tables VALUES ('webdb_table_permissions');
REPLACE INTO exported_tables VALUES ('emulab_pubs_month_map');
REPLACE INTO exported_tables VALUES ('event_triggertypes');
REPLACE INTO exported_tables VALUES ('client_services');

--
-- Dumping data for table `foreign_keys`
--


REPLACE INTO foreign_keys VALUES ('projects','head_uid','users','uid');
REPLACE INTO foreign_keys VALUES ('groups','pid','projects','pid');
REPLACE INTO foreign_keys VALUES ('groups','leader','users','uid');
REPLACE INTO foreign_keys VALUES ('experiments','expt_head_uid','users','uid');
REPLACE INTO foreign_keys VALUES ('experiments','pid','projects','pid');
REPLACE INTO foreign_keys VALUES ('experiments','pid,gid','groups','pid,gid');
REPLACE INTO foreign_keys VALUES ('os_info','pid','projects','pid');
REPLACE INTO foreign_keys VALUES ('node_types','osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('node_types','delay_osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('nodes','def_boot_osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('nodes','next_boot_osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('nodes','type','node_types','type');
REPLACE INTO foreign_keys VALUES ('images','pid','projects','pid');
REPLACE INTO foreign_keys VALUES ('images','part1_osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('images','part2_osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('images','part3_osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('images','part4_osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('images','default_osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('current_reloads','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('current_reloads','image_id','images','imageid');
REPLACE INTO foreign_keys VALUES ('delays','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('delays','eid,pid','experiments','eid,pid');
REPLACE INTO foreign_keys VALUES ('partitions','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('partitions','osid','os_info','osid');
REPLACE INTO foreign_keys VALUES ('exppid_access','exp_pid,exp_eid','experiments','pid,eid');
REPLACE INTO foreign_keys VALUES ('group_membership','uid','users','uid');
REPLACE INTO foreign_keys VALUES ('group_membership','pid,gid','groups','pid,gid');
REPLACE INTO foreign_keys VALUES ('interfaces','interface_type','interface_types','type');
REPLACE INTO foreign_keys VALUES ('interfaces','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('last_reservation','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('last_reservation','pid','projects','pid');
REPLACE INTO foreign_keys VALUES ('lastlogin','uid','users','uid');
REPLACE INTO foreign_keys VALUES ('login','uid','users','uid');
REPLACE INTO foreign_keys VALUES ('newdelays','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('newdelays','eid,pid','experiments','eid,pid');
REPLACE INTO foreign_keys VALUES ('next_reserve','eid,pid','experiments','eid,pid');
REPLACE INTO foreign_keys VALUES ('next_reserve','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('nodeuidlastlogin','uid','users','uid');
REPLACE INTO foreign_keys VALUES ('nodeuidlastlogin','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('nsfiles','eid,pid','experiments','eid,pid');
REPLACE INTO foreign_keys VALUES ('proj_memb','pid','projects','pid');
REPLACE INTO foreign_keys VALUES ('reserved','eid,pid','experiments','eid,pid');
REPLACE INTO foreign_keys VALUES ('reserved','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('scheduled_reloads','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('scheduled_reloads','image_id','images','imageid');
REPLACE INTO foreign_keys VALUES ('tiplines','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('tmcd_redirect','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('uidnodelastlogin','uid','users','uid');
REPLACE INTO foreign_keys VALUES ('uidnodelastlogin','node_id','nodes','node_id');
REPLACE INTO foreign_keys VALUES ('virt_lans','pid,eid','experiments','pid,eid');
REPLACE INTO foreign_keys VALUES ('virt_nodes','pid,eid','experiments','pid,eid');
REPLACE INTO foreign_keys VALUES ('virt_nodes','osname','os_info','osname');
REPLACE INTO foreign_keys VALUES ('vlans','pid,eid','experiments','pid,eid');
REPLACE INTO foreign_keys VALUES ('nseconfigs','eid,pid,vname','virt_nodes','eid,pid,vname');
REPLACE INTO foreign_keys VALUES ('nseconfigs','eid,pid','experiments','eid,pid');
REPLACE INTO foreign_keys VALUES ('virt_nodes','parent_osname','os_info','osname');

--
-- Dumping data for table `mode_transitions`
--


REPLACE INTO mode_transitions VALUES ('MINIMAL','SHUTDOWN','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('MINIMAL','SHUTDOWN','NORMAL','REBOOTING','');
REPLACE INTO mode_transitions VALUES ('MINIMAL','SHUTDOWN','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('MINIMAL','SHUTDOWN','RELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NETBOOT','SHUTDOWN','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NETBOOT','SHUTDOWN','NORMAL','REBOOTING','');
REPLACE INTO mode_transitions VALUES ('NETBOOT','SHUTDOWN','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NETBOOT','SHUTDOWN','RELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','REBOOTING','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','REBOOTING','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','REBOOTING','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','REBOOTING','RELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','SHUTDOWN','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','SHUTDOWN','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','SHUTDOWN','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','SHUTDOWN','RELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv1','SHUTDOWN','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv1','SHUTDOWN','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv1','SHUTDOWN','NORMAL','REBOOTING','');
REPLACE INTO mode_transitions VALUES ('NORMALv1','SHUTDOWN','RELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONE','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONEV2','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONE','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONE','NORMAL','REBOOTING','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONEV2','NORMAL','REBOOTING','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONE','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONEV2','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','SHUTDOWN','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','SHUTDOWN','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','SHUTDOWN','NORMAL','REBOOTING','');
REPLACE INTO mode_transitions VALUES ('RELOAD','SHUTDOWN','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('MINIMAL','SHUTDOWN','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv2','SHUTDOWN','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NETBOOT','SHUTDOWN','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('PXEFBSD','SHUTDOWN','NORMAL','REBOOTING','');
REPLACE INTO mode_transitions VALUES ('PXEFBSD','SHUTDOWN','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('PXEFBSD','SHUTDOWN','NORMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('PXEFBSD','SHUTDOWN','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('PXEFBSD','SHUTDOWN','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('PXEFBSD','SHUTDOWN','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('PXEFBSD','SHUTDOWN','RELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv2','SHUTDOWN','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv2','SHUTDOWN','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv2','SHUTDOWN','RELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','SHUTDOWN','PXEFBSD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONE','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONEV2','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv2','SHUTDOWN','PXEFBSD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','SHUTDOWN','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv1','SHUTDOWN','PXEFBSD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','SHUTDOWN','PXEFBSD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NETBOOT','SHUTDOWN','PXEFBSD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('MINIMAL','SHUTDOWN','PXEFBSD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','REBOOTING','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv2','SHUTDOWN','NORMAL','REBOOTING','');
REPLACE INTO mode_transitions VALUES ('NORMALv2','SHUTDOWN','RELOAD-PCVM','SHUTDOWN','vnodereload');
REPLACE INTO mode_transitions VALUES ('NORMALv1','SHUTDOWN','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('ALWAYSUP','SHUTDOWN','RELOAD-MOTE','SHUTDOWN','ReloadStart');
REPLACE INTO mode_transitions VALUES ('ALWAYSUP','ISUP','RELOAD-MOTE','SHUTDOWN','ReloadStart');
REPLACE INTO mode_transitions VALUES ('ALWAYSUP','ISUP','RELOAD-MOTE','ISUP','ReloadStart');
REPLACE INTO mode_transitions VALUES ('RELOAD-MOTE','SHUTDOWN','ALWAYSUP','ISUP','ReloadDone');
REPLACE INTO mode_transitions VALUES ('PCVM','SHUTDOWN','RELOAD-PCVM','SHUTDOWN','ReloadSetup');
REPLACE INTO mode_transitions VALUES ('RELOAD-PCVM','SHUTDOWN','PCVM','SHUTDOWN','ReloadDone');
REPLACE INTO mode_transitions VALUES ('RELOAD-PCVM','RELOADDONE','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD-PCVM','SHUTDOWN','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD-PUSH','SHUTDOWN','MINIMAL','SHUTDOWN','ReloadDone');
REPLACE INTO mode_transitions VALUES ('MINIMAL','SHUTDOWN','RELOAD-PUSH','SHUTDOWN','ReloadStart');
REPLACE INTO mode_transitions VALUES ('SECUREBOOT','TPMSIGNOFF','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('SECUREBOOT','TPMSIGNOFF','NORMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('SECUREBOOT','TPMSIGNOFF','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('SECUREBOOT','TPMSIGNOFF','PXEFBSD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('SECUREBOOT','TPMSIGNOFF','PXEKERNEL','SHUTDOWN','SecureBootDone');
REPLACE INTO mode_transitions VALUES ('NORMALv2','SHUTDOWN','SECURELOAD','SHUTDOWN','SecureLoadStart');
REPLACE INTO mode_transitions VALUES ('PXEFBSD','SHUTDOWN','WIMRELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('MINIMAL','SHUTDOWN','WIMRELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NETBOOT','SHUTDOWN','WIMRELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMAL','SHUTDOWN','WIMRELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv1','SHUTDOWN','WIMRELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('NORMALv2','SHUTDOWN','WIMRELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','SHUTDOWN','PXEFBSD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','SHUTDOWN','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','SHUTDOWN','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','SHUTDOWN','NORMAL','REBOOTING','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','SHUTDOWN','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','SHUTDOWN','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','RELOADDONE','MINIMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','RELOADDONE','NETBOOT','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','RELOADDONE','NORMAL','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','RELOADDONE','NORMALv1','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('WIMRELOAD','RELOADDONE','NORMALv2','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('ALWAYSUP','SHUTDOWN','RELOAD-UE','SHUTDOWN','ReloadStart');
REPLACE INTO mode_transitions VALUES ('ALWAYSUP','ISUP','RELOAD-UE','SHUTDOWN','ReloadStart');
REPLACE INTO mode_transitions VALUES ('ALWAYSUP','ISUP','RELOAD-UE','ISUP','ReloadStart');
REPLACE INTO mode_transitions VALUES ('RELOAD-UE','SHUTDOWN','ALWAYSUP','ISUP','ReloadDone');
REPLACE INTO mode_transitions VALUES ('ALWAYSUP','SHUTDOWN','RELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','SHUTDOWN','ALWAYSUP','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONE','ALWAYSUP','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('ONIE','SHUTDOWN','RELOAD','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','SHUTDOWN','ONIE','SHUTDOWN','');
REPLACE INTO mode_transitions VALUES ('RELOAD','RELOADDONE','ONIE','SHUTDOWN','');

--
-- Dumping data for table `priorities`
--


REPLACE INTO priorities VALUES (0,'EMERG');
REPLACE INTO priorities VALUES (100,'ALERT');
REPLACE INTO priorities VALUES (200,'CRIT');
REPLACE INTO priorities VALUES (300,'ERR');
REPLACE INTO priorities VALUES (400,'WARNING');
REPLACE INTO priorities VALUES (500,'NOTICE');
REPLACE INTO priorities VALUES (600,'INFO');
REPLACE INTO priorities VALUES (700,'DEBUG');

--
-- Dumping data for table `state_timeouts`
--


REPLACE INTO state_timeouts VALUES ('NORMAL','REBOOTING',120,'REBOOT');
REPLACE INTO state_timeouts VALUES ('NORMAL','REBOOTED',60,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('MINIMAL','SHUTDOWN',120,'REBOOT');
REPLACE INTO state_timeouts VALUES ('NORMALv1','TBSETUP',600,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('RELOAD','RELOADDONE',60,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('RELOAD','RELOADDONEV2',60,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('EXPTSTATUS','ACTIVATING',0,'');
REPLACE INTO state_timeouts VALUES ('EXPTSTATUS','ACTIVE',0,'');
REPLACE INTO state_timeouts VALUES ('EXPTSTATUS','NEW',0,'');
REPLACE INTO state_timeouts VALUES ('EXPTSTATUS','PRERUN',0,'');
REPLACE INTO state_timeouts VALUES ('EXPTSTATUS','SWAPPED',0,'');
REPLACE INTO state_timeouts VALUES ('EXPTSTATUS','SWAPPING',0,'');
REPLACE INTO state_timeouts VALUES ('EXPTSTATUS','TERMINATING',0,'');
REPLACE INTO state_timeouts VALUES ('EXPTSTATUS','TESTING',0,'');
REPLACE INTO state_timeouts VALUES ('MINIMAL','BOOTING',180,'REBOOT');
REPLACE INTO state_timeouts VALUES ('NODEALLOC','FREE_CLEAN',0,'');
REPLACE INTO state_timeouts VALUES ('NODEALLOC','FREE_DIRTY',0,'');
REPLACE INTO state_timeouts VALUES ('NODEALLOC','REBOOT',0,'');
REPLACE INTO state_timeouts VALUES ('NODEALLOC','RELOAD',0,'');
REPLACE INTO state_timeouts VALUES ('NODEALLOC','RESERVED',0,'');
REPLACE INTO state_timeouts VALUES ('NORMAL','BOOTING',180,'REBOOT');
REPLACE INTO state_timeouts VALUES ('NORMALv1','BOOTING',180,'REBOOT');
REPLACE INTO state_timeouts VALUES ('RELOAD','BOOTING',180,'REBOOT');
REPLACE INTO state_timeouts VALUES ('RELOAD','RELOADING',600,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('RELOAD','RELOADSETUP',60,'STATE:RELOADFAILED');
REPLACE INTO state_timeouts VALUES ('RELOAD','SHUTDOWN',600,'REBOOT');
REPLACE INTO state_timeouts VALUES ('USERSTATUS','ACTIVE',0,'');
REPLACE INTO state_timeouts VALUES ('USERSTATUS','FROZEN',0,'');
REPLACE INTO state_timeouts VALUES ('USERSTATUS','NEWUSER',0,'');
REPLACE INTO state_timeouts VALUES ('USERSTATUS','UNAPPROVED',0,'');
REPLACE INTO state_timeouts VALUES ('TBCOMMAND','REBOOT',75,'CMDRETRY');
REPLACE INTO state_timeouts VALUES ('TBCOMMAND','POWEROFF',0,'CMDRETRY');
REPLACE INTO state_timeouts VALUES ('TBCOMMAND','POWERON',0,'CMDRETRY');
REPLACE INTO state_timeouts VALUES ('TBCOMMAND','POWERCYCLE',0,'CMDRETRY');
REPLACE INTO state_timeouts VALUES ('PCVM','BOOTING',1200,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('PCVM','SHUTDOWN',0,'');
REPLACE INTO state_timeouts VALUES ('PCVM','ISUP',0,'');
REPLACE INTO state_timeouts VALUES ('PCVM','TBSETUP',600,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('PXEFBSD','REBOOTING',120,'REBOOT');
REPLACE INTO state_timeouts VALUES ('PXEFBSD','REBOOTED',60,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('PXEFBSD','BOOTING',180,'REBOOT');
REPLACE INTO state_timeouts VALUES ('NORMALv2','TBSETUP',600,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('NORMALv2','BOOTING',300,'REBOOT');
REPLACE INTO state_timeouts VALUES ('GARCIA-STARGATEv1','TBSETUP',600,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('PXEKERNEL','PXEWAKEUP',120,'REBOOT');
REPLACE INTO state_timeouts VALUES ('SECUREBOOT','BOOTING',300,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECUREBOOT','GPXEBOOTING',60,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECUREBOOT','PXEBOOTING',60,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECUREBOOT','SHUTDOWN',300,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECUREBOOT','TPMSIGNOFF',60,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECUREBOOT','PXEWAIT',10,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECURELOAD','BOOTING',300,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECURELOAD','GPXEBOOTING',60,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECURELOAD','PXEBOOTING',60,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECURELOAD','RELOADDONE',300,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECURELOAD','RELOADING',3600,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECURELOAD','RELOADSETUP',60,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECURELOAD','SHUTDOWN',300,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('SECURELOAD','TPMSIGNOFF',300,'STATE:SECVIOLATION');
REPLACE INTO state_timeouts VALUES ('WIMRELOAD','SHUTDOWN',240,'REBOOT');
REPLACE INTO state_timeouts VALUES ('WIMRELOAD','RELOADSETUP',60,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('WIMRELOAD','RELOADING',1800,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('WIMRELOAD','RELOADDONE',60,'NOTIFY');
REPLACE INTO state_timeouts VALUES ('PXEKERNEL','PXEBOOTING',240,'REBOOT');

--
-- Dumping data for table `state_transitions`
--

REPLACE INTO state_transitions VALUES ('ONIE','ISUP','SHUTDOWN','');
REPLACE INTO state_transitions VALUES ('ONIE','SHUTDOWN','BOOTING','');
REPLACE INTO state_transitions VALUES ('ONIE','SHUTDOWN','PXEWAIT','');
REPLACE INTO state_transitions VALUES ('ONIE','BOOTING','ISUP','');
REPLACE INTO state_transitions VALUES ('ONIE','BOOTING','BOOTING','');
REPLACE INTO state_transitions VALUES ('ONIE','PXEWAIT','PXEWAIT','bootinfoclient');
REPLACE INTO state_transitions VALUES ('ONIE','PXEWAIT','PXEWAKEUP','');
REPLACE INTO state_transitions VALUES ('ONIE','PXEWAKEUP','BOOTING','');
REPLACE INTO state_transitions VALUES ('ONIE','ISUP','ISUP','');
REPLACE INTO state_transitions VALUES ('ALWAYSUP','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('ALWAYSUP','SHUTDOWN','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('ALWAYSUP','ISUP','POWEROFF','');
REPLACE INTO state_transitions VALUES ('ALWAYSUP','POWEROFF','SHUTDOWN','');
REPLACE INTO state_transitions VALUES ('PCVM','ISUP','BOOTING','Crash');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','TERMINATING','SWAPPED','Error');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','TERMINATING','ENDED','NoError');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','MODIFY_RESWAP','SWAPPING','Nonrecover Error');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','MODIFY_PARSE','ACTIVE','Error');
REPLACE INTO state_transitions VALUES ('NETBOOT','SHUTDOWN','PXEBOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('RELOAD','PXEBOOTING','BOOTING','BootInfo');
REPLACE INTO state_transitions VALUES ('RELOAD','SHUTDOWN','PXEBOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('NETBOOT','BOOTING','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('NETBOOT','BOOTING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('NETBOOT','ISUP','BOOTING','KernelChange');
REPLACE INTO state_transitions VALUES ('NETBOOT','ISUP','ISUP','Retry');
REPLACE INTO state_transitions VALUES ('NETBOOT','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('NETBOOT','SHUTDOWN','BOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('NETBOOT','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('MINIMAL','BOOTING','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('MINIMAL','BOOTING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('MINIMAL','ISUP','BOOTING','SilentReboot');
REPLACE INTO state_transitions VALUES ('MINIMAL','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('MINIMAL','SHUTDOWN','BOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('NORMAL','REBOOTING','REBOOTING','Retry');
REPLACE INTO state_transitions VALUES ('NORMALv1','TBSETUP','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('NORMALv1','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('NORMALv1','SHUTDOWN','PXEBOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('NORMALv1','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('NORMALv1','BOOTING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('RELOAD','BOOTING','BOOTING','DHCPRetry');
REPLACE INTO state_transitions VALUES ('RELOAD','BOOTING','RELOADSETUP','BootOK');
REPLACE INTO state_transitions VALUES ('RELOAD','BOOTING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADING','RELOADDONE','ReloadDone');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADING','RELOADDONEV2','ReloadDone');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADSETUP','RELOADING','ReloadReady');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADSETUP','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('RELOAD','SHUTDOWN','BOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('RELOAD','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('USERSTATUS','ACTIVE','FROZEN','');
REPLACE INTO state_transitions VALUES ('USERSTATUS','FROZEN','ACTIVE','');
REPLACE INTO state_transitions VALUES ('USERSTATUS','NEWUSER','UNAPPROVED','');
REPLACE INTO state_transitions VALUES ('USERSTATUS','UNAPPROVED','ACTIVE','');
REPLACE INTO state_transitions VALUES ('BATCHSTATE','SWAPPED','ACTIVATING','SwapIn');
REPLACE INTO state_transitions VALUES ('WIDEAREA','ISUP','REBOOTED','SilentReboot');
REPLACE INTO state_transitions VALUES ('WIDEAREA','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('WIDEAREA','REBOOTED','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('WIDEAREA','REBOOTED','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('BATCHSTATE','ACTIVATING','ACTIVE','SwapIn');
REPLACE INTO state_transitions VALUES ('NORMALv2','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('BATCHSTATE','ACTIVATING','POSTED','Batch');
REPLACE INTO state_transitions VALUES ('WIDEAREA','SHUTDOWN','REBOOTED','BootOK');
REPLACE INTO state_transitions VALUES ('WIDEAREA','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('PCVM','BOOTING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('PCVM','BOOTING','TBSETUP','BootOK');
REPLACE INTO state_transitions VALUES ('PCVM','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('PCVM','SHUTDOWN','BOOTING','StartBoot');
REPLACE INTO state_transitions VALUES ('PCVM','TBSETUP','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('PCVM','TBSETUP','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('PCVM','BOOTING','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('ALWAYSUP','ISUP','ISUP','Retry');
REPLACE INTO state_transitions VALUES ('PCVM','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('NORMAL','BOOTING','REBOOTING','Error');
REPLACE INTO state_transitions VALUES ('NORMALv1','BOOTING','TBSETUP','BootOK');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RELOAD_TO_FREE','FREE_CLEAN','ReloadDone');
REPLACE INTO state_transitions VALUES ('NORMAL','SHUTDOWN','REBOOTING','Reboot');
REPLACE INTO state_transitions VALUES ('NORMAL','REBOOTED','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('NORMAL','BOOTING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('NORMAL','PXEBOOTING','BOOTING','BootInfo');
REPLACE INTO state_transitions VALUES ('NORMALv1','PXEBOOTING','BOOTING','BootInfo');
REPLACE INTO state_transitions VALUES ('BATCHSTATE','POSTED','ACTIVATING','SwapIn');
REPLACE INTO state_transitions VALUES ('NORMAL','REBOOTING','PXEBOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('NORMALv1','ISUP','PXEBOOTING','KernelChange');
REPLACE INTO state_transitions VALUES ('NODEALLOC','FREE_CLEAN','RES_INIT_CLEAN','Reserve');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEWAIT','PXEBOOTING','Retry');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEBOOTING','PXEWAIT','Free');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXELIMBO','PXEBOOTING','Bootinfo-Restart');
REPLACE INTO state_transitions VALUES ('BATCHSTATE','ACTIVATING','SWAPPED','NonBatch');
REPLACE INTO state_transitions VALUES ('NORMAL','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('NORMAL','REBOOTING','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('NORMAL','REBOOTED','REBOOTING','Error');
REPLACE INTO state_transitions VALUES ('NORMAL','ISUP','REBOOTING','Reboot');
REPLACE INTO state_transitions VALUES ('NORMAL','BOOTING','REBOOTED','BootOK');
REPLACE INTO state_transitions VALUES ('NORMALv2','SHUTDOWN','PXEBOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('NORMAL','SHUTDOWN','PXEBOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('NORMAL','REBOOTED','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('EXAMPLE','NEW','VERIFIED','Verify');
REPLACE INTO state_transitions VALUES ('EXAMPLE','NEW','APPROVED','Approve');
REPLACE INTO state_transitions VALUES ('EXAMPLE','APPROVED','READY','Verify');
REPLACE INTO state_transitions VALUES ('EXAMPLE','VERIFIED','READY','Approve');
REPLACE INTO state_transitions VALUES ('EXAMPLE','FROZEN','READY','Thaw');
REPLACE INTO state_transitions VALUES ('EXAMPLE','READY','FROZEN','Freeze');
REPLACE INTO state_transitions VALUES ('EXAMPLE','LOCKED','READY','Unlock');
REPLACE INTO state_transitions VALUES ('EXAMPLE','READY','LOCKED','Lock');
REPLACE INTO state_transitions VALUES ('EXAMPLE','FROZEN','LOCKED','Lock');
REPLACE INTO state_transitions VALUES ('EXAMPLE','LOCKED','FROZEN','Freeze');
REPLACE INTO state_transitions VALUES ('EXAMPLE','READY','APPROVED','Un-Verify');
REPLACE INTO state_transitions VALUES ('EXAMPLE','READY','VERIFIED','Un-Approve');
REPLACE INTO state_transitions VALUES ('EXAMPLE','VERIFIED','NEW','Un-Verify');
REPLACE INTO state_transitions VALUES ('EXAMPLE','APPROVED','NEW','Un-Approve');
REPLACE INTO state_transitions VALUES ('BATCHSTATE','ACTIVE','TERMINATING','SwapOut');
REPLACE INTO state_transitions VALUES ('BATCHSTATE','TERMINATING','SWAPPED','SwapOut');
REPLACE INTO state_transitions VALUES ('BATCHSTATE','SWAPPED','POSTED','RePost');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','MODIFY_PRERUN','SWAPPED','(No)Error');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','SWAPPED','MODIFY_PRERUN','Modify');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','SWAPPED','TERMINATING','EndExp');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','SWAPPING','SWAPPED','(No)Error');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','ACTIVATING','SWAPPED','Error');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','ACTIVE','SWAPPING','SwapOut');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','ACTIVE','RESTARTING','Restart');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','RESTARTING','ACTIVE','(No)Error');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','ACTIVATING','ACTIVE','NoError');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','QUEUED','TERMINATING','Endexp');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','SWAPPED','QUEUED','Queue');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','QUEUED','ACTIVATING','BatchRun');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','QUEUED','SWAPPED','Dequeue');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','PRERUN','QUEUED','Batch');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','PRERUN','SWAPPED','Immediate');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','NEW','PRERUN','Create');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','NEW','ENDED','Endexp');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','SWAPPED','ACTIVATING','SwapIn');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEWAKEUP','PXEBOOTING','Wokeup');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','MODIFY_PARSE','MODIFY_RESWAP','NoError');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','ACTIVE','MODIFY_PARSE','Modify');
REPLACE INTO state_transitions VALUES ('EXPTSTATE','MODIFY_RESWAP','ACTIVE','(No)Error');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEWAIT','PXEWAKEUP','NodeAlloced');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','SHUTDOWN','PXEBOOTING','BootInfo');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEBOOTING','PXEBOOTING','Retry');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEBOOTING','BOOTING','Not Free');
REPLACE INTO state_transitions VALUES ('NORMALv2','RECONFIG','SHUTDOWN','ReConfigFail');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RELOAD_PENDING','RELOAD_TO_FREE','Reload');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEWAKEUP','PXEWAKEUP','Retry');
REPLACE INTO state_transitions VALUES ('NORMALv2','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('NORMALv2','BOOTING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('NORMALv2','SHUTDOWN','WEDGED','Error');
REPLACE INTO state_transitions VALUES ('NORMALv2','BOOTING','TBSETUP','BootOK');
REPLACE INTO state_transitions VALUES ('NORMALv2','PXEBOOTING','BOOTING','BootInfo');
REPLACE INTO state_transitions VALUES ('NORMALv2','ISUP','PXEBOOTING','KernelChange');
REPLACE INTO state_transitions VALUES ('NORMALv2','TBSETUP','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('NORMALv2','ISUP','RECONFIG','DoReConfig');
REPLACE INTO state_transitions VALUES ('NORMALv2','RECONFIG','TBSETUP','ReConfig');
REPLACE INTO state_transitions VALUES ('NORMALv2','TBSETUP','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('NORMALv1','TBSETUP','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('NORMALv2','BOOTING','VNODEBOOTSTART','xencreate');
REPLACE INTO state_transitions VALUES ('NORMALv2','VNODEBOOTSTART','TBSETUP','realboot');
REPLACE INTO state_transitions VALUES ('NORMALv2','VNODEBOOTSTART','SHUTDOWN','bootfail');
REPLACE INTO state_transitions VALUES ('NORMALv2','BOOTING','BOOTING','vnodesetup');
REPLACE INTO state_transitions VALUES ('NORMALv2','SHUTDOWN','BOOTING','vnode_setup');
REPLACE INTO state_transitions VALUES ('RELOAD-PCVM','SHUTDOWN','SHUTDOWN','vnodereload');
REPLACE INTO state_transitions VALUES ('NORMAL','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('NETBOOT','PXEBOOTING','BOOTING','BootInfo');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RES_INIT_CLEAN','RES_CLEAN_REBOOT','Reboot');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RES_INIT_CLEAN','RELOAD_TO_DIRTY','Reload');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RES_CLEAN_REBOOT','RES_WAIT_CLEAN','Rebooting');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RELOAD_TO_DIRTY','RES_DIRTY_REBOOT','Reboot');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RES_DIRTY_REBOOT','RES_WAIT_DIRTY','Rebooting');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RES_WAIT_CLEAN','RES_READY','IsUp');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RES_WAIT_DIRTY','RES_READY','IsUp');
REPLACE INTO state_transitions VALUES ('NODEALLOC','RES_READY','RELOAD_PENDING','Free');
REPLACE INTO state_transitions VALUES ('MINIMAL','BOOTING','BOOTING','DHCPRetry');
REPLACE INTO state_transitions VALUES ('MINIMAL','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('NORMALv2','TBSETUP','TBSETUP','LongSetup');
REPLACE INTO state_transitions VALUES ('OPSNODEBSD','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('OPSNODEBSD','SHUTDOWN','TBSETUP','Booting');
REPLACE INTO state_transitions VALUES ('OPSNODEBSD','TBSETUP','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('OPSNODEBSD','ISUP','TBSETUP','Crash');
REPLACE INTO state_transitions VALUES ('RELOAD-MOTE','RELOADING','RELOADDONE','ReloadDone');
REPLACE INTO state_transitions VALUES ('RELOAD-MOTE','SHUTDOWN','RELOADING','Booting');
REPLACE INTO state_transitions VALUES ('NORMALv2','TBSETUP','TBFAILED','BootFail');
REPLACE INTO state_transitions VALUES ('NORMALv2','TBFAILED','SHUTDOWN','RebootAfterFail');
REPLACE INTO state_transitions VALUES ('PCVM','TBSETUP','TBFAILED','BootError');
REPLACE INTO state_transitions VALUES ('PCVM','TBFAILED','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','SHUTDOWN','TBSETUP','DHCP');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','SHUTDOWN','POWEROFF','PowerOff');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','POWEROFF','TBSETUP','PowerOn');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','RECONFIG','SHUTDOWN','ReConfigFail');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','TBSETUP','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','ISUP','RECONFIG','DoReConfig');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','RECONFIG','TBSETUP','ReConfig');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','TBSETUP','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','TBSETUP','TBSETUP','LongSetup');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','TBSETUP','TBFAILED','BootFail');
REPLACE INTO state_transitions VALUES ('GARCIA-STARGATEv1','TBFAILED','SHUTDOWN','RebootAfterFail');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADSETUP','RELOADOLDMFS','');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADOLDMFS','SHUTDOWN','');

REPLACE INTO state_transitions VALUES ('RELOAD-PCVM','RELOADSETUP','RELOADING','ReloadStart');
REPLACE INTO state_transitions VALUES ('RELOAD-PCVM','RELOADING','RELOADDONE','ReloadDone');
REPLACE INTO state_transitions VALUES ('RELOAD-PCVM','RELOADDONE','SHUTDOWN','ReloadDone');
REPLACE INTO state_transitions VALUES ('RELOAD-PCVM','BOOTING','RELOADSETUP','ReloadSetup');
REPLACE INTO state_transitions VALUES ('RELOAD-PCVM','SHUTDOWN','BOOTING','Booting');

REPLACE INTO state_transitions VALUES ('RELOAD','BOOTING','TBSETUP','FailedBoot');
REPLACE INTO state_transitions VALUES ('RELOAD','TBSETUP','ISUP','FailedBoot');
REPLACE INTO state_transitions VALUES ('RELOAD','TBSETUP','TBFAILED','FailedBoot');
REPLACE INTO state_transitions VALUES ('RELOAD','ISUP','SHUTDOWN','RebootAfterFail');
REPLACE INTO state_transitions VALUES ('RELOAD','TBFAILED','SHUTDOWN','RebootAfterFail');
REPLACE INTO state_transitions VALUES ('RELOAD-PUSH','SHUTDOWN','BOOTING','Booting');
REPLACE INTO state_transitions VALUES ('RELOAD-PUSH','BOOTING','BOOTING','BootRetry');
REPLACE INTO state_transitions VALUES ('RELOAD-PUSH','RELOADSETUP','RELOADING','ReloadStart');
REPLACE INTO state_transitions VALUES ('RELOAD-PUSH','RELOADING','RELOADDONE','ReloadDone');
REPLACE INTO state_transitions VALUES ('RELOAD-PUSH','RELOADDONE','SHUTDOWN','ReloadDone');
REPLACE INTO state_transitions VALUES ('RELOAD-PUSH','SHUTDOWN','RELOADSETUP','ReloadSetup');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','BOOTING','SECVIOLATION','QuoteFailed');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','BOOTING','TPMSIGNOFF','QuoteOK');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','BOOTING','PXEBOOTING','re-BootInfo');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','GPXEBOOTING','PXEBOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','PXEBOOTING','BOOTING','BootInfo');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','PXEBOOTING','PXEWAIT','BootInfoFree');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','PXEWAIT','SECVIOLATION','QuoteFailed');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','PXEWAIT','TPMSIGNOFF','QuoteOK');
REPLACE INTO state_transitions VALUES ('SECURELOAD','BOOTING','PXEBOOTING','re-BootInfo');
REPLACE INTO state_transitions VALUES ('SECURELOAD','BOOTING','RELOADSETUP','QuoteOK');
REPLACE INTO state_transitions VALUES ('SECURELOAD','BOOTING','SECVIOLATION','QuoteFailed');
REPLACE INTO state_transitions VALUES ('SECURELOAD','GPXEBOOTING','PXEBOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('SECURELOAD','PXEBOOTING','BOOTING','BootInfo');
REPLACE INTO state_transitions VALUES ('SECURELOAD','RELOADDONE','SECVIOLATION','QuoteFailed');
REPLACE INTO state_transitions VALUES ('SECURELOAD','RELOADDONE','TPMSIGNOFF','QuoteOK');
REPLACE INTO state_transitions VALUES ('SECURELOAD','RELOADING','RELOADDONE','ImageOK');
REPLACE INTO state_transitions VALUES ('SECURELOAD','RELOADING','SECVIOLATION','ImageBad');
REPLACE INTO state_transitions VALUES ('SECURELOAD','RELOADSETUP','RELOADING','ReloadReady');
REPLACE INTO state_transitions VALUES ('SECURELOAD','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('SECURELOAD','SHUTDOWN','GPXEBOOTING','QuoteOK');
REPLACE INTO state_transitions VALUES ('SECURELOAD','SHUTDOWN','SECVIOLATION','QuoteFailed');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEWAIT','POWEROFF','Power Save');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','POWEROFF','SHUTDOWN','Power Recovery');
REPLACE INTO state_transitions VALUES ('NORMAL','*','POWEROFF','Power Off');
REPLACE INTO state_transitions VALUES ('NORMALv1','*','POWEROFF','Power Off');
REPLACE INTO state_transitions VALUES ('NORMALv2','*','POWEROFF','Power Off');
REPLACE INTO state_transitions VALUES ('NORMAL','POWEROFF','SHUTDOWN','Power On');
REPLACE INTO state_transitions VALUES ('NORMALv1','POWEROFF','SHUTDOWN','Power On');
REPLACE INTO state_transitions VALUES ('NORMALv2','POWEROFF','SHUTDOWN','Power On');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','SECVIOLATION','POWEROFF','Power Off');
REPLACE INTO state_transitions VALUES ('SECURELOAD','SECVIOLATION','POWEROFF','Power Off');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','POWEROFF','SHUTDOWN','Power On');
REPLACE INTO state_transitions VALUES ('SECURELOAD','POWEROFF','SHUTDOWN','Power On');
REPLACE INTO state_transitions VALUES ('WIMRELOAD','SHUTDOWN','RELOADSETUP','BootOK');
REPLACE INTO state_transitions VALUES ('WIMRELOAD','RELOADSETUP','RELOADING','ReloadStart');
REPLACE INTO state_transitions VALUES ('WIMRELOAD','RELOADING','RELOADDONE','ReloadDone');
REPLACE INTO state_transitions VALUES ('WIMRELOAD','SHUTDOWN','SHUTDOWN','Retry');
REPLACE INTO state_transitions VALUES ('WIMRELOAD','SHUTDOWN','PXEBOOTING','WrongPXEboot');
REPLACE INTO state_transitions VALUES ('WIMRELOAD','RELOADSETUP','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('WIMRELOAD','RELOADING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEBOOTING','REBOOTING','ForcedReboot');
REPLACE INTO state_transitions VALUES ('PXEFBSD','BOOTING','MFSSETUP','BootOK');
REPLACE INTO state_transitions VALUES ('PXEFBSD','BOOTING','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('PXEFBSD','MFSSETUP','ISUP','BootDone');
REPLACE INTO state_transitions VALUES ('PXEFBSD','MFSSETUP','SHUTDOWN','Error');
REPLACE INTO state_transitions VALUES ('PXEFBSD','ISUP','SHUTDOWN','Reboot');
REPLACE INTO state_transitions VALUES ('PXEFBSD','SHUTDOWN','PXEBOOTING','DHCP');
REPLACE INTO state_transitions VALUES ('SECURELOAD','TPMSIGNOFF','GPXEBOOTING','ReloadDone');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','SHUTDOWN','GPXEBOOTING','QuoteOK');
REPLACE INTO state_transitions VALUES ('SECUREBOOT','SHUTDOWN','SECVIOLATION','QuoteFailed');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADSETUP','RELOADFAILED','');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADING','RELOADFAILED','');
REPLACE INTO state_transitions VALUES ('RELOAD','RELOADFAILED','SHUTDOWN','');
REPLACE INTO state_transitions VALUES ('RELOAD-PCVM','RELOADSETUP','RELOADFAILED','');
REPLACE INTO state_transitions VALUES ('RELOAD-PCVM','RELOADING','RELOADFAILED','');
REPLACE INTO state_transitions VALUES ('RELOAD-PCVM','RELOADFAILED','SHUTDOWN','');
REPLACE INTO state_transitions VALUES ('RELOAD-UE','RELOADING','RELOADDONE','ReloadDone');
REPLACE INTO state_transitions VALUES ('RELOAD-UE','SHUTDOWN','RELOADING','Booting');
REPLACE INTO state_transitions VALUES ('NORMALv2','BOOTING','PXEWAIT','MoonshotPxeWait');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEWAKEUP','SHUTDOWN','MoonshotBootDisk');
REPLACE INTO state_transitions VALUES ('PXEKERNEL','PXEWAKEUP','BOOTING','PxeBootWakeup');

--
-- Dumping data for table `state_triggers`
--


REPLACE INTO state_triggers VALUES ('*','RELOAD','RELOADDONE','RESET, RELOADDONE');
REPLACE INTO state_triggers VALUES ('*','RELOAD','RELOADDONEV2','RESET, RELOADDONEV2');
REPLACE INTO state_triggers VALUES ('*','ALWAYSUP','SHUTDOWN','ISUP');
REPLACE INTO state_triggers VALUES ('*','*','ISUP','RESET, CHECKPORTREG');
REPLACE INTO state_triggers VALUES ('*','*','PXEBOOTING','PXEBOOT');
REPLACE INTO state_triggers VALUES ('*','*','BOOTING','BOOTING, CHECKGENISUP');
REPLACE INTO state_triggers VALUES ('*','MINIMAL','ISUP','RESET');
REPLACE INTO state_triggers VALUES ('*','RELOAD-MOTE','RELOADDONE','RELOADDONE');
REPLACE INTO state_triggers VALUES ('*','OPSNODEBSD','ISUP','SCRIPT:opsreboot');
REPLACE INTO state_triggers VALUES ('*','NORMALv2','WEDGED','POWERCYCLE');
REPLACE INTO state_triggers VALUES ('*','RELOAD','RELOADOLDMFS','RELOADOLDMFS');
REPLACE INTO state_triggers VALUES ('*','RELOAD-PCVM','RELOADDONE','RESET, RELOADDONE');
REPLACE INTO state_triggers VALUES ('*','RELOAD','ISUP','REBOOT');
REPLACE INTO state_triggers VALUES ('*','RELOAD','TBFAILED','REBOOT');
REPLACE INTO state_triggers VALUES ('*','RELOAD-PUSH','RELOADDONE','RELOADDONE');
REPLACE INTO state_triggers VALUES ('*','*','GPXEBOOTING','SECUREBOOT');
REPLACE INTO state_triggers VALUES ('*','*','SECVIOLATION','POWEROFF, EMAILNOTIFY');
REPLACE INTO state_triggers VALUES ('*','SECUREBOOT','BOOTING','');
REPLACE INTO state_triggers VALUES ('*','SECUREBOOT','PXEBOOTING','');
REPLACE INTO state_triggers VALUES ('*','SECUREBOOT','TPMSIGNOFF','PXEBOOT');
REPLACE INTO state_triggers VALUES ('*','SECURELOAD','BOOTING','BOOTING');
REPLACE INTO state_triggers VALUES ('*','SECURELOAD','PXEBOOTING','');
REPLACE INTO state_triggers VALUES ('*','SECURELOAD','RELOADDONE','RESET, RELOADDONE');
REPLACE INTO state_triggers VALUES ('*','WIMRELOAD','RELOADDONE','PXERESET, RESET, RELOADDONE');
REPLACE INTO state_triggers VALUES ('*','WIMRELOAD','PXEBOOTING','REBOOT');
REPLACE INTO state_triggers VALUES ('*','WIMRELOAD','BOOTING','REBOOT');
REPLACE INTO state_triggers VALUES ('*','WIMRELOAD','ISUP','REBOOT');
REPLACE INTO state_triggers VALUES ('*','RELOAD-UE','RELOADDONE','RELOADDONE');
REPLACE INTO state_triggers VALUES ('*','NORMALv2','PXEWAIT','PXEBOOT');

--
-- Dumping data for table `table_regex`
--


REPLACE INTO table_regex VALUES ('eventlist','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('eventlist','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('eventlist','time','float','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('eventlist','vnode','text','redirect','virt_agents:vnode',0,0,NULL);
REPLACE INTO table_regex VALUES ('eventlist','vname','text','regex','^[-\\w\\(\\)]+$',1,64,NULL);
REPLACE INTO table_regex VALUES ('eventlist','objecttype','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('eventlist','eventtype','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('eventlist','arguments','text','redirect','default:html_text',0,1024,NULL);
REPLACE INTO table_regex VALUES ('eventlist','atstring','text','redirect','default:html_text',0,1024,NULL);
REPLACE INTO table_regex VALUES ('eventlist','triggertype','int','redirect','default:tinyint',0,0,NULL);

REPLACE INTO table_regex VALUES ('experiments','eid','text','regex','^[a-zA-Z0-9][-a-zA-Z0-9]*[a-zA-Z0-9]$',2,19,'Must ensure not too long for the database. PID is 12, and the max is 32, so the user is not allowed to specify an EID more than 19, since other parts of the system may concatenate them together with a hyphen');
REPLACE INTO table_regex VALUES ('experiments','eid_idx','text','regex','^[\\d]+$',1,12,NULL);
REPLACE INTO table_regex VALUES ('experiments','multiplex_factor','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','forcelinkdelays','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','uselinkdelays','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','usewatunnels','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','uselatestwadata','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','wa_delay_solverweight','float','redirect','default:float',0,1024,NULL);
REPLACE INTO table_regex VALUES ('experiments','wa_bw_solverweight','float','redirect','default:float',0,1024,NULL);
REPLACE INTO table_regex VALUES ('experiments','wa_plr_solverweight','float','redirect','default:float',0,1024,NULL);
REPLACE INTO table_regex VALUES ('experiments','sync_server','text','redirect','virt_nodes:vname',0,0,NULL);

REPLACE INTO table_regex VALUES ('groups','project','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('groups','pid_idx','text','redirect','projects:pid_idx',0,0,NULL);
REPLACE INTO table_regex VALUES ('groups','gid','text','regex','^[a-zA-Z][-\\w]+$',2,32,NULL);
REPLACE INTO table_regex VALUES ('groups','newgid','text','regex','^[a-zA-Z][-a-zA-Z0-9]+$',2,32,NULL);
REPLACE INTO table_regex VALUES ('groups','gid_idx','text','regex','^[\\d]+$',1,12,NULL);
REPLACE INTO table_regex VALUES ('groups','group_id','text','redirect','groups:gid',2,32,NULL);
REPLACE INTO table_regex VALUES ('groups','group_leader','text','redirect','users:uid',2,8,NULL);
REPLACE INTO table_regex VALUES ('groups','group_description','text','redirect','default:tinytext',0,256,NULL);
REPLACE INTO table_regex VALUES ('groups','change','text','regex','^permit$',0,0,NULL);
REPLACE INTO table_regex VALUES ('groups','add','text','regex','^permit$',0,0,NULL);
REPLACE INTO table_regex VALUES ('groups','trust','text','regex','^(user|local_root|group_root)$',0,0,NULL);

REPLACE INTO table_regex VALUES ('nodes','node_id','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('nseconfigs','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('nseconfigs','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('nseconfigs','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('nseconfigs','nseconfig','text','redirect','default:fulltext',0,16777215,NULL);

REPLACE INTO table_regex VALUES ('project_leases','lease_id','text','redirect','virt_nodes:vname',1,32,NULL);
REPLACE INTO table_regex VALUES ('project_quotas','quota_id','text','regex','^[-_\\w\\.:+]+$',1,128,NULL);
REPLACE INTO table_regex VALUES ('project_quotas','notes','text','redirect','default:tinytext',0,256,NULL);

REPLACE INTO table_regex VALUES ('blockstores','node_id','text','redirect','nodes:node_id',0,0,NULL);
REPLACE INTO table_regex VALUES ('blockstores','bs_id','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('blockstores','type','text','regex','^[-\\w]+$',1,30,NULL);

REPLACE INTO table_regex VALUES ('projects','newuser_xml','text','regex','^[-_\\w\\.\\/:+]*$',1,256,NULL);
REPLACE INTO table_regex VALUES ('projects','newpid','text','regex','^[a-zA-Z][-a-zA-Z0-9]+$',2,48,NULL);
REPLACE INTO table_regex VALUES ('projects','head_uid','text','redirect','users:uid',0,0,NULL);
REPLACE INTO table_regex VALUES ('projects','name','text','redirect','default:tinytext',0,256,NULL);
REPLACE INTO table_regex VALUES ('projects','funders','text','redirect','default:tinytext',0,256,NULL);
REPLACE INTO table_regex VALUES ('projects','public','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('projects','linked_to_us','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('projects','forClass','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('projects','public_whynot','text','redirect','default:tinytext',0,256,NULL);
REPLACE INTO table_regex VALUES ('projects','default_user_interface','text','regex','^(emulab|plab)$',2,12,NULL);
REPLACE INTO table_regex VALUES ('projects','pid','text','regex','^[-\\w]+$',2,48,NULL);
REPLACE INTO table_regex VALUES ('projects','pid_idx','text','regex','^[\\d]+$',1,12,NULL);
REPLACE INTO table_regex VALUES ('projects','URL','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('projects','manager_urn','text','regex','^[-_\\w\\.\\/:+]*$',10,128,NULL);
REPLACE INTO table_regex VALUES ('projects','nonlocal_id','text','regex','^[-_\\w\\.\\/:+]*$',10,128,NULL);
REPLACE INTO table_regex VALUES ('projects','nonlocal_type','text','regex','^[-\\w]*$',1,64,NULL);
REPLACE INTO table_regex VALUES ('projects','nsf_funded','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('projects','nsf_supplement','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('projects','industry','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('projects','consortium','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('projects','nsf_awards','text','regex','^[-\\w,]*$',1,128,NULL);
REPLACE INTO table_regex VALUES ('reserved','vname','text','redirect','virt_nodes:vname',1,32,NULL);
REPLACE INTO table_regex VALUES ('users','manager_urn','text','regex','^[-_\\w\\.\\/:+]*$',10,128,NULL);
REPLACE INTO table_regex VALUES ('users','nonlocal_id','text','regex','^[-_\\w\\.\\/:+]*$',10,128,NULL);
REPLACE INTO table_regex VALUES ('users','nonlocal_type','text','regex','^[-\\w]*$',1,64,NULL);
REPLACE INTO table_regex VALUES ('users','uid','text','regex','^[a-zA-Z][\\w]+$',2,8,NULL);
REPLACE INTO table_regex VALUES ('users','uid_idx','text','regex','^[\\d]+$',1,12,NULL);
REPLACE INTO table_regex VALUES ('users','usr_phone','text','regex','^[-\\d\\(\\)\\+\\.x ]+$',7,64,NULL);
REPLACE INTO table_regex VALUES ('users','usr_name','text','regex','^[-\\w\\. ]+$',3,64,NULL);
REPLACE INTO table_regex VALUES ('users','usr_email','text','regex','^([-\\w\\+\\.]+)\\@([-\\w\\.]+)$',3,64,NULL);
REPLACE INTO table_regex VALUES ('users','usr_shell','text','regex','^(csh|sh|bash|tcsh|zsh)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_title','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_affil','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_affil_abbrev','text','redirect','default:tinytext',0,16,NULL);
REPLACE INTO table_regex VALUES ('users','usr_addr','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_addr2','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_state','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_city','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_zip','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_country','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_URL','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','usr_pswd','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','password1','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','password2','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','w_password1','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','w_password2','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','user_interface','text','regex','^(emulab|plab)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','notes','text','redirect','default:fulltext',0,65535,NULL);
REPLACE INTO table_regex VALUES ('users','initial_passphrase','text','redirect','default:tinytext',0,128,NULL);

REPLACE INTO table_regex VALUES ('virt_address_allocation','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_address_allocation','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_address_allocation','pool_id','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_address_allocation','count','text','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_address_allocation','restriction','text','regex','^(contiguous|cidr|any)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_address_allocation','version','text','regex','^(ipv4|ipv6)$',0,0,NULL);

REPLACE INTO table_regex VALUES ('virt_agents','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_agents','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_agents','vname','text','redirect','eventlist:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_agents','vnode','text','regex','^([-\\w]+)|(\\*{1})$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_agents','objecttype','int','redirect','default:tinyint',0,0,NULL);

REPLACE INTO table_regex VALUES ('virt_lans','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','vindex','int','redirect','default:int',0,4098,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','delay','float','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','bandwidth','int','redirect','default:int',0,2147483647,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','lossrate','float','function','_checklossrate',0,1,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_limit','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_maxthresh','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_minthresh','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_weight','float','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_linterm','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_qinbytes','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_bytes','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_meanpsize','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_wait','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_setbit','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_droptail','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_red','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','q_gentle','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','member','text','regex','^[-\\w]+:[\\d]+$',0,128,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','mask','text','regex','^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$',0,15,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','rdelay','float','redirect','virt_lans:delay',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','rbandwidth','int','redirect','virt_lans:bandwidth',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','rlossrate','float','function','_checklossrate',0,1,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','cost','float','redirect','default:float',0,1,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','widearea','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','emulated','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','uselinkdelay','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','forcelinkdelay','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','nobwshaping','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','besteffort','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','nointerswitch','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','usevethiface','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','encap_style','text','redirect','experiments:encap_style',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','trivial_ok','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','traced','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','trace_type','text','regex','^(header|packet|monitor)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','trace_expr','text','redirect','default:text',1,255,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','trace_snaplen','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','trace_endnode','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','trace_db','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','fixed_iface','text','redirect','default:tinytext',0,128,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','modbase','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','compat','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','layer','int','redirect','default:tinyint',1,3,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','ofenabled','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','ofcontroller','text','regex','^tcp:(\\d+\\.+){3,3}\\d+:\\d+$',0,32,NULL);

REPLACE INTO table_regex VALUES ('virt_node_disks','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_disks','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_disks','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_disks','diskname','text','regex','^[-\\w]+$',2,32,NULL);
REPLACE INTO table_regex VALUES ('virt_node_disks','disktype','text','regex','^[-\\w]+$',2,32,NULL);
REPLACE INTO table_regex VALUES ('virt_node_disks','disksize','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_disks','mountpoint','text','redirect','default:tinytext',1,255,NULL);
REPLACE INTO table_regex VALUES ('virt_node_disks','parameters','text','redirect','default:tinytext',1,255,NULL);
REPLACE INTO table_regex VALUES ('virt_node_disks','command','text','redirect','default:tinytext',1,255,NULL);

REPLACE INTO table_regex VALUES ('virt_node_attributes','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_attributes','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_attributes','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_attributes','attrkey','text','regex','^[-\\w]+$',1,64,NULL);
REPLACE INTO table_regex VALUES ('virt_node_attributes','attrvalue','text','regex','^[-\\w\\.\\+,\\s\\/:]+$',0,255,NULL);

REPLACE INTO table_regex VALUES ('virt_node_desires','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_desires','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_desires','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_desires','desire','text','regex','^[\\?\\*]?[\\+\\!\\&]?[-\\w?+]+$',1,64,NULL);
REPLACE INTO table_regex VALUES ('virt_node_desires','weight','int','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','ips','text','regex','^(\\d{1,2}:\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3} {0,1})*$',0,2048,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','cmd_line','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','rpms','text','regex','^([-\\w\\.\\/\\+:~]+;{0,1})*$',0,4096,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','deltas','text','regex','^([-\\w\\.\\/\\+]+:{0,1})*$',0,1024,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','startupcmd','text','redirect','default:html_tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','tarfiles','text','regex','^([-\\w\\.\\/\\+]+\\s+[-\\w\\.\\/\\+:~]+;{0,1})*$',0,1024,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','vname','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','type','text','regex','^[-\\w]*$',0,30,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','failureaction','text','regex','^(fatal|nonfatal|ignore)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','routertype','text','regex','^(none|ospf|static|manual|static-ddijk|static-old)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','fixed','text','redirect','default:tinytext',0,128,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','sharing_mode','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','osname','text','regex','^((([-\\w]+\\/{0,1})[-\\w\\.+]+(:\\d+){0,1})|((http|https|ftp)\\:\\/\\/[-\\w\\.\\/\\@\\:\\~\\?\\=\\&]*))$',2,128,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','parent_osname','text','redirect','virt_nodes:osname',2,128,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','nfsmounts','text','redirect','experiments:nfsmounts',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','rootkey_private','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','rootkey_public','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_programs','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_programs','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_programs','vnode','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_programs','vname','text','regex','^[-\\w\\(\\)]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_programs','command','text','redirect','default:html_tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_routes','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_routes','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_routes','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_routes','src','text','regex','^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}){0,1}$',0,32,NULL);
REPLACE INTO table_regex VALUES ('virt_routes','dst','text','regex','^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})$',0,32,NULL);
REPLACE INTO table_regex VALUES ('virt_routes','dst_type','text','regex','^(host|net)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_routes','dst_mask','text','regex','^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})$',1,15,NULL);
REPLACE INTO table_regex VALUES ('virt_routes','nexthop','text','regex','^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})$',0,32,NULL);
REPLACE INTO table_regex VALUES ('virt_routes','cost','float','redirect','default:float',0,100,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','vnode','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','vname','text','regex','^[-\\w\\(\\)]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','role','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','proto','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','port','text','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','ip','text','regex','^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})$',0,15,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','target_vnode','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','target_vname','text','regex','^[-\\w\\(\\)]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','target_port','text','redirect','virt_trafgens:port',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','target_ip','text','redirect','virt_trafgens:ip',0,15,NULL);
REPLACE INTO table_regex VALUES ('virt_trafgens','generator','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_vtypes','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_vtypes','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_vtypes','name','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_vtypes','weight','float','redirect','default:float',0,1,NULL);
REPLACE INTO table_regex VALUES ('virt_vtypes','members','text','regex','^( ?[-\\w]+ ?)+$',0,1024,NULL);
REPLACE INTO table_regex VALUES ('projects','why','text','redirect','default:fulltext',0,4096,NULL);
REPLACE INTO table_regex VALUES ('projects','num_members','int','redirect','default:int',0,256,NULL);
REPLACE INTO table_regex VALUES ('projects','num_pcs','int','redirect','default:int',0,2048,NULL);
REPLACE INTO table_regex VALUES ('projects','num_pcplab','int','redirect','default:int',0,2048,NULL);
REPLACE INTO table_regex VALUES ('projects','num_ron','int','redirect','default:int',0,1024,NULL);
REPLACE INTO table_regex VALUES ('experiments','encap_style','text','regex','^(alias|veth|veth-ne|vlan|vtun|egre|gre|default)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','veth_encapsulate','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','allowfixnode','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','jail_osname','text','redirect','virt_nodes:osname',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','delay_osname','text','redirect','virt_nodes:osname',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','use_ipassign','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','ipassign_args','text','regex','^[\\w\\s-]*$',0,255,NULL);
REPLACE INTO table_regex VALUES ('experiments','expt_name','text','redirect','default:fulltext',1,255,NULL);
REPLACE INTO table_regex VALUES ('experiments','dpdb','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('experiments','nonfsmounts','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('experiments','skipvlans','int','redirect','default:boolean',0,1,NULL);
REPLACE INTO table_regex VALUES ('experiments','nfsmounts','text','regex','^(emulabdefault|genidefault|all|none)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','packing_strategy','text','regex','^(pack|balance)$',0,0,NULL);

REPLACE INTO table_regex VALUES ('experiments','description','text','redirect','default:fulltext',1,256,NULL);
REPLACE INTO table_regex VALUES ('experiments','idle_ignore','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','swappable','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','noswap_reason','text','redirect','default:tinytext',1,255,NULL);
REPLACE INTO table_regex VALUES ('experiments','idleswap','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','idleswap_timeout','int','redirect','default:int',1,2147483647,NULL);
REPLACE INTO table_regex VALUES ('experiments','noidleswap_reason','text','redirect','default:tinytext',1,255,NULL);
REPLACE INTO table_regex VALUES ('experiments','autoswap','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','autoswap_timeout','int','redirect','default:int',1,2147483647,NULL);
REPLACE INTO table_regex VALUES ('experiments','savedisk','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','lockdown','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','cpu_usage','int','redirect','default:tinyint',0,5,NULL);
REPLACE INTO table_regex VALUES ('experiments','mem_usage','int','redirect','default:tinyint',0,5,NULL);
REPLACE INTO table_regex VALUES ('experiments','batchmode','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','linktest_level','int','redirect','default:tinyint',0,4,NULL);

REPLACE INTO table_regex VALUES ('virt_lans','protocol','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','is_accesspoint','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_settings','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_settings','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_settings','vname','text','redirect','virt_lans:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_settings','capkey','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_settings','capval','text','regex','^[-\\w\\.:+]+$',1,64,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_member_settings','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_member_settings','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_member_settings','vname','text','redirect','virt_lan_settings:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_member_settings','member','text','redirect','virt_lans:member',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_member_settings','capkey','text','redirect','virt_lan_settings:capkey',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_member_settings','capval','text','redirect','virt_lan_settings:capval',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','est_bandwidth','int','redirect','default:int',0,2147483647,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','rest_bandwidth','int','redirect','default:int',0,2147483647,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','backfill','int','redirect','default:int',0,2147483647,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','rbackfill','int','redirect','default:int',0,2147483647,NULL);
REPLACE INTO table_regex VALUES ('location_info','floor','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('location_info','building','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('location_info','loc_x','int','redirect','default:int',0,2048,NULL);
REPLACE INTO table_regex VALUES ('location_info','loc_y','int','redirect','default:int',0,2048,NULL);
REPLACE INTO table_regex VALUES ('location_info','contact','text','redirect','users:usr_name',0,64,NULL);
REPLACE INTO table_regex VALUES ('location_info','phone','text','regex','^[-\\d\\(\\)\\+\\.x ]+$',7,64,NULL);
REPLACE INTO table_regex VALUES ('location_info','room','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','vnode','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','vport','int','redirect','default:tinyint',0,99,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','bridge_vname','text','redirect','virt_lans:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','ip','text','regex','^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})$',0,15,NULL);
REPLACE INTO table_regex VALUES ('experiments','usemodelnet','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','modelnet_cores','int','redirect','default:tinyint',0,5,NULL);
REPLACE INTO table_regex VALUES ('experiments','modelnet_edges','int','redirect','default:tinyint',0,5,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','mustdelay','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('event_groups','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('event_groups','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('event_groups','group_name','text','redirect','eventlist:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('event_groups','agent_name','text','redirect','eventlist:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_lans','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_lans','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_lans','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lan_lans','failureaction','text','regex','^(fatal|nonfatal)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('firewall_rules','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('firewall_rules','eid','text','redirect','experimenets:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('firewall_rules','fwname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('firewall_rules','ruleno','int','redirect','default:int',0,50000,NULL);
REPLACE INTO table_regex VALUES ('firewall_rules','rule','text','regex','^\\w[-\\w \\t,/\\{\\}\\(\\)!:\\.]*$',0,1024,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','role','text','regex','^(node|bridge)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','inner_elab_role','text','regex','^(boss|boss\\+router|boss\\+fs\\+router|router|ops|ops\\+fs|fs|node)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','plab_role','text','regex','^(plc|node|none)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','elab_in_elab','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','elabinelab_singlenet','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiments','elabinelab_cvstag','text','regex','^[-\\w\\@\\/\\.]+$',0,0,NULL);

REPLACE INTO table_regex VALUES ('images','imagename','text','regex','^[a-zA-Z0-9][-\\w\\.+]+$',2,30,NULL);
REPLACE INTO table_regex VALUES ('images','imageid','text','redirect','default:int',0,100000000,NULL);
REPLACE INTO table_regex VALUES ('images','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','gid','text','redirect','groups:gid',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','description','text','redirect','default:fulltext',1,256,NULL);
REPLACE INTO table_regex VALUES ('images','loadpart','text','redirect','default:tinyint',0,4,NULL);
REPLACE INTO table_regex VALUES ('images','loadlength','text','redirect','default:tinyint',1,4,NULL);
REPLACE INTO table_regex VALUES ('images','part1_osid','text','redirect','os_info:osid',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','part2_osid','text','redirect','os_info:osid',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','part3_osid','text','redirect','os_info:osid',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','part4_osid','text','redirect','os_info:osid',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','default_osid','text','redirect','os_info:osid',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','path','text','regex','^[-_\\w\\.\\/:+]*$',1,256,NULL);
REPLACE INTO table_regex VALUES ('images','shared','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','global','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','listed','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','ims_noreport','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','noexport','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','makedefault','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','mtype','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','node_id','text','redirect','nodes:node_id',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','load_address','text','redirect','default:text',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','frisbee_pid','text','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','metadata_url','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','imagefile_url','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','notes','text','redirect','default:fulltext',0,1024,NULL);
REPLACE INTO table_regex VALUES ('images','nodetype','text','redirect','node_types:node_type',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','OS','text','redirect','os_info:OS',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','version','text','redirect','os_info:version',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','osfeatures','text','redirect','os_info:osfeatures',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','op_mode','text','redirect','os_info:op_mode',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','wholedisk','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','mbr_version','text','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','max_concurrent','text','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','reboot_waittime','text','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','format','text','regex','^[-\\w]+$',1,8,NULL);
REPLACE INTO table_regex VALUES ('images','hash','text','regex','^[\\w]+$',16,64,NULL);
REPLACE INTO table_regex VALUES ('images','deltahash','text','regex','^[\\w]+$',16,64,NULL);
REPLACE INTO `table_regex` VALUES ('images','size','int','redirect','default:bigint',0,0,NULL);
REPLACE INTO `table_regex` VALUES ('images','deltasize','int','redirect','default:bigint',0,0,NULL);
REPLACE INTO `table_regex` VALUES ('images','lba_low','int','redirect','default:bigint',0,0,NULL);
REPLACE INTO `table_regex` VALUES ('images','lba_high','int','redirect','default:bigint',0,0,NULL);
REPLACE INTO `table_regex` VALUES ('images','lba_size','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','relocatable','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','origin_uuid','text','regex','^\\w+\\-\\w+\\-\\w+\\-\\w+\\-\\w+$',0,64,NULL);
REPLACE INTO table_regex VALUES ('images','origin_name','text','regex','^[-\\w\\.+:\\/]+$',0,128,NULL);
REPLACE INTO table_regex VALUES ('images','origin_urn','text','redirect','projects:manager_urn',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','architecture','text','regex','^[\\w,]*$',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','new_type','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','node_type','text','regex','^[-\\w]+$',1,30,NULL);
REPLACE INTO table_regex VALUES ('node_types','class','text','regex','^[\\w]+$',1,30,NULL);
REPLACE INTO table_regex VALUES ('node_types','architecture','text','regex','^[\\w,]*$',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','isvirtnode','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','isjailed','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','isswitch','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','isdynamic','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','isremotenode','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','issubnode','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','isplabdslice','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','issimnode','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','isgeninode','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','isfednode','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','attr_name','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('node_types','attr_osid','text','redirect','os_info:osid',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','attr_imageid','text','redirect','images:imageid',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','attr_boolean','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','attr_integer','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','attr_float','float','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('node_types','attr_string','text','redirect','default:tinytext',0,0,NULL);

REPLACE INTO table_regex VALUES ('experiments','security_level','int','redirect','default:tinyuint',0,4,NULL);
REPLACE INTO table_regex VALUES ('experiments','elabinelab_eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_startloc','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_startloc','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_startloc','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_startloc','building','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_node_startloc','floor','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_node_startloc','loc_x','float','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_startloc','loc_y','float','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_startloc','orientation','float','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('eventlist','parent','text','regex','^[-\\w\\(\\)]+$',1,64,NULL);
REPLACE INTO table_regex VALUES ('experiments','delay_capacity','int','redirect','default:tinyint',1,10,NULL);
REPLACE INTO table_regex VALUES ('virt_user_environment','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_user_environment','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_user_environment','name','text','redirect','^[a-zA-Z][-\\w]+$',0,255,NULL);
REPLACE INTO table_regex VALUES ('virt_user_environment','value','text','redirect','default:text',1,512,NULL);
REPLACE INTO table_regex VALUES ('virt_programs','dir','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_programs','timeout','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_programs','expected_exit_code','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('users','wikiname','text','regex','^[A-Z]+[a-z]+[A-Z]+[A-Za-z0-9]*$',4,64,NULL);
REPLACE INTO table_regex VALUES ('virt_tiptunnels','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_tiptunnels','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_tiptunnels','host','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_tiptunnels','vnode','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','numeric_id','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_firewalls','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_firewalls','eid','text','redirect','experimenets:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_firewalls','fwname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_firewalls','type','text','regex','^(ipfw|ipfw2|iptables|ipfw2-vlan|iptables-vlan)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_firewalls','style','text','regex','^(open|closed|basic|emulab)$',0,0,NULL);

REPLACE INTO table_regex VALUES ('virt_nodes','firewall_style','text','regex','^(open|closed|basic|emulab)$',0,0,NULL);

REPLACE INTO table_regex VALUES ('mailman_lists','pid_idx','text','redirect','projects:pid_idx',0,0,NULL);
REPLACE INTO table_regex VALUES ('mailman_lists','password1','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('mailman_lists','password2','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('mailman_lists','fullname','text','redirect','users:usr_email',0,0,NULL);
REPLACE INTO table_regex VALUES ('mailman_lists','listname','text','redirect','mailman_listnames:listname',0,0,NULL);

REPLACE INTO table_regex VALUES ('mailman_listnames','listname','text','regex','^[-\\w\\.\\+]+$',3,64,NULL);

REPLACE INTO table_regex VALUES ('node_attributes','attrkey','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('node_attributes','attrvalue','text','regex','^[-\\w\\.\\+,\\s\\/:]+$',0,255,NULL);
REPLACE INTO table_regex VALUES ('archive_tags','description','text','redirect','projects:why',1,2048,NULL);
REPLACE INTO table_regex VALUES ('archive_tags','tag','text','regex','^[a-zA-Z][-\\w\\.\\+]+$',2,64,NULL);
REPLACE INTO table_regex VALUES ('experiment_templates','description','text','redirect','default:fulltext',1,4096,NULL);
REPLACE INTO table_regex VALUES ('experiment_templates','guid','text','regex','^[\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('experiment_template_metadata','name','text','redirect','default:tinytext',1,64,NULL);
REPLACE INTO table_regex VALUES ('experiment_template_metadata','value','text','redirect','default:fulltext',0,4096,NULL);
REPLACE INTO table_regex VALUES ('experiment_template_metadata','metadata_type','text','regex','^[\\w]*$',1,64,NULL);
REPLACE INTO table_regex VALUES ('virt_parameters','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_parameters','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_parameters','name','text','regex','^\\w[-\\w]+$',1,64,NULL);
REPLACE INTO table_regex VALUES ('virt_parameters','value','text','redirect','default:tinytext',0,256,NULL);
REPLACE INTO table_regex VALUES ('virt_parameters','description','text','redirect','experiment_templates:description',0,1024,NULL);
REPLACE INTO table_regex VALUES ('experiment_template_instance_bindings','name','text','regex','^\\w[-\\w]+$',1,64,NULL);
REPLACE INTO table_regex VALUES ('experiment_template_instance_bindings','value','text','redirect','default:tinytext',0,256,NULL);
REPLACE INTO table_regex VALUES ('experiment_runs','runid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiment_runs','description','text','redirect','default:tinytext',1,256,NULL);
REPLACE INTO table_regex VALUES ('experiment_run_bindings','name','text','regex','^\\w[-\\w]+$',1,64,NULL);
REPLACE INTO table_regex VALUES ('experiment_run_bindings','value','text','redirect','default:tinytext',0,256,NULL);
REPLACE INTO table_regex VALUES ('experiment_template_instances','description','text','redirect','default:tinytext',1,256,NULL);
REPLACE INTO table_regex VALUES ('virt_node_motelog','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_motelog','logfileid','text','regex','^[-\\w\\.+]+$',2,45,NULL);
REPLACE INTO table_regex VALUES ('virt_node_motelog','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_node_motelog','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO `table_regex` VALUES ('virt_nodes','plab_plcnet','text','regex','^[\\w\\_\\d]+$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_nodes','loadlist','text','regex','^[-\\w\\.+,]+$',2,256,NULL);
REPLACE INTO table_regex VALUES ('os_info','osid','text','regex','^[-\\w\\.+]+$',2,35,NULL);
REPLACE INTO table_regex VALUES ('os_info','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('os_info','pid_idx','text','redirect','projects:pid_idx',0,0,NULL);
REPLACE INTO table_regex VALUES ('os_info','osname','text','regex','^[-\\w\\.+]+$',2,30,NULL);
REPLACE INTO table_regex VALUES ('os_info','description','text','redirect','default:fulltext',1,256,NULL);
REPLACE INTO table_regex VALUES ('os_info','OS','text','regex','^[-\\w]*$',1,32,NULL);
REPLACE INTO table_regex VALUES ('os_info','version','text','regex','^[-\\w\\.]*$',1,12,NULL);
REPLACE INTO table_regex VALUES ('os_info','path','text','regex','^[-\\w\\.\\/:]*$',1,256,NULL);
REPLACE INTO table_regex VALUES ('os_info','magic','text','redirect','default:tinytext',0,256,NULL);
REPLACE INTO table_regex VALUES ('os_info','shared','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('os_info','mfs','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('os_info','mustclean','int','redirect','default:tinyint',0,1,NULL);
REPLACE INTO table_regex VALUES ('os_info','osfeatures','text','regex','^[-\\w,]*$',1,128,NULL);
REPLACE INTO table_regex VALUES ('os_info','op_mode','text','regex','^[-\\w]*$',1,20,NULL);
REPLACE INTO table_regex VALUES ('os_info','nextosid','text','redirect','os_info:osid',0,0,NULL);
REPLACE INTO table_regex VALUES ('os_info','def_parentosid','text','redirect','os_info:osid',0,0,NULL);
REPLACE INTO table_regex VALUES ('os_info','reboot_waittime','int','redirect','default:int',0,2000,NULL);
REPLACE INTO table_regex VALUES ('os_info','taint_states','text','regex','^[-\\w,]*$',1,128,NULL);

REPLACE INTO table_regex VALUES ('sitevariables','name','text','regex','^[\\w\\/]+$',1,255,NULL);
REPLACE INTO table_regex VALUES ('sitevariables','value','text','redirect','default:html_text',0,0,NULL);
REPLACE INTO table_regex VALUES ('sitevariables','reset','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('sitevariables','defaultvalue','text','redirect','default:html_text',0,0,NULL);
REPLACE INTO table_regex VALUES ('sitevariables','description','text','redirect','default:html_text',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiment_template_searches','name','text','regex','^[-\\w]*$',2,64,NULL);

REPLACE INTO table_regex VALUES ('user_pubkeys','verify','text','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('user_pubkeys','user','text','redirect','users:uid',0,0,NULL);
REPLACE INTO table_regex VALUES ('user_pubkeys','keyfile','text','regex','^[-_\\w\\.\\/:+]*$',1,256,NULL);

REPLACE INTO table_regex VALUES ('virt_paths','pathname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_paths','segmentname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_paths','segmentindex','int','redirect','default:tinyuint',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_paths','layer','int','redirect','default:tinyint',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_bridges','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_bridges','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_bridges','vname','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_bridges','vlink','text','redirect','virt_lans:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_bridges','vport','int','redirect','default:tinyint',0,99,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','implemented_by_path','text','redirect','virt_paths:pathname',1,128,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','implemented_by_link','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_lans','ip_aliases','text','redirect','default:tinytext',0,0,NULL);

REPLACE INTO table_regex VALUES ('elabinelab_attributes','role','text','regex','^(boss|router|ops|fs|node)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('elabinelab_attributes','attrkey','text','regex','^[-\\w\\.]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('elabinelab_attributes','attrvalue','text','regex','^[-\\w\\.\\+,\\s\\/:\\@]+$',0,255,NULL);
REPLACE INTO table_regex VALUES ('elabinelab_attributes','ordering','int','redirect','default:tinyint',0,0,NULL);

REPLACE INTO table_regex VALUES ('images','auth_key','text','regex','^[0-9a-fA-F,]+$',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','auth_uuid','text','regex','^[0-9a-fA-F]+$',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','decryption_key','text','regex','^[0-9a-fA-F]+$',0,0,NULL);
REPLACE INTO table_regex VALUES ('images','isdataset','int','redirect','default:boolean',0,0,NULL);

REPLACE INTO table_regex VALUES ('experiment_blobs','path','text','redirect','default:text',0,0,NULL);
REPLACE INTO table_regex VALUES ('experiment_blobs','action','text','redirect','default:text',0,0,NULL);

REPLACE INTO table_regex VALUES ('virt_blobs','filename','text','redirect','default:tinytext',0,256,NULL);
REPLACE INTO table_regex VALUES ('virt_blobs','vblob_id','text','regex','^[-\\d\\w]+$',0,40,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','alt_vblob_id','text','regex','^[-\\d\\w]+$',0,40,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','enable','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','enable_hooks','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','env','text','regex','^(boot|load)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','fatal','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','service_idx','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','vnode','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_ctl','whence','text','regex','^(first|every)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','argv','text','regex','^[-\\w\\s\"]*$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','env','text','regex','^(boot|load)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','fatal','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','hook_op','text','regex','^(boot|shutdown|reconfig|reset)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','hook_point','text','regex','^(pre|post)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','hook_vblob_id','text','regex','^[-\\d\\w]+$',0,40,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','op','text','regex','^(boot|shutdown|reconfig|reset)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','point','text','regex','^(pre|post)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','service_idx','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','vnode','text','redirect','virt_nodes:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_client_service_hooks','whence','text','regex','^(first|every)$',0,0,NULL);

REPLACE INTO table_regex VALUES ('virt_blockstores','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstores','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstores','vname','text','regex','^[-\\w]+$',1,32,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstores','type','text','regex','^[-\\w]*$',0,30,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstores','role','text','regex','^(remote|local|unknown)$',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstores','size','int','redirect','default:int',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstores','fixed','text','redirect','default:tinytext',0,128,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstore_attributes','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstore_attributes','eid','text','redirect','experiments:eid',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstore_attributes','vname','text','redirect','virt_blockstores:vname',0,0,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstore_attributes','attrkey','text','regex','^[-\\w]+$',1,64,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstore_attributes','attrvalue','text','redirect','default:tinytext',0,255,NULL);
REPLACE INTO table_regex VALUES ('virt_blockstore_attributes','isdesire','int','redirect','default:boolean',0,0,NULL);

REPLACE INTO table_regex VALUES ('emulab_sites','certificate','text','regex','^[\\012\\015\\040-\\176]*$',128,4096,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','url','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','urn','text','regex','^[-_\\w\\.\\/:+]*$',10,255,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','commonname','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','buildinfo','text','regex','^[-\\w\\/]*$',8,32,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','commithash','text','regex','^[\\w]*$',32,64,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','dbrev','float','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','install','float','redirect','default:float',0,0,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','os_version','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','perl_version','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('emulab_sites','tbops','text','redirect','users:usr_email',0,0,NULL);

REPLACE INTO table_regex VALUES ('default','fulltext','text','regex','^[\\040-\\073\\075\\077-\\176\\012\\015\\011]*$',0,100000,NULL);
REPLACE INTO table_regex VALUES ('default','html_fulltext','text','regex','^[\\040-\\176\\012\\015\\011]*$',0,100000,NULL);

REPLACE INTO table_regex VALUES ('default','tinytext','text','regex','^[\\040-\\073\\075\\077-\\176]*$',0,256,NULL);
REPLACE INTO table_regex VALUES ('default','html_tinytext','text','regex','^[\\040-\\176]*$',0,256,NULL);

REPLACE INTO table_regex VALUES ('default','text','text','regex','^[\\040-\\073\\075\\077-\\176]*$',0,65535,NULL);
REPLACE INTO table_regex VALUES ('default','html_text','text','regex','^[\\040-\\176]*$',0,65535,NULL);

REPLACE INTO table_regex VALUES ('default','default','text','regex','^[\\040-\\073\\075\\077-\\176]*$',0,256,'Default regex if one is not defined for a table/slot. Allow any standard ascii character, but no binary data');

REPLACE INTO table_regex VALUES ('default','tinyint','int','regex','^[-+]?[\\d]+$',-128,127,'Default regex for tiny int fields. Allow any standard ascii integer, but no binary data');
REPLACE INTO table_regex VALUES ('default','boolean','int','regex','^(0|1)$',0,1,'Default regex for tiny int fields that are int booleans. Allow any 0 or 1');
REPLACE INTO table_regex VALUES ('default','tinyuint','int','regex','^[\\d]+$',0,255,'Default regex for tiny int fields. Allow any standard ascii integer, but no binary data');
REPLACE INTO table_regex VALUES ('default','int','int','regex','^[-+]?[\\d]+$',-2147483648,2147483647,'Default regex for int fields. Allow any standard ascii integer, but no binary data');
REPLACE INTO table_regex VALUES ('default','float','float','regex','^[+-]?\\ *(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?$',-2147483648,2147483647,'Default regex for float fields. Allow any digits and the decimal point');
REPLACE INTO table_regex VALUES ('default','bigint','int','regex','^[-+]?[\\d]+$',0,0,'Allow any ascii 64-bit integer');
REPLACE INTO table_regex VALUES ('default','tinytext_utf8','text','regex','^(?:[\\x20-\\x7E]|[\\xC2-\\xDF][\\x80-\\xBF]|\\xE0[\\xA0-\\xBF][\\x80-\\xBF]|[\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}|\\xED[\\x80-\\x9F][\\x80-\\xBF])*$',0,256,'adopted from http://www.w3.org/International/questions/qa-forms-utf-8.en.php');
REPLACE INTO table_regex VALUES ('default','text_utf8','text','regex','^(?:[\\x20-\\x7E]|[\\xC2-\\xDF][\\x80-\\xBF]|\\xE0[\\xA0-\\xBF][\\x80-\\xBF]|[\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}|\\xED[\\x80-\\x9F][\\x80-\\xBF])*$',0,65535,'adopted from http://www.w3.org/International/questions/qa-forms-utf-8.en.php');
REPLACE INTO table_regex VALUES ('default','fulltext_utf8','text','regex','^(?:[\\x09\\x0A\\x0D\\x20-\\x7E]|[\\xC2-\\xDF][\\x80-\\xBF]|\\xE0[\\xA0-\\xBF][\\x80-\\xBF]|[\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}|\\xED[\\x80-\\x9F][\\x80-\\xBF])*$',0,65535,'adopted from http://www.w3.org/International/questions/qa-forms-utf-8.en.php');

REPLACE INTO table_regex VALUES ('apt_profiles','pid','text','redirect','projects:pid',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','creator','text','redirect','users:uid',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','name','text','redirect','images:imagename',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','public','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','listed','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','shared','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','topdog','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','project_write','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','disabled','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','nodelete','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','description','text','redirect','default:html_fulltext',0,512,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','rspec','text','redirect','default:html_fulltext',0,262143,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','script','text','redirect','default:html_fulltext',0,262143,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','repourl','text','redirect','default:tinytext',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','repohash','text','regex','^[\\w]+$',0,64,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','portal_converted','int','redirect','default:boolean',0,0,NULL);
REPLACE INTO table_regex VALUES ('apt_profiles','examples_portals','text','regex','^((emulab|cloudlab|powder|phantomnet),?+){0,4}$',0,128,NULL);
--
-- Dumping data for table `testsuite_preentables`
--


REPLACE INTO testsuite_preentables VALUES ('comments','drop');
REPLACE INTO testsuite_preentables VALUES ('iface_counters','drop');
REPLACE INTO testsuite_preentables VALUES ('experiment_resources','clean');
REPLACE INTO testsuite_preentables VALUES ('login','drop');
REPLACE INTO testsuite_preentables VALUES ('loginmessage','drop');
REPLACE INTO testsuite_preentables VALUES ('node_idlestats','drop');
REPLACE INTO testsuite_preentables VALUES ('nodelog','drop');
REPLACE INTO testsuite_preentables VALUES ('nodeuidlastlogin','drop');
REPLACE INTO testsuite_preentables VALUES ('nologins','drop');
REPLACE INTO testsuite_preentables VALUES ('userslastlogin','drop');
REPLACE INTO testsuite_preentables VALUES ('uidnodelastlogin','drop');
REPLACE INTO testsuite_preentables VALUES ('next_reserve','clean');
REPLACE INTO testsuite_preentables VALUES ('last_reservation','clean');
REPLACE INTO testsuite_preentables VALUES ('current_reloads','clean');
REPLACE INTO testsuite_preentables VALUES ('scheduled_reloads','clean');
REPLACE INTO testsuite_preentables VALUES ('projects','prune');
REPLACE INTO testsuite_preentables VALUES ('group_membership','prune');
REPLACE INTO testsuite_preentables VALUES ('groups','prune');
REPLACE INTO testsuite_preentables VALUES ('user_sfskeys','clean');
REPLACE INTO testsuite_preentables VALUES ('user_pubkeys','clean');
REPLACE INTO testsuite_preentables VALUES ('port_counters','drop');
REPLACE INTO testsuite_preentables VALUES ('images','prune');
REPLACE INTO testsuite_preentables VALUES ('os_info','prune');
REPLACE INTO testsuite_preentables VALUES ('node_activity','clean');
REPLACE INTO testsuite_preentables VALUES ('portmap','clean');
REPLACE INTO testsuite_preentables VALUES ('webnews','clean');
REPLACE INTO testsuite_preentables VALUES ('vis_nodes','clean');
REPLACE INTO testsuite_preentables VALUES ('virt_routes','clean');
REPLACE INTO testsuite_preentables VALUES ('group_stats','clean');
REPLACE INTO testsuite_preentables VALUES ('project_stats','clean');
REPLACE INTO testsuite_preentables VALUES ('user_stats','clean');
REPLACE INTO testsuite_preentables VALUES ('experiment_stats','clean');
REPLACE INTO testsuite_preentables VALUES ('testbed_stats','clean');

--
-- Dumping data for table `webdb_table_permissions`
--


REPLACE INTO webdb_table_permissions VALUES ('comments',1,1,1);
REPLACE INTO webdb_table_permissions VALUES ('foreign_keys',1,1,1);
REPLACE INTO webdb_table_permissions VALUES ('images',1,0,1);
REPLACE INTO webdb_table_permissions VALUES ('interfaces',1,1,1);
REPLACE INTO webdb_table_permissions VALUES ('interface_types',1,1,1);
REPLACE INTO webdb_table_permissions VALUES ('lastlogin',1,1,1);
REPLACE INTO webdb_table_permissions VALUES ('nodes',1,1,0);
REPLACE INTO webdb_table_permissions VALUES ('node_types',1,1,0);
REPLACE INTO webdb_table_permissions VALUES ('tiplines',1,1,1);
REPLACE INTO webdb_table_permissions VALUES ('os_info',1,1,1);
REPLACE INTO webdb_table_permissions VALUES ('projects',1,1,0);
REPLACE INTO webdb_table_permissions VALUES ('osidtoimageid',1,0,1);
REPLACE INTO webdb_table_permissions VALUES ('table_regex',1,1,1);


--
-- Dumping data for table `emulab_pubs_month_map`
--

REPLACE INTO `emulab_pubs_month_map` VALUES (1,0.0,'');
REPLACE INTO `emulab_pubs_month_map` VALUES (2,1.0,'Jan');
REPLACE INTO `emulab_pubs_month_map` VALUES (3,2.0,'Feb');
REPLACE INTO `emulab_pubs_month_map` VALUES (4,3.0,'Mar');
REPLACE INTO `emulab_pubs_month_map` VALUES (5,4.0,'Apr');
REPLACE INTO `emulab_pubs_month_map` VALUES (6,5.0,'May');
REPLACE INTO `emulab_pubs_month_map` VALUES (7,6.0,'Jun');
REPLACE INTO `emulab_pubs_month_map` VALUES (8,7.0,'Jul');
REPLACE INTO `emulab_pubs_month_map` VALUES (9,8.0,'Aug');
REPLACE INTO `emulab_pubs_month_map` VALUES (10,9.0,'Sep');
REPLACE INTO `emulab_pubs_month_map` VALUES (11,10.0,'Oct');
REPLACE INTO `emulab_pubs_month_map` VALUES (12,11.0,'Nov');
REPLACE INTO `emulab_pubs_month_map` VALUES (13,12.0,'Dec');
REPLACE INTO `emulab_pubs_month_map` VALUES (14,1.5,'Jan-Feb');
REPLACE INTO `emulab_pubs_month_map` VALUES (15,2.5,'Feb-Mar');
REPLACE INTO `emulab_pubs_month_map` VALUES (16,3.5,'Mar-Apr');
REPLACE INTO `emulab_pubs_month_map` VALUES (17,4.5,'Apr-May');
REPLACE INTO `emulab_pubs_month_map` VALUES (18,5.5,'May-Jun');
REPLACE INTO `emulab_pubs_month_map` VALUES (19,6.5,'Jun-Jul');
REPLACE INTO `emulab_pubs_month_map` VALUES (20,7.5,'Jul-Aug');
REPLACE INTO `emulab_pubs_month_map` VALUES (21,8.5,'Aug-Sep');
REPLACE INTO `emulab_pubs_month_map` VALUES (22,9.5,'Sep-Oct');
REPLACE INTO `emulab_pubs_month_map` VALUES (23,10.5,'Oct-Nov');
REPLACE INTO `emulab_pubs_month_map` VALUES (24,11.5,'Nov-Dec');
REPLACE INTO `emulab_pubs_month_map` VALUES (25,12.5,'Dec-Jan');

REPLACE INTO `event_triggertypes`  VALUES (0,'TIMER');
REPLACE INTO `event_triggertypes`  VALUES (2,'SWAPOUT');
