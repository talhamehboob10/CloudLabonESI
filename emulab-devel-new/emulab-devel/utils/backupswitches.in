#!/usr/bin/perl
#
# Copyright (c) 2005-2017 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

my $BACKUPDIR = '@prefix@/backup/switch-config';
my $TMPFILE = "/tftpboot/switch-backup";
my $GRAB = "@prefix@/sbin/grabswitchconfig";

use lib '@prefix@/lib';
use libdb;
use lib '@prefix@/lib/snmpit';
use snmpit_lib;

use strict;
use English;

sub usage() {
    print "Usage: backupswitches <switches...>\n";
    exit 1;
}

if ($UID && !TBAdmin($UID)) {
    die "*** $0:\n" .
        "    Sorry, only admins get to run this script\n";
}

if (!@ARGV) {
    usage();
}

#
# Get today's date, nicely formatted
#
my ($junk,$junk,$junk,$mday,$mon,$year,$junk,$junk,$junk) = localtime(time);
$year += 1900;
$mon = sprintf("%02d",$mon + 1);
$mday = sprintf("%02d",$mday);
my $datestr = "$year-$mon-$mday";

#
# Back up each switch in turn
#
unlink $TMPFILE;
foreach my $switch (@ARGV) {
    #
    # Is it a Cisco or maybe an HP
    my $type = getDeviceType($switch);
    if ($type !~ /(cisco|catalyst|hp|force10)/) {
	print STDERR
	    " *** $0:\n" .
	    "     ignoring unsupported switch type (type $type)\n";
	next;
    }
    if ($type =~ /(cisco|catalyst)/) {
	if (system("$GRAB $switch $TMPFILE")) {
	    print STDERR "Unable to grab config for $switch, ignored\n";
	    next;
	}
	if (system("mv $TMPFILE $BACKUPDIR/$switch-$datestr")) {
	    unlink($TMPFILE);
	    print STDERR "Unable to move config file to $BACKUPDIR/$switch-$datestr, ignored\n";
	    next;
	}
    }
    if ($type =~ /hp/) {
	if (system("scp $switch:/cfg/running-config $BACKUPDIR/$switch-$datestr")) {
	    print STDERR "Unable to grab and save config for $switch, ignored\n";
	    next;
	}
    }
    if ($type =~ /force10/) {
	if (system("ssh toor\@$switch write terminal \> $BACKUPDIR/$switch.in")) {
	    if (($? >> 8) != 255) {
		print STDERR "Unable to grab and save config for $switch ($?), ignored\n";
		next;
	    }
	}
        if (system("egrep -v \\#\\|Current\\|SupportAssist $BACKUPDIR/$switch.in \> $BACKUPDIR/$switch-$datestr")) {
	    unlink("$BACKUPDIR/$switch.in");
	    print STDERR "Unable to strip first and last lines for $switch, ignored\n";
	    next;
	}
	unlink("$BACKUPDIR/$switch.in");
    }
}

exit 0;
