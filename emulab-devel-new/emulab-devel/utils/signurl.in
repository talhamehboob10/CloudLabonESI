#!/usr/bin/perl -w
#
# Copyright (c) 2003-2018, 2020 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
use strict;
use English;
use Getopt::Std;
use Data::Dumper;

#
# Sign a url. 
#
sub usage()
{
    print STDERR "Usage: signurl <url> <arg>\n";
    exit(-1);
}
my $optlist   = "t:";
my $webtask_id;
my $webtask;

# Protos
sub fatal($);

#
# Configure variables
#
my $TB		   = "@prefix@";

#
# Testbed Support libraries
#
use lib "@prefix@/lib";
use libSignedURL;
use WebTask;

#
# Turn off line buffering on output
#
$| = 1;

#
# Untaint the path
# 
$ENV{'PATH'} = "/bin:/sbin:/usr/bin:";

#
# Parse command arguments. 
#
my %options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (defined($options{"t"})) {
    $webtask_id = $options{"t"};
    $webtask = WebTask->Lookup($webtask_id);
    if (!defined($webtask)) {
	fatal("Could not lookup webtask $webtask_id");
    }
    # Convenient.
    $webtask->AutoStore(1);
}
usage()
    if (@ARGV != 2);

my $url = $ARGV[0];
my $arg = $ARGV[1];

#
# Arg can be any string, even a json encoded blob.
#
my $signed;
if (EncodeURL($url, $arg, time() + 20, \$signed)) {
    fatal("Could not sign URL: $signed");
}
print $signed . "\n";
if (defined($webtask)) {
    $webtask->url($signed);
    $webtask->Exited(0);
}
exit(0);

sub fatal($)
{
    my ($mesg) = $_[0];

    if (defined($webtask)) {
	$webtask->output($mesg);
	$webtask->Exited(-1);
    }
    die("*** $0:\n".
	"    $mesg\n");
}
