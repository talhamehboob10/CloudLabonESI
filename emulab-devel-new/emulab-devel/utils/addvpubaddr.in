#!/usr/bin/perl -w

#
# Copyright (c) 2012 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

use English;
use strict;
use Socket;

#
# Configure variables
#
my $TB			= "@prefix@";
my $control_netmask     = "@CONTROL_NETMASK@";

#
# Turn off line buffering on output
#
$| = 1;

#
# Untaint the path
# 
$ENV{'PATH'} = "$TB/bin:$TB/sbin:/bin:/usr/bin:/sbin:/usr/sbin";
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

#
# Testbed Support libraries
#
use lib "@prefix@/lib";
use libdb;
use libtestbed;

#
# Handle command-line options.
#
sub usage() {
    print STDERR "Usage: $0 [-d] aaa.bbb.ccc.ddd eee.fff.ggg.hhh [mmm.nnn.ooo.ppp]\n" .
	"    where aaa.bbb.ccc.ddd is the first addresses to add,\n" .
	"          eee.fff.ggg.hhh is the last address to add,\n" .
	"          mmm.nnn.ooo.ppp is the optional netmask to apply\n" .
	"              (default is control network netmask).\n" .
	"    if -d is specified, the addresses in range are deleted.\n";
    exit( 1 );
}

my $delete;

if( $ARGV[ 0 ] eq "-d" ) {
    $delete = 1;
    shift;
}

usage() unless @ARGV == 2 || @ARGV == 3;

my $first = unpack( "N", inet_aton( $ARGV[ 0 ] ) );
my $last = unpack( "N", inet_aton( $ARGV[ 1 ] ) );
my $netmask;

if( @ARGV == 2 ) {
    $netmask = $control_netmask;
} else {
    $netmask = $ARGV[ 2 ];
    $netmask =~ /^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$/ or usage();
}

my $i;

for( $i = $first; $i <= $last; $i++ ) {
    my $addr = inet_ntoa( pack( "N", $i ) );
    my $result;

    if( $delete ) {
	$result = DBQueryWarn( "DELETE FROM virt_node_public_addr WHERE " .
			       "IP='$addr' AND node_id IS NULL AND " .
			       "pid IS NULL AND eid IS NULL" );
    } else {
	$result = DBQueryWarn( "INSERT INTO virt_node_public_addr SET " .
			       "IP='$addr', mask='$netmask'" );
    }

    if( !defined( $result ) or $result->affectedrows < 1 ) {
	print STDERR "warning: unable to " . ( $delete ? "delete" : "add" ) .
	    " address $addr\n";
    }
}

exit( 0 );
