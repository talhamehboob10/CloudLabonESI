<?php
#
# Copyright (c) 2000-2019 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

#
# Aggregate Status.
#
function Do_AggregateStatus()
{
    global $this_user;
    global $ajax_args;
    $blob = array();

    if (!(ISADMIN() || ISFOREIGN_ADMIN())) {
	SPITAJAX_ERROR(-1, "Not enough permission");
	return -1;
    }
    $ams = Aggregate::AllAggregatesList();

    while (list($index, $aggregate) = each($ams)) {
        $urn = $aggregate->urn();

        $blob[$urn] =
            array("urn"          => $urn,
                  "name"         => $aggregate->name(),
                  "abbrev"       => $aggregate->abbreviation(),
                  "nickname"     => $aggregate->nickname(),
                  "url"          => $aggregate->weburl(),
                  "disabled"     => intval($aggregate->disabled()),
                  "adminonly"    => intval($aggregate->adminonly()),
                  "datasets"     => intval($aggregate->has_datasets()),
                  "reservations" => intval($aggregate->reservations()),
                  "monitor"      => $aggregate->nomonitor() ? 0 : 1,
                  "nolocalimages"=> $aggregate->nolocalimages() ? 1 : 0,
                  "prestageimages"=> $aggregate->prestageimages() ? 1 : 0,
                  "precalcmaxext"=> $aggregate->precalcmaxext() ? 1 : 0,
                  "status"       => $aggregate->status(),
                  "last_contact" => $aggregate->last_success(),
                  "last_error"   => $aggregate->last_error(),
                  "pcount"       => intval($aggregate->pcount()),
                  "pfree"        => intval($aggregate->pfree()),
                  "portals"      => $aggregate->portals(),
                  "typeinfo"     => $aggregate->typeinfo);
    }
    SPITAJAX_RESPONSE($blob);
}

# Local Variables:
# mode:php
# End:
?>
