<?php
#
# Copyright (c) 2000-2018 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
chdir("..");
chdir("apt");
include_once("instance_defs.php");

#
# Server side of getting summary info
#
function Do_GetDurationInfo()
{
    $duration_info = array();
    
    #
    # Gather up info about experiment duration for graphing.
    #
    $durations = array();
    $average   = 0;
    $stddev    = 0;
    
    $query_result =
        DBQueryFatal("select count(*) as count, ".
                     "  ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600)) as duration ".
                     "from apt_instance_history ".
                     "where ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600)) <= 36 " .
                     "group by duration order by duration desc");
    while ($row = mysql_fetch_array($query_result)) {
        $count     = $row["count"];
        $duration  = $row["duration"];

        $durations[] = array("x" => $duration, "y" => intval($count));
    }
    $query_result =
        DBQueryFatal("select avg(ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600))), ".
                     "  std(ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600))) ".
                     "from apt_instance_history ".
                     "where ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600)) <= 36");
    $row = mysql_fetch_array($query_result);
    $average = $row[0];
    $stddev  = $row[1];
    
    $duration_info["oneday"] = array("durations" => $durations,
                                     "average"   => $average,
                                     "stddev"    => $stddev);

    $durations = array();
    
    $query_result =
        DBQueryFatal("select count(*) as count, ".
                     "  ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600 * 24)) as duration ".
                     "from apt_instance_history ".
                     "where ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600 * 24)) <= 30 " .
                     "group by duration order by duration asc");
    # Throw away day one.
    $row = mysql_fetch_array($query_result);
    while ($row = mysql_fetch_array($query_result)) {
        $count     = $row["count"];
        $duration  = $row["duration"];

        $durations[] = array("x" => $duration, "y" => intval($count));
    }
    $query_result =
        DBQueryFatal("select avg(ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600 * 24))), ".
                     "  std(ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600 * 24))) ".
                     "from apt_instance_history ".
                     "where ceil((UNIX_TIMESTAMP(destroyed) - ".
                     "    UNIX_TIMESTAMP(started)) / (3600 * 24)) <= 30");
    $row = mysql_fetch_array($query_result);
    $average = $row[0];
    $stddev  = $row[1];
    
    $duration_info["month"] = array("durations" => $durations,
                                    "average"   => $average,
                                    "stddev"    => $stddev);

    SPITAJAX_RESPONSE($duration_info);
}

# Local Variables:
# mode:php
# End:
?>
