#
# The template
#
use strict;
use libinstall;
use installvars;

my $MIBPATH       = "/usr/local/share/snmp/mibs";
my $CISCO_MIB_FTP = "http://www.emulab.net/downloads/mibs";
my $HP_MIB_FTP    = "http://www.emulab.net/downloads/mibs";

my @CISCO_MIBS = ("CISCO-SMI", "CISCO-TC", "CISCO-VTP-MIB", "CISCO-PAGP-MIB",
    "CISCO-PRIVATE-VLAN-MIB", "CISCO-STACK-MIB", "CISCO-VLAN-MEMBERSHIP-MIB",
		  "CISCO-C2900-MIB", "CISCO-CONFIG-COPY-MIB");

my @HP_MIBS = ("HP-ICF-OID", "BRIDGE-MIB");

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    # Replace if this script does an update for ip/domain.
    return 0
	if ($isupdate);

    Phase "mibs", "Fetching Cisco MIBs", sub {
        # Not needed in an inner elab, and it takes a long time.
	PhaseSkip("Not needed in ELABINELAB")
	    if ($ELABINELAB && !$CONFIG_TARGETSYS);
	
	foreach my $mib (@CISCO_MIBS) {
	    my $localfile = "$MIBPATH/$mib.txt";
	    my $mibURL = "$CISCO_MIB_FTP/$mib.txt";
	    Phase "$mib", "Fetching $mib", sub {
		DoneIfExists($localfile);
		FetchFileFatal($mibURL,$localfile);
	    };
	}
    };
    Phase "hpmibs", "Fetching HP MIBs", sub {
        # Not needed in an inner elab, and it takes a long time.
	PhaseSkip("Not needed in ELABINELAB")
	    if ($ELABINELAB && !$CONFIG_TARGETSYS);
	
	foreach my $mib (@HP_MIBS) {
	    my $localfile = "$MIBPATH/$mib.txt";
	    my $mibURL = "$HP_MIB_FTP/$mib.txt";
	    Phase "$mib", "Fetching $mib", sub {
		DoneIfExists($localfile);
		FetchFileFatal($mibURL,$localfile);
	    };
	}
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
