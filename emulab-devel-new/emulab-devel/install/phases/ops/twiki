#
# The template
#
use strict;
use libinstall;
use installvars;

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    # Replace if this script does an update for ip/domain.
    return 0
	if ($isupdate);

    my $WIKIDIR       = "$OPSWWWDIR/twiki";
    my $WIKICONF      = "LocalSite.cfg";
    my $WIKIURL       = "http://$OUTER_BOSS/downloads/twiki-4.1.tgz";
    my $localtarfile  = "/tmp/twiki.tgz";
    my $CGISESSDIR    = "/var/db/cgisess";
    my $WIKI_LOGDIR   = "$LOGDIR/twiki";
    
    Phase "TWiki", "Installing TWiki", sub {
	PhaseSkip("TWiki not enabled")
	    if (!$WIKISUPPORT);
	
	PhaseSkip("TWiki not supported on ops")
	    if ($FBSD_MAJOR < 6);

	Phase "fetching", "Fetching TWiki distribution", sub {
	    DoneIfExists($localtarfile);
	    FetchFileFatal($WIKIURL, $localtarfile);
	};

	if (! -e "$CGISESSDIR") {
	    mkdir("$CGISESSDIR", 0770) or
		PhaseFail("Unable to make $CGISESSDIR : $!");
	}
	ExecQuietFatal("$CHOWN nobody:wheel $CGISESSDIR");

	Phase "unpacking", "Unpacking TWiki distribution", sub {
	    if (! -e "$WIKIDIR") {
		mkdir("$WIKIDIR", 0770) or
		    PhaseFail("Unable to make $WIKIDIR : $!");
	    }
	    ExecQuietFatal("$CHMOD 770 $WIKIDIR");

	    PhaseSkip("TWiki already unpacked")
		if (-e "$WIKIDIR/data");
	    ExecQuietFatal("$TAR zxf $localtarfile -C $WIKIDIR"); 
	};
	ExecQuietFatal("$CHOWN -R nobody:tbadmin $WIKIDIR");

	Phase "logdir", "Creating TWiki log directory", sub {
	    DoneIfExists($WIKI_LOGDIR);
	    mkdir $WIKI_LOGDIR, 0775 or
		PhaseFail("Unable to create $WIKI_LOGDIR : $!");
	    
	    ExecQuietFatal("$CHOWN nobody:tbadmin $WIKI_LOGDIR");
	    ExecQuietFatal("$CHMOD 770 $WIKI_LOGDIR");
	};

	Phase "config", "Configuring TWiki", sub {
	    # Must overwrite the distribution version.
	    ExecQuietFatal("$CP -f $TOP_OBJDIR/wiki/$WIKICONF ".
			   "       $WIKIDIR/lib/$WIKICONF");
	};
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
