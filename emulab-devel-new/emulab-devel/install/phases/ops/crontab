#
# The template
#
use strict;
use libinstall;
use installvars;

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    # Replace if this script does an update for ip/domain.
    return 0
	if ($isupdate);

    Phase "cron", "Adding cron jobs", sub {
	Phase "crontab", "Editing $CRONTAB", sub {
	    if ($QUOTA_FSLIST eq "") {
		PhaseSkip("No filesystem quotas");
	    }
	    DoneIfEdited($CRONTAB);

	    my @cronlist = ("0 \t6\t*\t*\t*\troot\t$PREFIX/sbin/quotamail",
			    "3 \t5\t*\t*\t*\troot\t$PREFIX/sbin/pruneexpdirs");
	    if ($WIKISUPPORT) {
		push(@cronlist,
		     "*/15 \t*\t*\t*\t*\troot\t(cd $OPSWWWDIR/twiki/bin;".
		     " ./mailnotify -q >> /var/tmp/mailnotify.log 2>&1)");
	    }
	    AppendToFileFatal($CRONTAB, @cronlist);
	};
	Phase "cronhup", "HUPing cron", sub {
	    if (PhaseWasSkipped("crontab")) { PhaseSkip("No new crontab"); }
	    HUPDaemon("cron");
	};
    };

    return 0;
}

# Local Variables:
# mode:perl
# End:
