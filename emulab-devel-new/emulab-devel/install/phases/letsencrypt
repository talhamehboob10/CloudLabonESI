#
# The template
#
use strict;
use libinstall;
use installvars;

my $CHALLENGEDIR = "$TBROOT/www/.well-known/acme-challenge";
my $APACHEPREFIX  = ("$APACHE_VERSION" == "22" ? "apache22" :
		     "$APACHE_VERSION" == "24" ? "apache24" : "apache");

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    # Replace if this script does an update for ip/domain.
    return 0
	if ($isupdate);

    SET_TESTBED_VERSION("letsencrypt");
    
    Phase "letsencrypt", "Setting up letsencrypt web certificate", sub {
	Phase "certbot", "Installing ${PY_PKGPREFIX}-certbot", sub {
	    DoneIfPackageInstalled("${PY_PKGPREFIX}-certbot", 0);
	    $ENV{"ASSUME_ALWAYS_YES"} = "true";
	    ExecQuietFatal("pkg install ${PY_PKGPREFIX}-certbot");
	};
	Phase "mkdir", "Creating $CHALLENGEDIR", sub {
	    DoneIfExists($CHALLENGEDIR);
	    ExecQuietFatal("mkdir -p $CHALLENGEDIR");
	};
	# there appears to be a "certbot" symlink to the right version
	my $CERTBOT = "/usr/local/bin/certbot certonly ".
	    "-n --webroot -w /usr/testbed/www --agree-tos -m $TBOPSEMAIL ";
	my $RENEW   = "/usr/local/bin/certbot renew";
	my $CERT    = "/usr/local/etc/letsencrypt/live/";

	if (ISBOSSNODE($server)) {
	    if ($OPSVM_ENABLE) {
		#
		# Ops uses the same cert, and we do it with DNS which is harder,
		# so call out to a script.
		#
		$CERTBOT = $RENEW = "$TBROOT/sbin/certbot_renew";
	    }
	    else {
		$CERTBOT .=
		    "-d $OURDOMAIN -d $WWWHOST -d $BOSSNODE ".
		    "--renew-hook '$APACHE_START_COMMAND graceful www'";
	    }
	    $CERT .= "$OURDOMAIN/cert.pem";
	}
	else {
	    $CERTBOT .=
		"-d $USERNODE -d ops.${OURDOMAIN} ".
		"--renew-hook '$APACHE_START_COMMAND graceful'";
	    $CERT .= "$USERNODE/cert.pem";
	}
	Phase "certbot", "Setting up certbot (patience please!)", sub {
	    DoneIfExists($CERT);
	    ExecQuietFatal($CERTBOT);
	};
	Phase "rcconf", "Updating $RCCONF", sub {
	    my $new = "${APACHEPREFIX}_flags=\"\$${APACHEPREFIX}_flags ".
		"-DLETSENCRYPT\"";
	    DoneIfEdited($RCCONF);
	    AppendToFileFatal($RCCONF, $new);
	};
	Phase "crontab", "Editing $CRONTAB", sub {
	    DoneIfEdited($CRONTAB);
	    AppendToFileFatal($CRONTAB,
		  "15 \t3,13\t*\t*\t*\troot\t$RENEW");
	};
	Phase "restarting", "Restarting Apache server", sub {
	    ExecQuietFatal("$APACHE_START_COMMAND restart www");
	};
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
