#
#
#
use strict;
use libinstall;
use installvars;

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    # Either boss or ops.
    if ($server ne $MAILERNODE) {
	return 0;
    }

    my @LOCAL_HOSTS         = ($OURDOMAIN,$BOSSNODE,$USERNODE,$FSNODE);

    if ($PROTOGENI_GENIRACK) {
	push(@LOCAL_HOSTS, "foam.${OURDOMAIN}");
    }
    
    # covert to list names and remove duplicates
    my @MAILING_LIST_NAMES = ();
    my %gotit = ();
    foreach my $name (@LOCAL_MAILING_LISTS) {
	if ($name =~ /^([\w-]+)\@/) {
	    push(@MAILING_LIST_NAMES, $1)
		if (!exists($gotit{$1}));
	    $gotit{$1} = 1;
	}
    }

    Phase "sendmail","Configuring sendmail", sub {
	if ($isupdate) {
	    Phase "localhosts", "Updating $LOCAL_HOSTNAMES", sub {
		DoneIfUpdated($LOCAL_HOSTNAMES, join("\n", @LOCAL_HOSTS));
		BackUpFileFatal($LOCAL_HOSTNAMES);
		DeleteFileFatal($LOCAL_HOSTNAMES);
		CreateFileFatal($LOCAL_HOSTNAMES, @LOCAL_HOSTS);
	    };
	}
	else {
	    Phase "localhosts", "Setting up $LOCAL_HOSTNAMES", sub {
		DoneIfExists($LOCAL_HOSTNAMES);
		CreateFileFatal($LOCAL_HOSTNAMES, @LOCAL_HOSTS);
	    };
	}
	PhaseSucceed("update complete")
	    if ($isupdate);
	
	Phase "maillists", "Setting up mailing lists", sub {
	    Phase "listdir", "Creating $LIST_DIR", sub { 
		DoneIfExists($LIST_DIR);
		mkdir($LIST_DIR,0755) or
		    PhaseFail("Unable to create $LIST_DIR: $!");
		ExecQuietFatal("$CHGRP mailnull $LIST_DIR");
		ExecQuietFatal("$CHMOD 750 $LIST_DIR");
	    };
	    Phase "listfiles", "Creating mailing list files", sub {
		foreach my $list (@MAILING_LIST_NAMES) {
		    Phase $list, $list, sub {
			DoneIfExists("$LIST_DIR/$list");
			CreateFileFatal("$LIST_DIR/$list",
					$ELABINELAB_MAILTARGET);
		    };
		}
	    };
	    Phase "aliases", "Adding lists to $ALIASES_FILE", sub {
		DoneIfEdited($ALIASES_FILE);
		AppendToFileFatal($ALIASES_FILE,
				  map("$_:\t:include:$LIST_DIR/$_",
				      @MAILING_LIST_NAMES));
	    };
	    Phase "newaliases", "Running newaliases", sub {
		PhaseSkip("No new aliases") unless @MAILING_LIST_NAMES;
		PhaseSkip("No new aliases") if PhaseWasSkipped("aliases");
		ExecQuietFatal($NEWALIASES);
	    };
	};
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
