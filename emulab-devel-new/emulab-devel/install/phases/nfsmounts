#
# The template
#
use strict;
use libinstall;
use installvars;

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    if ($isupdate) {
	#
	# Update /etc/fstab for new domain.
	#
	my @replacements = (
	    # Looking for hostname.emulab.net 
	    [qr{^(\w*ops)\.[-\w\.]+:}, '"$1.' . ${OURDOMAIN} . ':"'],
	    [qr{^(\w*fs)\.[-\w\.]+:}, '"$1.' . ${OURDOMAIN} . ':"']);
	
	Phase "fstab", "Updating $FSTAB", sub {
	    QueryReplaceFileFatal($FSTAB, \@replacements);
	};
	return 0;
    }

    Phase "NFSmounts", "Setting up NFS mounts", sub {
	if (ISOPSNODE($server) && $OPSVM_ENABLE) {
	    PhaseSkip("FSes are mounted from outside the VM");
	}
	my @dirs = ();
	my @mkdirs = ();

	#
	# If we are the FS then we do not need to mount the FS file systems.
	# If not acting as the FS (boss,ops), then must mount the file systems
	# on the FS node.
	# In addition, boss must mount a couple of file systems on ops,
	# unless ops is a VM on boss (see skip above).
	#
	if (!ISFS($server)) {
	    if ($WITHZFS) {
		@dirs = ($SHAREROOT);
	    } else {
		@dirs = @MOUNTPOINTS;
	    }
	    @mkdirs = @MOUNTPOINTS;
	}
	if (ISBOSSNODE($server) && !$OPSVM_ENABLE) {
	    @dirs = (@dirs, $USERSVAR_MOUNTPOINT, $OPSDIR_MOUNTPOINT);
	    @mkdirs = (@mkdirs, $USERSVAR_MOUNTPOINT, $OPSDIR_MOUNTPOINT);
	}
	PhaseSkip("Nothing to mount")
	    if (!@mkdirs);

	Phase "mountpoints", "Creating mountpoints", sub {
	    foreach my $dir (@mkdirs) {
		Phase $dir, $dir, sub {
		    DoneIfExists($dir);
		    mkdir $dir, 0777 or
			PhaseFail("Unable to create $dir : $!");
		};
	    }
	};
	Phase "fstab", "Adding NFS mounts to $FSTAB", sub {
	    DoneIfEdited($FSTAB);
	    my $nfsopt = "nosuid";
	    $nfsopt .= ",nodev"
		if ($FBSD_MAJOR < 7);
	    #
	    # Do late mounts on boss to avoid deadlocks with fs node
	    # which might want services from boss before exporting FSes
	    #
	    $nfsopt .= ",late"
		if (ISBOSSNODE($server));

	    my @lines = ();
	    foreach my $dir (@dirs) {
		if ($dir eq $USERSVAR_MOUNTPOINT) {
		    push(@lines,
			 "$USERNODE:/var\t\t$USERSVAR_MOUNTPOINT\tnfs\t".
			 "ro,soft,-b,$nfsopt\t0\t0");
		}
		elsif ($dir eq $OPSDIR_MOUNTPOINT) {
		    push(@lines,
			 "$USERNODE:/usr/testbed\t\t$OPSDIR_MOUNTPOINT\tnfs\t".
			 "rw,soft,-b,$nfsopt\t0\t0");
		}
		#
		# For ZFS, we do not mount the roots of the {users,proj,groups}
		# filesystems as each {user,proj,group} has their own FS.
		# We only mount /share.
		#
		elsif (!$WITHZFS || $dir eq $SHAREROOT) {
		    push(@lines,
			 "$FSNODE:$dir\t\t$dir\tnfs\trw,$nfsopt\t0\t0");
		}
	    }
	    AppendToFileFatal($FSTAB, @lines);
	};
	Phase "mounts", "Mounting NFS filesystems", sub {
	    my $opt = ($FBSD_MAJOR >= 8 ? "retrycnt=1" : "'-R 1'");
	    
	    foreach my $dir (@dirs) {
		Phase $dir, $dir, sub {
		    DoneIfMounted($dir);
		    ExecQuietFatal("$MOUNT -o $opt $dir");
		};
	    }
	};
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
