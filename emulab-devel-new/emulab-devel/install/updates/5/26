#
#
#
use strict;
use libinstall;

sub InstallUpdate($$)
{
    my ($version, $phase) = @_;

    #
    # Need to run this after the protogeni SQL update and install
    #
    if ($PGENISUPPORT && $phase eq "post" && !IMPOTENT_MODE()) {
	require GeniDB;
	my $genidbnum = GeniDB::DBConnect(GeniDB::GENICM_DBNAME());
	return 0
	    if (! $genidbnum || $genidbnum < 0);

	my $query_result
	    = GeniDB::DBQueryWarn("select uuid,exptidx from geni_slices");
	return -1
	    if (!$query_result);
	
	while (my ($uuid,$exptidx) = $query_result->fetchrow_array()) {
	    DBQueryWarn("update experiment_stats set slice_uuid='$uuid' ".
			"where exptidx='$exptidx'")
		or return -1;
	}

	$query_result
	    = GeniDB::DBQueryWarn("select distinct slice_uuid ".
				  "from aggregate_history");
	return -1
	    if (!$query_result);
	
	while (my ($slice_uuid) = $query_result->fetchrow_array()) {
	    DBQueryWarn("update experiment_stats set slice_uuid='$slice_uuid' ".
			"where eid_uuid='$slice_uuid'")
		or return -1;
	}

	$query_result
	    = GeniDB::DBQueryWarn("select distinct slice_uuid ".
				  "from sliver_history");
	return -1
	    if (!$query_result);
	
	while (my ($slice_uuid) = $query_result->fetchrow_array()) {
	    DBQueryWarn("update experiment_stats set slice_uuid='$slice_uuid' ".
			"where eid_uuid='$slice_uuid'")
		or return -1;
	}
    }
    return 0;
}
1;

# Local Variables:
# mode:perl
# End:
