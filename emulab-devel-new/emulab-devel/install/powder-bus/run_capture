#!/bin/sh
#
# This should be auto-generated, but isn't yet.
#

TB=/usr/testbed
CAPTURE=$TB/sbin/capture

arduino=powduino
nodes="ed1"

#
# Arduino power controller
#
if [ -n "$arduino" ]; then
    #
    # XXX Arduino will reset if we screw around with DTR (and RTS?),
    # so lock anything flow control related down, or basically anything that
    # might cause a USB parameter change.
    #
    # XXX Also do not try to do anything with the port (e.g., stty) before
    # this, because it will open/close the port which will cause the change
    # we are trying to avoid.
    #
    stty -f /dev/cuaU0.init -hupcl -ixon -ixoff -ixany -crtscts
    stty -f /dev/cuaU0.lock hupcl ixon ixoff ixany crtscts

    ## XXX debugging
    #echo "Everything locked, cuaU0:"
    #stty -g -f /dev/cuaU0
    #echo "About to start capture"

    $TB/sbin/daemon_wrapper \
	-i 30 -l $TB/log/powduino.log -p /var/run/powduino.pid \
	$CAPTURE -d -y 2 -T 15 -s 9600 powduino cuaU0

    ## XXX debugging
    #echo "Capture started, cuaU0:"
    #stty -g -f /dev/cuaU0
fi

#
# Node consoles
#
if [ -n "$nodes" ]; then
    captureopts="-L -T 15 -r"
    ipmibin=/usr/local/bin/ipmitool
    ipmiopts="-C 3 -I lanplus -U ADMIN -E"
    export IPMI_PASSWORD=`cat /usr/testbed/etc/ipmi.pswd`

    i=0
    for node in $nodes; do
	$CAPTURE $captureopts -M $node \
		    $ipmibin -H $node-mng $ipmiopts sol activate
	i=$(((i + 1) % 3))
	if [ $i -eq 0 ]; then
            sleep 1
	fi
    done >/dev/null 2>&1
fi

exit 0
