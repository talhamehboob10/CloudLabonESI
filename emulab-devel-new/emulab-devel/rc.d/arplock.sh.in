#!/bin/sh

# PROVIDE: arplock
# REQUIRE: netif
# BEFORE: pf ipfw routing
# KEYWORD: shutdown

#
# Copyright (c) 2012-2014 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

. /etc/emulab/paths.sh

#
# XXX allow a timeout on tmcc calls. Without timeout, ops/fs boot will hang
# if Emulab services (i.e., tmcd) are not running on boss.
# Set to zero for no timeout.
timo=5

if [ ! -x $BINDIR/fixarpinfo ]; then
    echo "*** fixarpinfo script missing, ARP lockdown not done"
    exit 0
fi

#
# XXX create some missing state if we are the ops node
#
if [ ! -r $BOOTDIR/controlif -a -x $BINDIR/findif ]; then
    iface=`$BINDIR/findif -i @USERNODE_IP@`
    if [ -n "$iface" ]; then
	echo $iface > $BOOTDIR/controlif
	echo @USERNODE_IP@ > $BOOTDIR/myip
    fi
fi

#
# ARP lockdown script. Has to run early, after network setup but before
# we start firing up daemons.
#
case "$1" in
start|faststart|quietstart|onestart|forcestart)
	echo "Setting up static ARP entries."
	$BINDIR/fixarpinfo -sv -t $timo >$LOGDIR/fixarpinfo.log 2>&1
	;;
restart|fastrestart|quietrestart|onerestart|forcerestart)
	echo "Updating static ARP entries."
	$BINDIR/fixarpinfo -uv -t $timo >$LOGDIR/fixarpinfo.log 2>&1
	;;
stop|faststop|quietstop|onestop|forcestop)
	echo "Removing static ARP entries."
	$BINDIR/fixarpinfo -cv -t $timo >$LOGDIR/fixarpinfo.log 2>&1
	;;
*)
	echo "Usage: `basename $0` {start|stop|restart}" >&2
	false
	;;
esac
stat=$?

if [ $timo -gt 0 -a $stat -eq 255 ]; then
    echo "WARNING: arpinfo call timed out; ARP not locked down!"
fi
exit $stat
