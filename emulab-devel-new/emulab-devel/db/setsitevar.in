#!/usr/bin/perl -w

#
# Copyright (c) 2000-2012 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
use English;
use Getopt::Std;

#
# usage: setsitevar
#         - displays list of all sitevar names and values
#
#        setsitevar <variablename>
#         - displays name, description, value, and default for <variablename>
#
#        setsitevar <variablename> -
#         - sets <variablename> to default value
#
#        setsitevar <variablename> <newvalue>
#         - sets <variablename> to <newvalue>
#

sub usage()
{
   print STDOUT "Usage:\n".
                "setsitevar -h\n".
		"  - displays this usage information.\n".
		"\n".  
                "setsitevar\n".
		"  - displays list of all sitevar names and values.\n".
		"\n".  
		"setsitevar [-c] <variablename>\n".
		"  - displays name, description, value, \n".
		"    and default value for <variablename>.\n".
		"    With -c option, just display current value.\n".
		"\n".
		"setsitevar <variablename> -\n".
		"  - sets <variablename> to default value.\n".
		"\n".
		"setsitevar <variablename> <newvalue>\n".
		"  - sets <variablename> to <newvalue>.\n";

    exit(-1);
}
my $optlist    = "dc";
my $curvalue   = 0;

#
# Configure variables
#
use lib "@prefix@/lib";
use libdb;

#
# Turn off line buffering on output
#
$| = 1;

#
# Check args.
#
my %options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (defined($options{"h"})) {
    usage();
}
if (defined($options{"c"})) {
    $curvalue = 1;
}
usage()
    if (!@ARGV);

$name  = shift;
$value = shift;

shift and usage(); # too many args

if (defined $name)  { $qname  = DBQuoteSpecial($name); }
if (defined $value) { $qvalue = DBQuoteSpecial($value); }

#
# Only root or admin types!
# 
if (($UID != 0) && (!TBAdmin($UID))) {
	die("Only root or TB administrators can set site variables.\n");
}

#
# Briefly list all sitevars, a la 'set'.
#
if (! defined $name) {
    $result = DBQueryFatal("SELECT name, value, defaultvalue, description ".
			   "FROM sitevariables ".
			   "ORDER BY name");

    while (($name, $value, $default, $desc) = 
	   $result->fetchrow_array()) {
	if (defined $value) {	    
	    print "$name\t\"$value\"\n";
	} else {
	    print "$name\t\"$default\"(default)\n";
	}
    }
    exit(0);
}


$result = DBQueryFatal("SELECT value, defaultvalue, description ".
		       "FROM sitevariables ".
		       "WHERE name=$qname");

if ($result->numrows == 0) {
    print STDERR "No such sitevar $qname!\n";
    exit(1);
}    

($currentvalue, $default, $desc) = $result->fetchrow_array();

#
# List a specific sitevar in detail
#
if (! defined $value) {
    if ($curvalue) {
	if (defined $currentvalue) {
	    print "$currentvalue\n";
	} else {
	    print "$default\n";
	}
	exit(0)
    }
    print "sitevar name:  $name\n".
	  "description:   $desc\n".
	  "value:         ";
    if (defined $currentvalue) {
	print "\"$currentvalue\"\n";
    } else {
	print "<default>\n";
    }
    print "default value: \"$default\"\n";
    exit(0);
}

#
# Set a sitevar
#

#
# Handle '-' argument
#
if ($qvalue eq "'-'") {
    $qvalue = "NULL";
}

$result = DBQueryFatal("UPDATE sitevariables ".
		       "SET value=$qvalue ".
		       "WHERE name=$qname");

#
# Warn user if operation was redundant.
#
#if ($result->rows == 0) {
#    print STDERR "Warning: row value same as before\n";
#}

exit(0);


