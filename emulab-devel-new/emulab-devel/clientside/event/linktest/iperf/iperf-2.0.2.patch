diff -Nur iperf-2.0.2.orig/compat/Thread.c iperf-2.0.2/compat/Thread.c
--- iperf-2.0.2.orig/compat/Thread.c	2005-05-03 09:15:51.000000000 -0600
+++ iperf-2.0.2/compat/Thread.c	2018-06-19 16:57:49.691488015 -0600
@@ -202,7 +202,7 @@
 #if   defined( HAVE_POSIX_THREAD )
             // Cray J90 doesn't have pthread_cancel; Iperf works okay without
 #ifdef HAVE_PTHREAD_CANCEL
-            pthread_cancel( oldTID );
+            pthread_cancel( thread->mTID );
 #endif
 #else // Win32
             // this is a somewhat dangerous function; it's not
diff -Nur iperf-2.0.2.orig/config.guess iperf-2.0.2/config.guess
--- iperf-2.0.2.orig/config.guess	2005-02-14 00:26:58.000000000 -0700
+++ iperf-2.0.2/config.guess	2018-06-19 16:57:49.691488015 -0600
@@ -3,7 +3,7 @@
 #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
 #   2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
 
-timestamp='2005-02-10'
+timestamp='2015-05-13'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
@@ -824,6 +824,9 @@
     i*86:Minix:*:*)
 	echo ${UNAME_MACHINE}-pc-minix
 	exit 0 ;;
+    aarch64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit 0 ;;
     arm*:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-gnu
 	exit 0 ;;
diff -Nur iperf-2.0.2.orig/include/Settings.hpp iperf-2.0.2/include/Settings.hpp
--- iperf-2.0.2.orig/include/Settings.hpp	2005-05-02 14:09:26.000000000 -0600
+++ iperf-2.0.2/include/Settings.hpp	2018-06-19 16:57:49.691488015 -0600
@@ -125,6 +125,7 @@
     int mBufLen;                    // -l
     int mMSS;                       // -M
     int mTCPWin;                    // -w
+    int mAckTimo;		    // -A
     /*   flags is a BitMask of old bools
         bool   mBufLenSet;              // -l
         bool   mCompat;                 // -C
@@ -282,6 +283,7 @@
 
 
 #define HEADER_VERSION1 0x80000000
+#define HEADER_VERSION2 0x40000000
 #define RUN_NOW         0x00000001
 
 // used to reference the 4 byte ID number we place in UDP datagrams
@@ -327,6 +329,7 @@
     int32_t bufferlen;
     int32_t mWinBand;
     int32_t mAmount;
+    int32_t mAckTimo;
 #else
     signed int flags      : 32;
     signed int numThreads : 32;
@@ -334,6 +337,7 @@
     signed int bufferlen  : 32;
     signed int mWinBand   : 32;
     signed int mAmount    : 32;
+    signed int mAckTimo   : 32;
 #endif
 } client_hdr;
 
diff -Nur iperf-2.0.2.orig/include/headers.h iperf-2.0.2/include/headers.h
--- iperf-2.0.2.orig/include/headers.h	2005-05-03 09:55:52.000000000 -0600
+++ iperf-2.0.2/include/headers.h	2018-06-19 16:58:11.537898926 -0600
@@ -82,7 +82,6 @@
 #include <errno.h>
 #include <string.h>
 #include <time.h>
-#include <math.h>
 
 #ifdef WIN32
 
@@ -180,7 +179,11 @@
 // from the gnu archive
 
 #include <iperf-int.h>
+#ifdef __FreeBSD__
+typedef uint64_t max_size_t;
+#else
 typedef uintmax_t max_size_t;
+#endif
 
 /* in case the OS doesn't have these, we provide our own implementations */
 #include "gettimeofday.h"
diff -Nur iperf-2.0.2.orig/src/Client.cpp iperf-2.0.2/src/Client.cpp
--- iperf-2.0.2.orig/src/Client.cpp	2005-05-02 14:09:27.000000000 -0600
+++ iperf-2.0.2/src/Client.cpp	2018-06-19 16:57:49.691488015 -0600
@@ -216,13 +216,16 @@
         // perform write 
         currLen = write( mSettings->mSock, mBuf, mSettings->mBufLen ); 
         if ( currLen < 0 ) {
-            WARN_errno( currLen < 0, "write2" ); 
-            break; 
+	    if (errno != ENOBUFS) {
+                WARN_errno( currLen < 0, "write2" ); 
+		break;
+	    }
+	    currLen = 0;
         }
 
-        // report packets 
-        reportstruct->packetLen = currLen;
-        ReportPacket( mSettings->reporthdr, reportstruct );
+	// report packets 
+	reportstruct->packetLen = currLen;
+	ReportPacket( mSettings->reporthdr, reportstruct );
         
         if ( delay > 0 ) {
             delay_loop( delay ); 
@@ -341,6 +344,7 @@
     struct timeval timeout; 
 
     int count = 0; 
+    int timo = (mSettings->mAckTimo < 0) ? 250 : mSettings->mAckTimo;
     while ( count < 10 ) {
         count++; 
 
@@ -350,8 +354,8 @@
         // wait until the socket is readable, or our timeout expires 
         FD_ZERO( &readSet ); 
         FD_SET( mSettings->mSock, &readSet ); 
-        timeout.tv_sec  = 0; 
-        timeout.tv_usec = 250000; // quarter second, 250 ms 
+        timeout.tv_sec  = (timo / 1000);
+        timeout.tv_usec = (timo % 1000) * 1000;
 
         rc = select( mSettings->mSock+1, &readSet, NULL, NULL, &timeout ); 
         FAIL_errno( rc == SOCKET_ERROR, "select", mSettings ); 
@@ -373,6 +377,6 @@
         } 
     } 
 
-    fprintf( stderr, warn_no_ack, mSettings->mSock, count ); 
+    fprintf( stderr, warn_no_ack, mSettings->mSock, count, timo ); 
 } 
 // end write_UDP_FIN 
diff -Nur iperf-2.0.2.orig/src/Locale.c iperf-2.0.2/src/Locale.c
--- iperf-2.0.2.orig/src/Locale.c	2005-05-02 14:09:27.000000000 -0600
+++ iperf-2.0.2/src/Locale.c	2018-06-19 16:57:49.692488034 -0600
@@ -331,7 +331,7 @@
 "WARNING: Path MTU Discovery may not be enabled.\n";
 
 const char warn_no_ack[]=
-"[%3d] WARNING: did not receive ack of last datagram after %d tries.\n";
+"[%3d] WARNING: did not receive ack of last datagram after %d tries of %d ms.\n";
 
 const char warn_ack_failed[]=
 "[%3d] WARNING: ack of last datagram failed after %d tries.\n";
diff -Nur iperf-2.0.2.orig/src/Settings.cpp iperf-2.0.2/src/Settings.cpp
--- iperf-2.0.2.orig/src/Settings.cpp	2005-05-02 14:09:27.000000000 -0600
+++ iperf-2.0.2/src/Settings.cpp	2018-06-19 16:57:49.692488034 -0600
@@ -105,6 +105,7 @@
 {"reportstyle",required_argument, NULL, 'y'},
 
 // more esoteric options
+{"ack_timeout",required_argument, NULL, 'A'},
 {"bind",       required_argument, NULL, 'B'},
 {"compatibility",    no_argument, NULL, 'C'},
 {"daemon",           no_argument, NULL, 'D'},
@@ -167,7 +168,7 @@
 
 #define SHORT_OPTIONS()
 
-const char short_options[] = "1b:c:df:hi:l:mn:o:p:rst:uvw:x:y:B:CDF:IL:M:NP:RS:T:UVW";
+const char short_options[] = "1b:c:df:hi:l:mn:o:p:rst:uvw:x:y:A:B:CDF:IL:M:NP:RS:T:UVW";
 
 /* -------------------------------------------------------------------
  * defaults
@@ -214,6 +215,7 @@
     //main->mTCPWin       = 0;           // -w,  ie. don't set window
 
     // more esoteric options
+    main->mAckTimo        = -1;          // -A,  -1 means default 250 ms
     //main->mLocalhost    = NULL;        // -B,  none
     //main->mCompat     = false;         // -C,  run in Compatibility mode
     //main->mDaemon     = false;         // -D,  run as a daemon
@@ -540,6 +542,10 @@
 
 
             // more esoteric options
+        case 'A': // ms of delay between UDP Ack resends
+            mExtSettings->mAckTimo = atoi( optarg );
+            break;
+
         case 'B': // specify bind address
             mExtSettings->mLocalhost = new char[ strlen( optarg ) + 1 ];
             strcpy( mExtSettings->mLocalhost, optarg );
@@ -790,6 +796,9 @@
                        (*client)->mHost, REPORT_ADDRLEN);
         }
 #endif
+	if ( (flags & HEADER_VERSION2) != 0 ) {
+	    (*client)->mAckTimo = ntohl(hdr->mAckTimo);
+	}
     } else {
         *client = NULL;
     }
@@ -804,6 +813,9 @@
 void Settings_GenerateClientHdr( thread_Settings *client, client_hdr *hdr ) {
     if ( client->mMode != kTest_Normal ) {
         hdr->flags  = htonl(HEADER_VERSION1);
+	if ( hdr->mAckTimo >= 0 ) {
+	    hdr->flags  |= htonl(HEADER_VERSION2);
+	}
     } else {
         hdr->flags  = 0;
     }
@@ -829,6 +841,9 @@
         hdr->mAmount    = htonl((long)client->mAmount);
         hdr->mAmount &= htonl( 0x7FFFFFFF );
     }
+    if ( hdr->mAckTimo >= 0 ) {
+        hdr->mAckTimo = htonl(client->mAckTimo);
+    }
     if ( client->mMode == kTest_DualTest ) {
         hdr->flags |= htonl(RUN_NOW);
     }
diff -Nur iperf-2.0.2.orig/src/main.cpp iperf-2.0.2/src/main.cpp
--- iperf-2.0.2.orig/src/main.cpp	2005-05-02 14:09:27.000000000 -0600
+++ iperf-2.0.2/src/main.cpp	2018-06-19 16:57:49.692488034 -0600
@@ -163,6 +163,11 @@
     // read settings from command-line parameters
     Settings_ParseCommandLine( argc, argv, ext_gSettings );
 
+    // if needed, redirect the output into a specified file
+    if ( !isSTDOUT( ext_gSettings ) ) {
+        redirect( ext_gSettings->mOutputFileName );
+    }
+
     // Check for either having specified client or server
     if ( ext_gSettings->mThreadMode == kMode_Client 
          || ext_gSettings->mThreadMode == kMode_Listener ) {
diff -Nur iperf-2.0.2.orig/src/stdio.c iperf-2.0.2/src/stdio.c
--- iperf-2.0.2.orig/src/stdio.c	2005-05-02 14:09:27.000000000 -0600
+++ iperf-2.0.2/src/stdio.c	2018-06-19 16:57:49.692488034 -0600
@@ -255,8 +255,6 @@
  * ------------------------------------------------------------------- */
 
 void redirect(const char *inOutputFileName) {
-#ifdef WIN32
-
     FILE *fp;
 
     if ( inOutputFileName == NULL ) {
@@ -264,14 +262,11 @@
         return;
     }
 
-    fp = freopen(inOutputFileName, "a+", stdout);
+    fp = freopen(inOutputFileName, "a", stdout);
     if ( fp == NULL ) {
         fprintf(stderr, "redirect stdout failed!\n");
         return;
     }
-
-#endif
-
     return;
 }
 
