#
# Copyright (c) 2000-2012 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
SRCDIR		= @srcdir@
TESTBED_SRCDIR	= @top_srcdir@
OBJDIR		= @top_builddir@
SUBDIR		= $(subst $(TESTBED_SRCDIR)/,,$(SRCDIR))

NTFSDIR		= ntfsprogs
LIBSRCDIR	= $(NTFSDIR)/libntfs
LOCALPKGHOST	= @OUTERBOSS_NODENAME@
PKGHOST		= www.emulab.net

include $(OBJDIR)/Makeconf

ifndef HAVE_GCC3
CC		= gcc30
endif
ifdef LINUX
INCLUDES        = -I${NTFSDIR}/include -I${OBJDIR}
FETCH		= wget -q -N
PATCH		= patch -sN -d ntfsprogs-$(NTFSVER) -p1
else
INCLUDES        = -nostdinc -I${NTFSDIR}/include -I${NTFSDIR}/include/ntfs \
		  -I${OBJDIR} -I${SRCDIR}/../extra_bsd_includes \
                  -I/usr/include \
                  -I/usr/local/include
FETCH		= fetch -m
PATCH		= patch -sN
endif
UNPACK		= tar zxf
MV		= mv -f
ifndef HAVE_LOCALE
INCLUDES        += -I${SRCDIR}/../liblocale/include
endif

all:	libntfs.a

include $(TESTBED_SRCDIR)/GNUmakerules

CFLAGS	        = -O2 -g -static -Wall $(INCLUDES)

OBJS=	attrib.o \
	bitmap.o \
	bootsect.o \
	compat.o \
	debug.o \
	dir.o \
	disk_io.o \
	inode.o \
	lcnalloc.o \
	mft.o \
	mst.o \
	runlist.o \
	unistr.o \
	volume.o

SRCS=	$(patsubst %.o,$(LIBSRCDIR)/%.c,$(OBJS))

%.o:	$(LIBSRCDIR)/%.c
	$(CC) $(CFLAGS) -c -o $@ $<

libntfs.a: libntfs-$(NTFSVER).a
	cp -p libntfs-$(NTFSVER).a libntfs.a

libntfs-1.7.1.a: $(LIBSRCDIR)/patched $(OBJS)
	$(AR) crv $@ $(OBJS)
	$(RANLIB) $@

libntfs-2.0.0.a: $(LIBSRCDIR)/patched
	$(MAKE) -C $(LIBSRCDIR) all
	cp -p $(LIBSRCDIR)/.libs/libntfs.a $@

$(SRCS): $(LIBSRCDIR)/patched

$(LIBSRCDIR)/patched:
	@if [ ! -e "ntfsprogs-$(NTFSVER).tar.gz" ]; then \
	    if [ -n "$(LOCALPKGHOST)" ]; then \
	        if [ `$(FETCH) http://$(LOCALPKGHOST)/downloads/ntfsprogs-$(NTFSVER).tar.gz` ]; then \
		    $(FETCH) http://$(PKGHOST)/downloads/ntfsprogs-$(NTFSVER).tar.gz; \
	        fi \
	    else \
		$(FETCH) http://$(PKGHOST)/downloads/ntfsprogs-$(NTFSVER).tar.gz; \
	    fi \
	fi
	$(UNPACK) ntfsprogs-$(NTFSVER).tar.gz
ifeq ($(NTFSVER),1.7.1)
	$(PATCH) < $(SRCDIR)/ntfs_lvalue.patch
ifdef LINUX
	$(PATCH) < $(SRCDIR)/ntfs.linuxpatch
else
	$(PATCH) < $(SRCDIR)/ntfs.patch
endif
	$(MV) ntfsprogs-$(NTFSVER) $(NTFSDIR)
	$(NTFSDIR)/configure
	$(MV) config.h $(NTFSDIR)/include
else
	$(PATCH) < $(SRCDIR)/ntfsprogs-$(NTFSVER).patch
	@if [ -e "freebsd_io.c" ]; then \
		$(MV) freebsd_io.c* ntfsprogs-$(NTFSVER)/libntfs/; \
	fi
	$(MV) ntfsprogs-$(NTFSVER) $(NTFSDIR)
	(cd $(NTFSDIR); ./configure)
	cp -p $(NTFSDIR)/config.h $(NTFSDIR)/include
endif
	touch $(LIBSRCDIR)/patched

clean:
	-rm -f *.o *~ *.a config.* Makefile libtool *.spec stamp-h
	-rm -rf ntfsprogs-$(NTFSVER) $(NTFSDIR) doc include libntfs

distclean:
	-rm -rf *.gz *.spec *-h doc libtool include libntfs
