To isolate the pain of building threaded (and statically linked) event
system programs, we build two versions of the event library, one for
non threaded programs and another (libevent_r.a) for threaded
versions. Threaded clients require a bunch of extra link goo, but at
the moment the only threaded client is the event scheduler.  If you
try and use the threaded API without the proper link, the library will
print an error message and quit.

* SWIG perl library wrappers for the event system

To generate new version of the perl wrappers for the C event library, do the
following:
1) In your object tree (in event/lib), run 'gmake swig-wrappers'. Note: this
   will update event.pm and event_wrap.c in your source tree.
2) Edit the new version of event.pm in your source tree, to work around a SWIG
   bug. Find the line near the beginning of the file that starts with @EXPORT.
   Move it up a few lines, to right above the 'package eventc;' line.
3) Test with some of the event/examples programs to make sure steps 1 and 2
   worked.

NOTE: Right now, we are intentionally using an old version of SWIG: 1.1 instead
of the current 1.3 . 1.3 seems to have some bugs that are harder to work around
than version 1.1's bug noted above. The major one is a problem with the
handling of typedefs. Probably, with enough work, we could get 1.3 to work, but
there's no incentive to spend that time just yet.
