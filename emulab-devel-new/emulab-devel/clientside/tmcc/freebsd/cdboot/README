*** Other stuff that needs to be installed!

* /usr/site/bin/hier
* /root/.ssh
* /etc/ssh
* /usr/local/bin/sudo
* /usr/local/etc/sudoers

*** Stuff to remove

* /usr/share/doc
* /usr/share/man
* /rr_moved

*** New loader that does testbed magic boot stuff

* I grabbed the stuff I did for the RON/Netbed CD's that checks the
  magic sector and stuck that (testbed.c) into the boot loader source
  from the 4.10 disk. I also grabbed another file from the emuboot
  source code; diskboot.c which sets the active partition. This stuff
  should be rolled into the source at some point ...

  Anyway, I added some code to set the active partition into testbed.c.

  See below for how the boot floopy invokes the testbed specific stuff.
  This new loader needs to onto the CD *inside* the boot floopy image in
  /floppies/boot.flp. 
   
*** Create a bootable CD that does not run from the mini fs.

So, the problem with bootable CDs is that they really boot from a
floopy image on the CD. The mfsroot that the fixit disk runs from is
inside the floopy image. Obviously, thats too small to be very useful,
and you cannot run from the CD since its read-only, and we really want
to go multiuser so that we can use all the good tools including ssh!
We are going to make a minor change to floopy image so that it does not
load the mini mfsroot, and so that it boots directly from the CDROM.
This is okay; it will initially boot up with / read-only.

First off, you need to mount the floopy image from the CD.

	cd /FOO/floppies
	vnconfig vn0 boot.flp 
	mount /dev/vn0 /mnt/floopy

Edit /mnt/floopy/boot/loader.rc:

	load /kernel
	set vfs.root.mountfrom="cd9660:acd0a"
	testbed_boot

Compress and copy kernel.GENERIC from the CDROM to the boot floopy image.

	cat /FOO/kernel.GENERIC | gzip -9 > /mnt/floopy/kernel.gz

Kill the mfs since it wastes space and it won't be used.

	rm -f /mnt/floopy/mfsroot.gz

Copy in the new version of the loader described above:

	cp -f loader /mnt/floopy/boot/loader

This is necessary cause something about the original kernel on the boot
floopy does not work correctly when putting /dev on an mfs. Also, it does
not drop into that userconfig interface on boot.

Then unmount/close the boot floopy.

	umount /mnt/floopy
	vnconfig -u vn0


