--- models.py.orig	2014-02-06 18:01:59.000000000 -0700
+++ models.py	2014-02-07 16:36:43.000000000 -0700
@@ -670,10 +666,10 @@
         portals = iSCSITargetAuthorizedInitiator.objects.all().order_by(
             'iscsi_target_initiator_tag')
         idx = 1
-        for portal in portals:
-            portal.iscsi_target_initiator_tag = idx
-            portal.save()
-            idx += 1
+        #for portal in portals:
+        #    portal.iscsi_target_initiator_tag = idx
+        #    portal.save()
+        #    idx += 1
 
 
 class iSCSITargetAuthCredential(Model):
--- forms.py.orig	2014-02-06 18:01:51.000000000 -0700
+++ forms.py	2014-02-07 09:24:50.000000000 -0700
@@ -1091,11 +1091,20 @@
 
     def __init__(self, *args, **kwargs):
         super(iSCSITargetAuthorizedInitiatorForm, self).__init__(*args, **kwargs)
-        self.fields["iscsi_target_initiator_tag"].initial = models.iSCSITargetAuthorizedInitiator.objects.all().count() + 1
+        initiators = models.iSCSITargetAuthorizedInitiator.objects.all().order_by('iscsi_target_initiator_tag')
+        itag = 1
+        for itor in initiators:
+            if itag < itor.iscsi_target_initiator_tag:
+                break
+            itag += 1
+        self.fields["iscsi_target_initiator_tag"].initial = itag
+        #self.fields["iscsi_target_initiator_tag"].initial = models.iSCSITargetAuthorizedInitiator.objects.all().count() + 1
 
     def clean_iscsi_target_initiator_tag(self):
         tag = self.cleaned_data["iscsi_target_initiator_tag"]
-        higher = models.iSCSITargetAuthorizedInitiator.objects.all().count() + 1
+        initiators = models.iSCSITargetAuthorizedInitiator.objects.all()
+        higher = max([0,] + [itor.iscsi_target_initiator_tag for itor in initiators]) + 1
+        #higher = models.iSCSITargetAuthorizedInitiator.objects.all().count() + 1
         if tag > higher:
             raise forms.ValidationError(_("Your Group ID cannot be higher than %d") % higher)
         return tag
