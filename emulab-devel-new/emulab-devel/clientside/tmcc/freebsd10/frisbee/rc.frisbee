#!/bin/sh
#
# Copyright (c) 2000-2017 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
# Emulab rc.d file to fire off frisbee in the disk loader MFS.
# This is one of the few active services in the frisbee MFS, but we want
# to make sure it starts after network configuration and after sshd
# (if sshd is present).
#

# PROVIDE: frisbee
# REQUIRE: NETWORKING sshd
# KEYWORD: nojail

. /etc/rc.subr
. /etc/network.subr

name="frisbee"
start_cmd="frisbee_start"
stop_cmd=":"

if [ -r /etc/emulab/paths.sh ]; then
    . /etc/emulab/paths.sh
else
    BINDIR=/etc/testbed
    BOOTDIR=/etc/testbed
    ETCDIR=/etc/testbed
fi

#
# Note: we try to feed the output of rc.frisbee back to boss via tmcc.
# But we only do this if frisbee fails since we don't get back here on
# success (rc.frisbee waits to be rebooted).
#
frisbee_start()
{
    stat=0
    if [ -x "$BINDIR/rc.frisbee" ]; then
	echo "Playing Frisbee ..."
	if [ -x /usr/bin/tee ]; then
	    ($BINDIR/rc.frisbee || echo $? >/tmp/stat) 2>&1 | tee /tmp/frisbee.log
	    stat=$?
	    if [ -e /tmp/stat ]; then
		stat=`cat /tmp/stat`
	    fi
	else
	    $BINDIR/rc.frisbee
	    stat=$?
	fi
	if [ $stat -ne 0 ]; then
	    if [ -x "$BINDIR/tmcc" -a -e /tmp/frisbee.log ]; then
		$BINDIR/tmcc -f /tmp/frisbee.log bootlog
	    fi
	    echo "rc.frisbee failed ($stat)"
	fi
    else
	echo "$BINDIR/rc.frisbee does not exist!"
	stat=1
    fi

    exit $stat
}

load_rc_config $name
run_rc_command $*
