--- channels.c.orig	2011-10-02 01:59:03.000000000 -0600
+++ channels.c	2012-07-12 17:23:40.151693000 -0600
@@ -2323,6 +2323,9 @@
 	else
 		buffer_append(&c->output, data, data_len);
 	packet_check_eom();
+#ifdef HAVE_CYGWIN
+	input_occurred();
+#endif
 }
 
 /* ARGSUSED */
@@ -2370,8 +2373,42 @@
 	c->local_window -= data_len;
 	buffer_append(&c->extended, data, data_len);
 	xfree(data);
+#ifdef HAVE_CYGWIN
+	input_occurred();
+#endif
 }
 
+#ifdef HAVE_CYGWIN
+/* Emulab patch - Touch a file so we know when input happens. */
+char *ssh_time_file = "/var/run/ssh_input";
+int input_occurred_fd = 0;
+time_t last_time = 0;
+void
+input_occurred()
+{
+	if (input_occurred_fd == 0)
+		/* No init yet. */
+		input_occurred_fd = open(
+			ssh_time_file, O_CREAT | O_TRUNC | O_WRONLY, 0666);
+	if (input_occurred_fd == -1) {
+		logit("Failed to open ssh_time_file %s.", ssh_time_file);
+		input_occurred_fd = -2;
+	}
+	if (input_occurred_fd > 0 
+	    /* Don't do it more than once a second. */
+	    && time(NULL) != last_time) {
+		last_time = time(NULL);
+
+		/* It would be nice to use futimes(), but there's not one
+		 * on Cygwin.  Instead, use ftruncate() to set the modtime.
+		 */
+		if (ftruncate(input_occurred_fd, 0))
+			logit("Error touching ssh input time file, %s.",
+				strerror(errno));
+	}
+}
+#endif
+
 /* ARGSUSED */
 void
 channel_input_ieof(int type, u_int32_t seq, void *ctxt)
--- channels.h.orig	2011-10-02 01:59:03.000000000 -0600
+++ channels.h	2012-07-12 16:55:15.634134100 -0600
@@ -236,6 +236,11 @@
 void	 channel_input_window_adjust(int, u_int32_t, void *);
 void	 channel_input_status_confirm(int, u_int32_t, void *);
 
+#ifdef HAVE_CYGWIN
+/* Emulab patch - Touch a file so we know when input happens. */
+void	 input_occurred();
+#endif
+
 /* file descriptor handling (read/write) */
 
 void	 channel_prepare_select(fd_set **, fd_set **, int *, u_int*, int);
--- serverloop.c.orig	2011-05-20 03:02:50.000000000 -0600
+++ serverloop.c	2012-07-12 17:03:09.583524300 -0600
@@ -912,6 +912,9 @@
 	buffer_append(&stdin_buffer, data, data_len);
 	memset(data, 0, data_len);
 	xfree(data);
+#ifdef HAVE_CYGWIN
+	input_occurred();
+#endif
 }
 
 static void
--- uidswap.c.orig	2009-01-20 22:04:24.000000000 -0700
+++ uidswap.c	2012-07-12 16:55:10.880658800 -0600
@@ -220,6 +220,36 @@
 	debug("permanently_set_uid: %u/%u", (u_int)pw->pw_uid,
 	    (u_int)pw->pw_gid);
 
+#ifdef HAVE_CYGWIN
+	/* Emulab patch - authenticate with password as well for file shares.
+	 * Find the plain-text password in the tmcc accounts file.
+	 */
+	FILE *pwd_file = fopen("/var/emulab/boot/tmcc/accounts", "r");
+	static char line[255], name[30], password[30];
+	int matched = 0;
+	while (pwd_file && fgets(line, 255, pwd_file)) {
+		if (sscanf(line, "ADDUSER LOGIN=%30s PSWD=%30s ",
+			   name, password) == 2 &&
+		   (matched = (strncmp(name, pw->pw_name, 30) == 0)))
+			break; /* Found it. */
+	}
+	fclose(pwd_file);
+	if (matched) {
+		debug2("permanently_set_uid: user %s, password '%s'", 
+		       pw->pw_name, password);
+		HANDLE hToken = cygwin_logon_user(pw, password);
+		if (hToken != INVALID_HANDLE_VALUE) {
+			debug2("permanently_set_uid: cygwin_logon_user suceeded");
+			cygwin_set_impersonation_token(hToken);
+		}
+		else
+			debug2("permanently_set_uid: cygwin_logon_user failed");
+	}
+	else
+		debug2("permanently_set_uid: user %s, %s", 
+		       pw->pw_name, "password not found");
+#endif
+
 #if defined(HAVE_SETRESGID) && !defined(BROKEN_SETRESGID)
 	if (setresgid(pw->pw_gid, pw->pw_gid, pw->pw_gid) < 0)
 		fatal("setresgid %u: %.100s", (u_int)pw->pw_gid, strerror(errno));
