#!/usr/bin/perl -w
#
# Copyright (c) 2007-2012 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
use English;
use Getopt::Std;

my $FSTAB = "/etc/fstab";
my $script = $0;

#
# Figure out if there is a swap device and add it to fstab.
# We used to do this in slicefix as part of the post-frisbee customization,
# but it is difficult to do a good job of it just using sh and sed given
# that the swap partition might be in a different slice than the filesystems.
#
sub swapenable();
sub addswap($$);

# Turn off line buffering on output
$| = 1;

swapenable();
exit(0);

sub swapenable()
{
    my $rootfs;
    my $nextcheck = 0;

    if (!open(FD, "<$FSTAB")) {
	print STDERR "*** WARNING: could not open $FSTAB for reading, ".
	    "no swap enabled\n";
	return;
    }
    while (<FD>) {
	my ($fs,$mpt,$type,$opt) = split;
	if ($mpt eq "/") {
	    $rootfs = $fs;
	    next;
	}
	if ($type eq "swap") {
	    close(FD);
	    return;
	}
    }
    close(FD);

    #
    # No swap device found, see if the disklabel of the root disk reveals one
    #
    my ($dtype, $dnum, $snum, $part);
    if ($rootfs =~ /([a-zA-Z]+)(\d+)s(\d+)([a-z])/ ||
	$rootfs =~ /([a-zA-Z]+)(\d+)([a-z])/) {
	$dtype = $1;
	$dnum = $2;
	if (!defined($part)) {
	    $snum = "1";
	    $part = $3;
	}
	else {
	    $snum = $3;
	    $part = $4;
	}
    }
    else {
	print STDERR "*** WARNING: could not parse root device $rootfs, ".
	    "no swap enabled\n";
	return;
    }

    my $disk = "${dtype}${dnum}";
    my $slice = "${disk}s${snum}";
    if (-e "/dev/$slice") {
	my @lines = `disklabel $slice 2>/dev/null`;
	if ($? != 0) {
	    print STDERR "*** WARNING: could not read disklabel of /dev/$slice, ".
		"no swap enabled\n";
	    return;
	}

	chomp(@lines);
	foreach $line (@lines) {
	    if ($line =~ /\s*([a-z]):\s+(\d+)\s+\d+\s+(\S+)/) {
		my $part = $1;
		my $size = $2;
		my $fstype = $3;
		if ($fstype eq "swap") {
		    addswap("$slice$part", $size);
		    return;
		}
	    }
	}
    }

    #
    # Still nothing, look at the MBR to see if there is a Linux swap partition
    # we can use.
    #
    while (-e "/dev/$disk") {
	@lines = `fdisk -s /dev/$disk 2>/dev/null`;
	if ($? != 0) {
	    print STDERR "*** WARNING: could not read MBR of /dev/$disk, ".
		"no swap enabled\n";
	    return;
	}

	chomp(@lines);
	foreach $line (@lines) {
	    if ($line =~ /\s*(\d):\s+\d+\s+(\d+)\s+(\S+)/) {
		my $part = $1;
		my $size = $2;
		my $ptype = $3;
		if ($ptype eq "0x82") {
		    addswap("${disk}s${part}", $size);
		    return;
		}
	    }
	}
	#
	# Cycle through all disks looking for one with a linux swap partition.
	#
	$dnum++;
	$disk = "${dtype}${dnum}";
    }

    print STDERR "*** WARNING: could not locate a suitable swap device, ".
	"no swap enabled\n";
}

sub addswap($$)
{
    my ($dev,$size) = @_;

    print "Using /dev/$dev ($size sectors) for swap\n";
    if (system("swapon /dev/$dev")) {
	print STDERR "*** WARNING: could not enable swap on /dev/$dev, ".
	    "no swap enabled\n";
	exit(0);
    }
    if (!open(FD, ">>$FSTAB")) {
	print STDERR "*** WARNING: could not add /dev/$dev to $FSTAB, ".
	    "swap enabled this boot only\n";
    }
    print FD "# the following added by $script\n";
    print FD "/dev/$dev\t\tnone\tswap\tsw\t0\t0\n";
    close(FD);
    print "Swap enabled\n";
}
