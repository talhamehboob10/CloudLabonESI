#!/usr/bin/perl -wT

#
# Copyright (c) 2000-2013 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

use English;
use Getopt::Std;

#
# Authenticated ICMP Ping of Death (APoD)
# A wrapper for the basic ipod program.  Queries the DB for the 32 byte,
# one-time "hash" used to identify ourselves.
#
# usage: apod node [node ...]
#        Exit value is the sum of the ipod exit codes.
#
sub usage()
{
    print STDOUT "Usage: apod node [node ...]\n";
    exit(-1);
}

#
# Configure variables
#
my $TB		= "@prefix@";

#
# Testbed Support libraries
#
use lib "@prefix@/lib";
use libdb;
use libtestbed;
use Node;

my $ipod	= "$TB/sbin/ipod";
#my $ipod	= "./ipod";

# un-taint path
$ENV{'PATH'} = '/bin:/sbin:/usr/bin:/usr/local/bin';
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

# Turn off line buffering on output
$| = 1; 

if (@ARGV == 0) {
    usage();
}
    
# Untaint the nodes.
foreach my $node ( @ARGV ) {
    if ($node =~ /^([-\@\w]+)$/) {
	$node = $1;
    }
    else {
	die("Bad node name: $node.");
    }
    
    push(@nodes, $node);
}

#
# Verify permission to PoD these nodes.
#
if ($UID && !TBAdmin($UID) &&
    ! TBNodeAccessCheck($UID, TB_NODEACCESS_REBOOT, @nodes)) {
    die("You do not have permission to APOD one (or more) ".
	"of the nodes!\n");
}

#
# Smack em!
#
my $rv = 0;
foreach my $node (@nodes) {
    my $nodeobj = Node->Lookup($node);

    if ($nodeobj->SendApod(1)) {
	print STDERR "Authenticated IPOD failed on node $node\n";
	$rv++;
    }
}

exit($rv);
