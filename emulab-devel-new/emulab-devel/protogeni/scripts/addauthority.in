#!/usr/bin/perl -w
#
# Copyright (c) 2008-2011, 2016 University of Utah and the Flux Group.
# 
# {{{GENIPUBLIC-LICENSE
# 
# GENI Public License
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and/or hardware specification (the "Work") to
# deal in the Work without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Work, and to permit persons to whom the Work
# is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Work.
# 
# THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
# IN THE WORK.
# 
# }}}
#
use strict;
use English;
use Data::Dumper;
use Getopt::Std;

#
# Add an authority to the DB. Mostly for bootstrapping. Use the -n option
# to set the disabled bit in the DB.
# 
sub usage()
{
    print "Usage: addauthority [-c | -a | -s] [-n] <certfile> <type> [url]\n";
    exit(1);
}
my $optlist    = "acnfs";
my $asch       = 0;
my $asam       = 0;
my $assa       = 0;
my $disable    = 0;
my $force      = 0;

#
# Check args.
#
my %options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (defined($options{"n"})) {
    $disable = 1;
}
if (defined($options{"c"})) {
    $asch = 1;
}
if (defined($options{"a"})) {
    $asam = 1;
}
if (defined($options{"s"})) {
    $assa = 1;
}
if (defined($options{"f"})) {
    $force = 1;
}
usage()
    if (@ARGV < 2 || @ARGV > 3);

my $certfile = $ARGV[0];
my $type     = $ARGV[1];
my $url      = (@ARGV == 3 ? $ARGV[2] : undef);

use vars qw($GENI_DBNAME);
if ($asch) {
    $GENI_DBNAME = "geni-ch";
}
elsif ($asam) {
    $GENI_DBNAME = "geni-cm";
}
elsif ($assa) {
    $GENI_DBNAME = "geni";
}

# Now we can load the libraries after setting the proper DB.
use lib '@prefix@/lib';
require GeniDB;
require GeniCertificate;
require GeniAuthority;

my $certificate = GeniCertificate->LoadFromFile($certfile);
if (!defined($certificate)) {
    die("Could not get certificate from $certfile\n");
}
if (! ($certificate->uuid() =~ /\w*-(\w*)$/)) {
    die("Could not get prefix from uuid\n");
}
if (!defined($url)) {
    $url = $certificate->URL();
    if (!defined($url)) {
	die("Certificate does not have a URI extension");
    }
}
if (!$force && GeniAuthority->CheckExisting($certificate)) {
    die("$certfile is already registered in the DB\n");
}
my $authority = GeniAuthority->Create($certificate, $url, lc($type));
if (!defined($authority)) {
    die("Could not add new authority\n");
}
$authority->Disable()
    if ($disable);

exit(0);
