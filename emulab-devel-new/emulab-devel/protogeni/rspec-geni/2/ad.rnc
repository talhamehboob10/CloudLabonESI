#
# EMULAB-COPYRIGHT
# Copyright (c) 2008-2009 University of Utah and the Flux Group.
# All rights reserved.
#

#
# Prototype of an advertisement RSpec, to be used by ProtoGENI
# Version 2
#

default namespace = "http://www.protogeni.net/resources/rspec/2"

include "common.rnc"

NodeContents &=
  # Component identifiers
  attribute component_id { text } &
  attribute component_manager_id { text } &
  attribute component_name { text }? &

  # Indicates whether the node is in sharing mode: exclusive is true if
  # the component manager will agree to promise not to share it.
  attribute exclusive { xsd:boolean } &

  # Indicate whether or not this node is available - the idea is that a
  # full dump of the static physical topology will not include this, but
  # that we can later get updates that include only this attribute (and a
  # URN)
  element available { AvailableContents } &

  # Marks this node as a stand-in for a large network rather than a
  # single machine. This means that other CMs can make external
  # references to this node without a corresponding external reference
  # in this advertisement. It also means that it makes sense for
  # multiple physical links to connect to the same interface.
  element cloud { AnyExtension } &

  # Node type. This includes both hardware and sliver type elements:
  HardwareType* &
  element sliver_type {
    SliverTypeContents &
    element disk_image {
      DiskImageContents &
      attribute default { text }?
    }*
  }*

SliverType &=
  element disk_image {
    DiskImageContents &
    attribute default { text }?
  }* &
  attribute default { text }?


RelationContents &=
  attribute component_id { text }

AvailableContents =
  AnyExtension &
  # Indictates current availability
  attribute now { xsd:boolean }

LinkContents &=
  # Component identifiers
  attribute component_id { text } &
  element component_manager { attribute name { text } }* &
  attribute component_name { text }?

InterfaceContents &=
  attribute component_id { text } &
  attribute component_name { text }? &
  element monitoring { MonitoringContents }? &
  # role should usually be one of:
  #  'control' (interface used to communicate with CM and/or the world)
  #  'experimental' (interface used to communicate within the topology
  #  'mixed' (interface used for both of the above
  attribute role { text }? &
  attribute public_ipv4 { text }?

MonitoringContents &=
  AnyExtension &
  # True if user traffic moves through this interface and is available
  # for monitoring.
  attribute user_traffic { xsd:boolean }?

InterfaceRefContents &=
  attribute component_id { text }

# Reference to components managed by other component managers.
ExternalReferenceContents &=
  AnyExtension &
  attribute component_id { text } &
  attribute component_manager_id { text }?

ServiceContents &=
  # Install services include download and extraction of a file at
  # experiment startup.
  element install { InstallServiceContents }* &

  # Execute services include initialization scripts
  element execute { ExecuteServiceContents }*

InstallServiceContents &=
  AnyExtension &
  # Type(s) of archives supported
  # file_type should usually be one of 'tar.gz' or 'tar.bz2' for tarballs
  attribute file_type { text }

ExecuteServiceContents &=
  AnyExtension &
  # Shell environment allowed
  # Should usually be 'sh' to indicate a generic unix shell
  #   environment for the script.
  attribute shell { text }

TypeRelationContents &=
  AnyExtension &
  element hardware_type { HardwareTypeContents }* &
  element sliver_type { SliverTypeContents }* &
  element disk_image { DiskImageContents }*

RSpecContents &=
  attribute type { "advertisement" } &
  element external_ref {
    ExternalReferenceContents
  }* &
  element type_relation {
    TypeRelationContents
  }*

start = RSpec
