<?xml version="1.0" encoding="utf-8"?>

<!--

Copyright (c) 2008-2013 University of Utah and the Flux Group.

{{{GENIPUBLIC-LICENSE

GENI Public License

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and/or hardware specification (the "Work") to
deal in the Work without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Work, and to permit persons to whom the Work
is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Work.

THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
IN THE WORK.

}}}

-->

<windows:PopupTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
							 xmlns:s="library://ns.adobe.com/flex/spark" 
							 xmlns:mx="library://ns.adobe.com/flex/mx"
							 xmlns:components="com.flack.shared.display.components.*"
							 skinClass="com.flack.shared.display.skins.TitleWindowSkinNoCloseButton"
							 width="540"
							 height="400"
							 title="List resources from..."
							 initialize="init()"
							 defaultButton="{okButton}" xmlns:windows="com.flack.shared.display.windows.*">
	<windows:layout>
		<s:VerticalLayout gap="4"
						  paddingTop="4"
						  paddingBottom="4"
						  paddingLeft="4"
						  paddingRight="4" />
	</windows:layout>
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.flack.geni.GeniCache;
			import com.flack.geni.GeniMain;
			import com.flack.geni.resources.sites.GeniManager;
			import com.flack.geni.resources.sites.GeniManagerCollection;
			import com.flack.shared.resources.sites.ApiDetails;
			
			import mx.collections.ArrayCollection;
			
			import spark.collections.Sort;
			import spark.collections.SortField;
			
			public var callAfter:Function;
			
			private var managers:ArrayCollection;
			
			public function init():void
			{
				// Get user preferences
				var allWatched:Boolean = true;
				var managersToWatch:Dictionary = GeniCache.getManagersToWatch();
				
				managers = new ArrayCollection();
				for each(var addManager:GeniManager in GeniMain.geniUniverse.managers.collection)
					managers.addItem(addManager);
				var sort:Sort = new Sort();
				var sortfield:SortField = new SortField("hrn");
				sort.fields = [sortfield];
				managers.sort = sort;
				managers.refresh();

				for each(var manager:GeniManager in managers)
				{
					var managerCheckbox:CheckBox = new CheckBox();
					managerCheckbox.percentWidth = 100;
					managerCheckbox.label = manager.hrn;
					managerCheckbox.toolTip = manager.url;
					if(managersToWatch[manager.id.full] != null)
					{
						managerCheckbox.selected = managersToWatch[manager.id.full];
						if(allWatched && !managerCheckbox.selected)
							allWatched = false;
					}
					else
						managerCheckbox.selected = true;
					managerItems.addElement(managerCheckbox);
				}
				selectAllCheckbox.selected = allWatched;
				forceApiButton.selected = GeniCache.getForceAmApi();
				okButton.setFocus();
			}
			
			public function selectAllChange():void
			{
				for(var i:int = 0; i < managerItems.numElements; i++)
					(managerItems.getElementAt(i) as CheckBox).selected = selectAllCheckbox.selected;
			}
			
			public function finish():void
			{
				var managersToWatch:Dictionary = new Dictionary();
				var watchedManagers:GeniManagerCollection = new GeniManagerCollection();
				for(var i:int = 0; i < managerItems.numElements; i++)
				{
					var manager:GeniManager = managers.getItemAt(i) as GeniManager;
					var managerWatched:Boolean = (managerItems.getElementAt(i) as CheckBox).selected
					managersToWatch[manager.id.full] = managerWatched;
					if(managerWatched)
						watchedManagers.add(manager);
				}
				// Set the cache for future reference and continue;
				GeniCache.setManagersToWatch(managersToWatch);
				GeniCache.setAskWhichManagersToWatch(!dontAskAgainButton.selected);
				GeniCache.setForceAmApi(forceApiButton.selected);
				if(forceApiButton.selected)
					GeniMain.geniUniverse.managers.forceApiType(ApiDetails.API_GENIAM);
				callAfter(watchedManagers);
				closeWindow();
			}
			
		]]>
	</fx:Script>
	<s:CheckBox id="selectAllCheckbox"
				label="All/None"
				fontWeight="bold"
				toolTip="List resources at all or none of the managers"
				change="selectAllChange()" />
	<s:TileGroup id="managerItems"
				 width="100%"
				 height="100%"
				 orientation="columns"
				 clipAndEnableScrolling="true" />
	<windows:controlBarLayout>
		<s:HorizontalLayout verticalAlign="middle"
							gap="4"
							paddingTop="4"
							paddingBottom="4"
							paddingLeft="4"
							paddingRight="4" />
	</windows:controlBarLayout>
	<windows:controlBarContent>
		<s:Button id="okButton"
				  label="Continue"
				  click="finish()" />
		<s:CheckBox id="forceApiButton"
					label="Force AM API"
					toolTip="Use AM API on managers that by default use other frameworks (like CM API)?" />
		<s:CheckBox id="dontAskAgainButton"
					label="Don't ask again" />
	</windows:controlBarContent>
</windows:PopupTitleWindow>
