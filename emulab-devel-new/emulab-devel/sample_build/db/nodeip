#!/usr/bin/perl -w

#
# Copyright (c) 2000-2017 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

#
# nodeip - Given a node, interface, or MAC address, print the interface
# information for that interface. If a node is given, all interfaces for
# that node are printed.
#

#
# Configure variables
#
use lib '/users/mshobana/CloudLabonESI/emulab-devel-new/emulab-devel/sample_build/lib';
use libdb;

if ($#ARGV < 0) {
	print "Usage: nodeip <node|mac|if> <node|mac|if> <...>\n";
	print "<node> is in the form pcxxx\n";
	print "<mac> is in the form xx:xx:xx:xx:xx:xx or xxxxxxxxxxxx\n";
	print "<if> is in the form <node[:iface]>\n";
	exit(1);
}

my @list = "";
my $n=0;

foreach my $mac ( @ARGV ) { 
	if ( $mac =~ /^(sh\d+)(-\d)?(:\d)?$/ ) {
		my $node = $1. (defined $2 ? $2 : "-" );
		$list[$n] .= "(node_id like '$node%')";
	} elsif ( $mac =~ /^([a-zA-Z]+\d+):([-\w]*)$/ ) {
		my $node=$1;
		my $if=$2;
		$list[$n] .= "(node_id='$node' and iface='$if')";
	} elsif ( $mac =~ /^([a-zA-Z]+\d+)$/ ) {
		my $node=$1;
		$list[$n] .= "(node_id='$node')";
	} else {
		$mac =~ s/^(\d):/0$1:/;
		$mac =~ s/:(\d):/:0$1:/g;
		$mac =~ s/://g;
		$list[$n] ="MAC='\L$mac'";
	}
	$n++;
}

my $cond = join(" or ",@list);

my $result = DBQueryFatal("select * from interfaces where $cond");

print $result->as_string();
