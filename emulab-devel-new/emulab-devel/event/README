This directory contains the testbed event system. It is enabled with
--enable-events when you configure the testbed. But first ...

BUILDING THE EVENT SYSTEM

To build the event system, you first need to obtain the Elvin publish/
subscribe system.  You need both the Elvin client library (libelvin
version 4.0) and the Elvin server (elvind version 4.0). You can get
them directly from http://elvin.dstc.com/. Be sure to configure the
Elvin library with "--enable-threads" to build support for Elvin's
thread-safe "threaded" API.  Once the Elvin client library is built
and installed, you may build the event system by doing a "make".

USING THE EVENT SYSTEM

Before you may use the event system, you must configure the
Elvin server. The default Elvin configuration file should suffice. If
you want to use Elvin's server discovery protocol, you will need
to set "scope" and "default" accordingly (see the Elvin documentation).

Next, you need to start the Elvin server ("elvind") on your boss node
(We provide a sample startup file in ../rc.d).  The Elvin server is
responsible for routing event notifications from event producers to
event consumers.  Once the Elvin server is running, clients in the
system may use the event library to subscribe to and trigger events.
For an overview of how the system works, please see the DESIGN file.
(Note that an event scheduler must be running for the system to be
fully operational; for more information about the event scheduler,
please see the DESIGN file.)

Clients use the event library to interface with the event system; for
a description of the API, see the API file.  Clients that need
additional functionality may also use Elvin directly, though at some
point in the future we may adopt a different system for event
notification transport or write our own.  If you find that you can't
do something with the event library, then it very well could be a
limitation in the event library API; please contact
testbed-ops@flux.utah.edu to let us know about it.
