#!/usr/local/bin/python
# -*- python -*-
#
# Copyright (c) 2000-2003, 2008 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

import sys
sys.path.append("@prefix@/lib")
import libplab
from libtestbed import *

usage = "\t%prog [-vdf] [-p plcname] [-e pid/eid] [-s slicename]"

def main(args):
    me = args[0]
    parser = TBParser(usage)
    parser.add_option("-f","--force",dest="force",action="store",
                      help="Force slice renewal",default=None)
    parser.add_option("-p","--plc",dest="plc",action="store",
                      help="PLC name",default=None)
    parser.add_option("-e","--expt",dest="expt",action="store",
                      help="pid/eid",default=None)
    parser.add_option("-s","--slicename",dest="slicename",action="store",
                      help="slice name",default=None)

    slicename = None
    pid,eid = None,None
    expt = None

    (opts,args) = parser.parse_args()

    libplab.debug = opts.debug
    libplab.verbose = opts.verbose

    if opts.expt:
        try:
            pid,eid = opts.expt.split('/')
        except:
            parser.error("Improper pid/eid")
        pass

    if len(args) > 0:
        parser.error("Incorrect number of arguments")
        pass

    plab = libplab.Plab()
    plab.renew(opts.plc,pid,eid,opts.slicename,opts.force)

    return

if __name__ == "__main__":
    main(sys.argv)
