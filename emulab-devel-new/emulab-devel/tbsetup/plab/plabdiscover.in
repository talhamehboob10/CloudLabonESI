#!/usr/local/bin/python
# -*- python -*-
#
# Copyright (c) 2000-2003, 2008 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

import sys
sys.path.append("@prefix@/lib")
import libplab
from libtestbed import *

def usage(me):
    print "Usage: %s [ -vd ] [ -n ] [ -g ] [<plc>] ... [<plc>]" % me
    print "    (where <plc> is the name or id of a plc in the db)"
    sys.exit(1)


def main(args):
    me = args[0]
    parser = TBParser()

    parser.add_option("-n", "--nodes",dest="nodes",default=False,
                      action="store_true",help="Only synch node entries.")
    parser.add_option("-g", "--nodegroups",dest="nodegroups",default=False,
                      action="store_true",help="Only synch node group entries.")
    
    (options,cargs) = parser.parse_args()

    libplab.debug = options.debug
    libplab.verbose = options.verbose

    both = True
    if options.nodes and options.nodegroups:
        both = True
    elif options.nodes or options.nodegroups:
        both = False

    plab = libplab.Plab()

    plcids = []    
    if len(cargs) > 0:
        # Only do the args...
        plcids = cargs
    else:
        # Grab all the PLCs we know about and do for all...
        plcs = plab.getPLCs()
        for (name,idx) in plcs:
            plcids.append(name)
            pass
        pass

    for plc in plcids:
        if options.nodes or both:
            print "Updating node entries at %s." % plc
            plab.updateNodeEntries(plc)
        if options.nodegroups or both:
            print "Updating node group entries at %s." % plc
            plab.updateNodeGroupEntries(plc)
        pass
    return

if __name__ == "__main__":
    main(sys.argv)
