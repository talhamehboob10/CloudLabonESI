#
# Version from FreeBSD 10-stable with fixes not present in 10-release.
# Addressed some hang and panic issues with multiple 10Gb interfaces.
# Only needed if you have Intel 10Gb interfaces!
#
#   cd /usr/src
#   sudo patch -p0 < patchfile
#

diff -Nur sys.orig/dev/ixl/README sys/dev/ixl/README
--- sys.orig/dev/ixl/README	2017-03-28 17:07:01.376938000 -0600
+++ sys/dev/ixl/README	2014-09-01 03:15:12.000000000 -0600
@@ -1,7 +1,7 @@
 	ixl FreeBSD* Base Driver and ixlv VF Driver for the
 	     Intel XL710 Ethernet Controller Family
 
-/*$FreeBSD: releng/10.3/sys/dev/ixl/README 270919 2014-09-01 07:54:30Z jfv $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/README 270919 2014-09-01 07:54:30Z jfv $*/
 ================================================================
 
 August 26, 2014
diff -Nur sys.orig/dev/ixl/i40e_adminq.c sys/dev/ixl/i40e_adminq.c
--- sys.orig/dev/ixl/i40e_adminq.c	2017-03-28 17:07:01.363791000 -0600
+++ sys/dev/ixl/i40e_adminq.c	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_adminq.c 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_adminq.c 292100 2015-12-11 13:08:38Z smh $*/
 
 #include "i40e_status.h"
 #include "i40e_type.h"
diff -Nur sys.orig/dev/ixl/i40e_adminq.h sys/dev/ixl/i40e_adminq.h
--- sys.orig/dev/ixl/i40e_adminq.h	2017-03-28 17:07:01.364202000 -0600
+++ sys/dev/ixl/i40e_adminq.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_adminq.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_adminq.h 292100 2015-12-11 13:08:38Z smh $*/
 
 #ifndef _I40E_ADMINQ_H_
 #define _I40E_ADMINQ_H_
diff -Nur sys.orig/dev/ixl/i40e_adminq_cmd.h sys/dev/ixl/i40e_adminq_cmd.h
--- sys.orig/dev/ixl/i40e_adminq_cmd.h	2017-03-28 17:07:01.364827000 -0600
+++ sys/dev/ixl/i40e_adminq_cmd.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_adminq_cmd.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_adminq_cmd.h 292100 2015-12-11 13:08:38Z smh $*/
 
 #ifndef _I40E_ADMINQ_CMD_H_
 #define _I40E_ADMINQ_CMD_H_
diff -Nur sys.orig/dev/ixl/i40e_alloc.h sys/dev/ixl/i40e_alloc.h
--- sys.orig/dev/ixl/i40e_alloc.h	2017-03-28 17:07:01.373444000 -0600
+++ sys/dev/ixl/i40e_alloc.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_alloc.h 292099 2015-12-11 13:05:18Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_alloc.h 292099 2015-12-11 13:05:18Z smh $*/
 
 #ifndef _I40E_ALLOC_H_
 #define _I40E_ALLOC_H_
diff -Nur sys.orig/dev/ixl/i40e_common.c sys/dev/ixl/i40e_common.c
--- sys.orig/dev/ixl/i40e_common.c	2017-03-28 17:07:01.365790000 -0600
+++ sys/dev/ixl/i40e_common.c	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_common.c 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_common.c 292100 2015-12-11 13:08:38Z smh $*/
 
 #include "i40e_type.h"
 #include "i40e_adminq.h"
diff -Nur sys.orig/dev/ixl/i40e_devids.h sys/dev/ixl/i40e_devids.h
--- sys.orig/dev/ixl/i40e_devids.h	2017-03-28 17:07:01.366194000 -0600
+++ sys/dev/ixl/i40e_devids.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_devids.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_devids.h 292100 2015-12-11 13:08:38Z smh $*/
 
 #ifndef _I40E_DEVIDS_H_
 #define _I40E_DEVIDS_H_
diff -Nur sys.orig/dev/ixl/i40e_hmc.c sys/dev/ixl/i40e_hmc.c
--- sys.orig/dev/ixl/i40e_hmc.c	2017-03-28 17:07:01.366610000 -0600
+++ sys/dev/ixl/i40e_hmc.c	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_hmc.c 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_hmc.c 292100 2015-12-11 13:08:38Z smh $*/
 
 #include "i40e_osdep.h"
 #include "i40e_register.h"
diff -Nur sys.orig/dev/ixl/i40e_hmc.h sys/dev/ixl/i40e_hmc.h
--- sys.orig/dev/ixl/i40e_hmc.h	2017-03-28 17:07:01.367024000 -0600
+++ sys/dev/ixl/i40e_hmc.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_hmc.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_hmc.h 292100 2015-12-11 13:08:38Z smh $*/
 
 #ifndef _I40E_HMC_H_
 #define _I40E_HMC_H_
diff -Nur sys.orig/dev/ixl/i40e_lan_hmc.c sys/dev/ixl/i40e_lan_hmc.c
--- sys.orig/dev/ixl/i40e_lan_hmc.c	2017-03-28 17:07:01.367559000 -0600
+++ sys/dev/ixl/i40e_lan_hmc.c	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_lan_hmc.c 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_lan_hmc.c 292100 2015-12-11 13:08:38Z smh $*/
 
 #include "i40e_osdep.h"
 #include "i40e_register.h"
diff -Nur sys.orig/dev/ixl/i40e_lan_hmc.h sys/dev/ixl/i40e_lan_hmc.h
--- sys.orig/dev/ixl/i40e_lan_hmc.h	2017-03-28 17:07:01.373863000 -0600
+++ sys/dev/ixl/i40e_lan_hmc.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_lan_hmc.h 292099 2015-12-11 13:05:18Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_lan_hmc.h 292099 2015-12-11 13:05:18Z smh $*/
 
 #ifndef _I40E_LAN_HMC_H_
 #define _I40E_LAN_HMC_H_
diff -Nur sys.orig/dev/ixl/i40e_nvm.c sys/dev/ixl/i40e_nvm.c
--- sys.orig/dev/ixl/i40e_nvm.c	2017-03-28 17:07:01.368002000 -0600
+++ sys/dev/ixl/i40e_nvm.c	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_nvm.c 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_nvm.c 292100 2015-12-11 13:08:38Z smh $*/
 
 #include "i40e_prototype.h"
 
diff -Nur sys.orig/dev/ixl/i40e_osdep.c sys/dev/ixl/i40e_osdep.c
--- sys.orig/dev/ixl/i40e_osdep.c	2017-03-28 17:07:01.374254000 -0600
+++ sys/dev/ixl/i40e_osdep.c	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_osdep.c 292099 2015-12-11 13:05:18Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_osdep.c 292099 2015-12-11 13:05:18Z smh $*/
 
 #include <machine/stdarg.h>
 
diff -Nur sys.orig/dev/ixl/i40e_osdep.h sys/dev/ixl/i40e_osdep.h
--- sys.orig/dev/ixl/i40e_osdep.h	2017-03-28 17:07:01.368406000 -0600
+++ sys/dev/ixl/i40e_osdep.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_osdep.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_osdep.h 292100 2015-12-11 13:08:38Z smh $*/
 
 #ifndef _I40E_OSDEP_H_
 #define _I40E_OSDEP_H_
diff -Nur sys.orig/dev/ixl/i40e_prototype.h sys/dev/ixl/i40e_prototype.h
--- sys.orig/dev/ixl/i40e_prototype.h	2017-03-28 17:07:01.368907000 -0600
+++ sys/dev/ixl/i40e_prototype.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_prototype.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_prototype.h 292100 2015-12-11 13:08:38Z smh $*/
 
 #ifndef _I40E_PROTOTYPE_H_
 #define _I40E_PROTOTYPE_H_
diff -Nur sys.orig/dev/ixl/i40e_register.h sys/dev/ixl/i40e_register.h
--- sys.orig/dev/ixl/i40e_register.h	2017-03-28 17:07:01.370607000 -0600
+++ sys/dev/ixl/i40e_register.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_register.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_register.h 292100 2015-12-11 13:08:38Z smh $*/
 
 #ifndef _I40E_REGISTER_H_
 #define _I40E_REGISTER_H_
diff -Nur sys.orig/dev/ixl/i40e_status.h sys/dev/ixl/i40e_status.h
--- sys.orig/dev/ixl/i40e_status.h	2017-03-28 17:07:01.374655000 -0600
+++ sys/dev/ixl/i40e_status.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_status.h 292099 2015-12-11 13:05:18Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_status.h 292099 2015-12-11 13:05:18Z smh $*/
 
 #ifndef _I40E_STATUS_H_
 #define _I40E_STATUS_H_
diff -Nur sys.orig/dev/ixl/i40e_type.h sys/dev/ixl/i40e_type.h
--- sys.orig/dev/ixl/i40e_type.h	2017-03-28 17:07:01.371140000 -0600
+++ sys/dev/ixl/i40e_type.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_type.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_type.h 292100 2015-12-11 13:08:38Z smh $*/
 
 #ifndef _I40E_TYPE_H_
 #define _I40E_TYPE_H_
diff -Nur sys.orig/dev/ixl/i40e_virtchnl.h sys/dev/ixl/i40e_virtchnl.h
--- sys.orig/dev/ixl/i40e_virtchnl.h	2017-03-28 17:07:01.371572000 -0600
+++ sys/dev/ixl/i40e_virtchnl.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/i40e_virtchnl.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/i40e_virtchnl.h 292100 2015-12-11 13:08:38Z smh $*/
 
 #ifndef _I40E_VIRTCHNL_H_
 #define _I40E_VIRTCHNL_H_
diff -Nur sys.orig/dev/ixl/if_ixl.c sys/dev/ixl/if_ixl.c
--- sys.orig/dev/ixl/if_ixl.c	2017-03-28 17:07:01.363293000 -0600
+++ sys/dev/ixl/if_ixl.c	2017-10-06 13:15:19.000000000 -0600
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/if_ixl.c 295088 2016-01-31 02:23:30Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/if_ixl.c 303107 2016-07-20 18:26:48Z sbruno $*/
 
 #ifndef IXL_STANDALONE_BUILD
 #include "opt_inet.h"
@@ -62,7 +62,6 @@
 static ixl_vendor_info_t ixl_vendor_info_array[] =
 {
 	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_SFP_XL710, 0, 0, 0},
-	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_KX_A, 0, 0, 0},
 	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_KX_B, 0, 0, 0},
 	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_KX_C, 0, 0, 0},
 	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_QSFP_A, 0, 0, 0},
@@ -70,8 +69,6 @@
 	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_QSFP_C, 0, 0, 0},
 	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_10G_BASE_T, 0, 0, 0},
 	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_10G_BASE_T4, 0, 0, 0},
-	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_20G_KR2, 0, 0, 0},
-	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_20G_KR2_A, 0, 0, 0},
 #ifdef X722_SUPPORT
 	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_SFP_X722, 0, 0, 0},
 	{I40E_INTEL_VENDOR_ID, I40E_DEV_ID_1G_BASE_T_X722, 0, 0, 0},
@@ -117,6 +114,8 @@
 static void	ixl_configure_msix(struct ixl_pf *);
 static void	ixl_configure_itr(struct ixl_pf *);
 static void	ixl_configure_legacy(struct ixl_pf *);
+static void	ixl_init_taskqueues(struct ixl_pf *);
+static void	ixl_free_taskqueues(struct ixl_pf *);
 static void	ixl_free_pci_resources(struct ixl_pf *);
 static void	ixl_local_timer(void *);
 static int	ixl_setup_interface(device_t, struct ixl_vsi *);
@@ -207,8 +206,8 @@
 #ifdef PCI_IOV
 static int	ixl_adminq_err_to_errno(enum i40e_admin_queue_err err);
 
-static int	ixl_init_iov(device_t dev, uint16_t num_vfs, const nvlist_t*);
-static void	ixl_uninit_iov(device_t dev);
+static int	ixl_iov_init(device_t dev, uint16_t num_vfs, const nvlist_t*);
+static void	ixl_iov_uninit(device_t dev);
 static int	ixl_add_vf(device_t dev, uint16_t vfnum, const nvlist_t*);
 
 static void	ixl_handle_vf_msg(struct ixl_pf *,
@@ -230,9 +229,9 @@
 	DEVMETHOD(device_detach, ixl_detach),
 	DEVMETHOD(device_shutdown, ixl_shutdown),
 #ifdef PCI_IOV
-	DEVMETHOD(pci_init_iov, ixl_init_iov),
-	DEVMETHOD(pci_uninit_iov, ixl_uninit_iov),
-	DEVMETHOD(pci_add_vf, ixl_add_vf),
+	DEVMETHOD(pci_iov_init, ixl_iov_init),
+	DEVMETHOD(pci_iov_uninit, ixl_iov_uninit),
+	DEVMETHOD(pci_iov_add_vf, ixl_add_vf),
 #endif
 	{0, 0}
 };
@@ -644,7 +643,7 @@
 	else
 		error = ixl_assign_vsi_legacy(pf);
 	if (error) 
-		goto err_late;
+		goto err_mac_hmc;
 
 	if (((hw->aq.fw_maj_ver == 4) && (hw->aq.fw_min_ver < 33)) ||
 	    (hw->aq.fw_maj_ver < 4)) {
@@ -669,7 +668,7 @@
 	error = ixl_switch_config(pf);
 	if (error) {
 		device_printf(dev, "Initial switch config failed: %d\n", error);
-		goto err_mac_hmc;
+		goto err_late;
 	}
 
 	/* Limit phy interrupts to link and modules failure */
@@ -682,6 +681,9 @@
 	bus = ixl_get_bus_info(hw, dev);
 	i40e_set_pci_config_data(hw, bus);
 
+	/* Initialize taskqueues */
+	ixl_init_taskqueues(pf);
+
 	/* Initialize statistics */
 	ixl_pf_reset_stats(pf);
 	ixl_update_stats_counters(pf);
@@ -729,7 +731,8 @@
 	i40e_shutdown_adminq(hw);
 err_out:
 	ixl_free_pci_resources(pf);
-	ixl_free_vsi(vsi);
+	if (vsi->queues != NULL)
+		ixl_free_vsi(vsi);
 	IXL_PF_LOCK_DESTROY(pf);
 	return (error);
 }
@@ -750,7 +753,6 @@
 	struct ixl_pf		*pf = device_get_softc(dev);
 	struct i40e_hw		*hw = &pf->hw;
 	struct ixl_vsi		*vsi = &pf->vsi;
-	struct ixl_queue	*que = vsi->queues;
 	i40e_status		status;
 #ifdef PCI_IOV
 	int			error;
@@ -779,13 +781,7 @@
 		IXL_PF_UNLOCK(pf);
 	}
 
-	for (int i = 0; i < vsi->num_queues; i++, que++) {
-		if (que->tq) {
-			taskqueue_drain(que->tq, &que->task);
-			taskqueue_drain(que->tq, &que->tx_task);
-			taskqueue_free(que->tq);
-		}
-	}
+	ixl_free_taskqueues(pf);
 
 	/* Shutdown LAN HMC */
 	status = i40e_shutdown_lan_hmc(hw);
@@ -1024,7 +1020,8 @@
 			vsi->max_frame_size =
 				ifp->if_mtu + ETHER_HDR_LEN + ETHER_CRC_LEN
 			    + ETHER_VLAN_ENCAP_LEN;
-			ixl_init_locked(pf);
+			if (ifp->if_drv_flags & IFF_DRV_RUNNING)
+				ixl_init_locked(pf);
 			IXL_PF_UNLOCK(pf);
 		}
 		break;
@@ -1174,6 +1171,7 @@
 #ifdef IXL_FDIR
 	filter.enable_fdir = TRUE;
 #endif
+	filter.hash_lut_size = I40E_HASH_LUT_SIZE_512;
 	if (i40e_set_filter_control(hw, &filter))
 		device_printf(dev, "set_filter_control() failed\n");
 
@@ -1991,6 +1989,62 @@
 	return (0);
 }
 
+static void
+ixl_init_taskqueues(struct ixl_pf *pf)
+{
+	struct ixl_vsi *vsi = &pf->vsi;
+	struct ixl_queue *que = vsi->queues;
+	device_t dev = pf->dev;
+#ifdef	RSS
+	int cpu_id;
+	cpuset_t cpu_mask;
+#endif
+
+	/* Tasklet for Admin Queue */
+	TASK_INIT(&pf->adminq, 0, ixl_do_adminq, pf);
+#ifdef PCI_IOV
+	/* VFLR Tasklet */
+	TASK_INIT(&pf->vflr_task, 0, ixl_handle_vflr, pf);
+#endif
+
+	/* Create and start PF taskqueue */
+	pf->tq = taskqueue_create_fast("ixl_adm", M_NOWAIT,
+	    taskqueue_thread_enqueue, &pf->tq);
+	taskqueue_start_threads(&pf->tq, 1, PI_NET, "%s adminq",
+	    device_get_nameunit(dev));
+
+	/* Create queue tasks and start queue taskqueues */
+	for (int i = 0; i < vsi->num_queues; i++, que++) {
+		TASK_INIT(&que->tx_task, 0, ixl_deferred_mq_start, que);
+		TASK_INIT(&que->task, 0, ixl_handle_que, que);
+		que->tq = taskqueue_create_fast("ixl_que", M_NOWAIT,
+		    taskqueue_thread_enqueue, &que->tq);
+#ifdef RSS
+		cpu_id = rss_getcpu(i % rss_getnumbuckets());
+		CPU_SETOF(cpu_id, &cpu_mask);
+		taskqueue_start_threads_cpuset(&que->tq, 1, PI_NET,
+		    &cpu_mask, "%s (bucket %d)",
+		    device_get_nameunit(dev), cpu_id);
+#else
+		taskqueue_start_threads(&que->tq, 1, PI_NET,
+		    "%s (que %d)", device_get_nameunit(dev), que->me);
+#endif
+	}
+}
+
+static void
+ixl_free_taskqueues(struct ixl_pf *pf)
+{
+	struct ixl_vsi *vsi = &pf->vsi;
+	struct ixl_queue *que = vsi->queues;
+
+	if (pf->tq)
+		taskqueue_free(pf->tq);
+	for (int i = 0; i < vsi->num_queues; i++, que++) {
+		if (que->tq)
+			taskqueue_free(que->tq);
+	}
+}
 
 /*********************************************************************
  *
@@ -2026,17 +2080,6 @@
 	}
 	bus_describe_intr(dev, pf->res, pf->tag, "aq");
 	pf->admvec = vector;
-	/* Tasklet for Admin Queue */
-	TASK_INIT(&pf->adminq, 0, ixl_do_adminq, pf);
-
-#ifdef PCI_IOV
-	TASK_INIT(&pf->vflr_task, 0, ixl_handle_vflr, pf);
-#endif
-
-	pf->tq = taskqueue_create_fast("ixl_adm", M_NOWAIT,
-	    taskqueue_thread_enqueue, &pf->tq);
-	taskqueue_start_threads(&pf->tq, 1, PI_NET, "%s adminq",
-	    device_get_nameunit(pf->dev));
 	++vector;
 
 	/* Now set up the stations */
@@ -2067,18 +2110,6 @@
 #endif
 		bus_bind_intr(dev, que->res, cpu_id);
 		que->msix = vector;
-		TASK_INIT(&que->tx_task, 0, ixl_deferred_mq_start, que);
-		TASK_INIT(&que->task, 0, ixl_handle_que, que);
-		que->tq = taskqueue_create_fast("ixl_que", M_NOWAIT,
-		    taskqueue_thread_enqueue, &que->tq);
-#ifdef RSS
-		taskqueue_start_threads_pinned(&que->tq, 1, PI_NET,
-		    cpu_id, "%s (bucket %d)",
-		    device_get_nameunit(dev), cpu_id);
-#else
-		taskqueue_start_threads(&que->tq, 1, PI_NET,
-		    "%s que", device_get_nameunit(dev));
-#endif
 	}
 
 	return (0);
@@ -2141,9 +2172,15 @@
 	/* Figure out a reasonable auto config value */
 	queues = (mp_ncpus > (available - 1)) ? (available - 1) : mp_ncpus;
 
-	/* Override with hardcoded value if sane */
+	/* Override with hardcoded value if it's less than autoconfig count */
 	if ((ixl_max_queues != 0) && (ixl_max_queues <= queues)) 
 		queues = ixl_max_queues;
+	else if ((ixl_max_queues != 0) && (ixl_max_queues > queues))
+		device_printf(dev, "ixl_max_queues > # of cpus, using "
+		    "autoconfig amount...\n");
+	/* Or limit maximum auto-configured queues to 8 */
+	else if ((ixl_max_queues == 0) && (queues > 8))
+		queues = 8;
 
 #ifdef  RSS
 	/* If we're doing RSS, clamp at the number of RSS buckets */
@@ -2243,7 +2280,8 @@
 
 	/* Next configure the queues */
 	for (int i = 0; i < vsi->num_queues; i++, vector++) {
-		wr32(hw, I40E_PFINT_DYN_CTLN(i), i);
+		wr32(hw, I40E_PFINT_DYN_CTLN(i), 0);
+		/* First queue type is RX / type 0 */
 		wr32(hw, I40E_PFINT_LNKLSTN(i), i);
 
 		reg = I40E_QINT_RQCTL_CAUSE_ENA_MASK |
@@ -2256,11 +2294,8 @@
 		reg = I40E_QINT_TQCTL_CAUSE_ENA_MASK |
 		(IXL_TX_ITR << I40E_QINT_TQCTL_ITR_INDX_SHIFT) |
 		(vector << I40E_QINT_TQCTL_MSIX_INDX_SHIFT) |
-		((i+1) << I40E_QINT_TQCTL_NEXTQ_INDX_SHIFT) |
+		(IXL_QUEUE_EOL << I40E_QINT_TQCTL_NEXTQ_INDX_SHIFT) |
 		(I40E_QUEUE_TYPE_RX << I40E_QINT_TQCTL_NEXTQ_TYPE_SHIFT);
-		if (i == (vsi->num_queues - 1))
-			reg |= (IXL_QUEUE_EOL
-			    << I40E_QINT_TQCTL_NEXTQ_INDX_SHIFT);
 		wr32(hw, I40E_QINT_TQCTL(i), reg);
 	}
 }
@@ -2551,7 +2586,7 @@
 	}
 	if_initname(ifp, device_get_name(dev), device_get_unit(dev));
 	ifp->if_mtu = ETHERMTU;
-	if_initbaudrate(ifp, IF_Gbps(40));
+	ifp->if_baudrate = IF_Gbps(40);
 	ifp->if_init = ixl_init;
 	ifp->if_softc = vsi;
 	ifp->if_flags = IFF_BROADCAST | IFF_SIMPLEX | IFF_MULTICAST;
@@ -2753,8 +2788,17 @@
 	*/
 	ctxt.info.valid_sections = I40E_AQ_VSI_PROP_QUEUE_MAP_VALID;
 	ctxt.info.mapping_flags |= I40E_AQ_VSI_QUE_MAP_CONTIG;
-	ctxt.info.queue_mapping[0] = 0; 
-	ctxt.info.tc_mapping[0] = 0x0800; 
+	/* In contig mode, que_mapping[0] is first queue index used by this VSI */
+	ctxt.info.queue_mapping[0] = 0;
+	/*
+	 * This VSI will only use traffic class 0; start traffic class 0's
+	 * queue allocation at queue 0, and assign it 64 (2^6) queues (though
+	 * the driver may not use all of them).
+	 */
+	ctxt.info.tc_mapping[0] = ((0 << I40E_AQ_VSI_TC_QUE_OFFSET_SHIFT)
+	    & I40E_AQ_VSI_TC_QUE_OFFSET_MASK) |
+	    ((6 << I40E_AQ_VSI_TC_QUE_NUMBER_SHIFT)
+	    & I40E_AQ_VSI_TC_QUE_NUMBER_MASK);
 
 	/* Set VLAN receive stripping mode */
 	ctxt.info.valid_sections |= I40E_AQ_VSI_PROP_VLAN_VALID;
@@ -2870,7 +2914,6 @@
 			device_printf(dev, "Fail in init_rx_ring %d\n", i);
 			break;
 		}
-		wr32(vsi->hw, I40E_QRX_TAIL(que->me), 0);
 #ifdef DEV_NETMAP
 		/* preserve queue */
 		if (vsi->ifp->if_capenable & IFCAP_NETMAP) {
@@ -5114,15 +5157,6 @@
 	}
 
 	error = sbuf_finish(buf);
-	if (error) {
-		device_printf(dev, "Error finishing sbuf: %d\n", error);
-		sbuf_delete(buf);
-		return error;
-	}
-
-	error = sysctl_handle_string(oidp, sbuf_data(buf), sbuf_len(buf), req);
-	if (error)
-		device_printf(dev, "sysctl error: %d\n", error);
 	sbuf_delete(buf);
 
 	return (error);
@@ -5232,15 +5266,6 @@
 	sbuf_delete(nmbuf);
 
 	error = sbuf_finish(buf);
-	if (error) {
-		device_printf(dev, "Error finishing sbuf: %d\n", error);
-		sbuf_delete(buf);
-		return error;
-	}
-
-	error = sysctl_handle_string(oidp, sbuf_data(buf), sbuf_len(buf), req);
-	if (error)
-		device_printf(dev, "sysctl error: %d\n", error);
 	sbuf_delete(buf);
 
 	return (error);
@@ -6324,7 +6349,7 @@
 		return;
 	}
 
-	if (!vf->vf_flags & VF_FLAG_PROMISC_CAP) {
+	if (!(vf->vf_flags & VF_FLAG_PROMISC_CAP)) {
 		i40e_send_vf_nack(pf, vf,
 		    I40E_VIRTCHNL_OP_CONFIG_PROMISCUOUS_MODE, I40E_ERR_PARAM);
 		return;
@@ -6546,7 +6571,7 @@
 }
 
 static int
-ixl_init_iov(device_t dev, uint16_t num_vfs, const nvlist_t *params)
+ixl_iov_init(device_t dev, uint16_t num_vfs, const nvlist_t *params)
 {
 	struct ixl_pf *pf;
 	struct i40e_hw *hw;
@@ -6594,7 +6619,7 @@
 }
 
 static void
-ixl_uninit_iov(device_t dev)
+ixl_iov_uninit(device_t dev)
 {
 	struct ixl_pf *pf;
 	struct i40e_hw *hw;
@@ -6619,7 +6644,11 @@
 		pf->veb_seid = 0;
 	}
 
+#if __FreeBSD_version > 1100022
 	if ((if_getdrvflags(ifp) & IFF_DRV_RUNNING) == 0)
+#else
+	if ((ifp->if_drv_flags & IFF_DRV_RUNNING) == 0)
+#endif
 		ixl_disable_intr(vsi);
 
 	vfs = pf->vfs;
diff -Nur sys.orig/dev/ixl/if_ixlv.c sys/dev/ixl/if_ixlv.c
--- sys.orig/dev/ixl/if_ixlv.c	2017-03-28 17:07:01.372184000 -0600
+++ sys/dev/ixl/if_ixlv.c	2017-10-06 13:16:36.000000000 -0600
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/if_ixlv.c 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/if_ixlv.c 303107 2016-07-20 18:26:48Z sbruno $*/
 
 #ifndef IXL_STANDALONE_BUILD
 #include "opt_inet.h"
@@ -675,7 +675,8 @@
 			vsi->max_frame_size =
 			    ifp->if_mtu + ETHER_HDR_LEN + ETHER_CRC_LEN
 			    + ETHER_VLAN_ENCAP_LEN;
-			ixlv_init_locked(sc);
+			if (ifp->if_drv_flags & IFF_DRV_RUNNING)
+				ixlv_init_locked(sc);
 		}
 		mtx_unlock(&sc->mtx);
 		break;
@@ -1381,6 +1382,9 @@
 	struct 		ixl_queue *que = vsi->queues;
 	struct		tx_ring	 *txr;
 	int 		error, rid, vector = 1;
+#ifdef	RSS
+	cpuset_t	cpu_mask;
+#endif
 
 	for (int i = 0; i < vsi->num_queues; i++, vector++, que++) {
 		int cpu_id = i;
@@ -1415,8 +1419,9 @@
 		que->tq = taskqueue_create_fast("ixlv_que", M_NOWAIT,
 		    taskqueue_thread_enqueue, &que->tq);
 #ifdef RSS
-		taskqueue_start_threads_pinned(&que->tq, 1, PI_NET,
-		    cpu_id, "%s (bucket %d)",
+		CPU_SETOF(cpu_id, &cpu_mask);
+		taskqueue_start_threads_cpuset(&que->tq, 1, PI_NET,
+		    &cpu_mask, "%s (bucket %d)",
 		    device_get_nameunit(dev), cpu_id);
 #else
                 taskqueue_start_threads(&que->tq, 1, PI_NET,
diff -Nur sys.orig/dev/ixl/ixl.h sys/dev/ixl/ixl.h
--- sys.orig/dev/ixl/ixl.h	2017-03-28 17:07:01.375699000 -0600
+++ sys/dev/ixl/ixl.h	2016-03-27 09:53:18.000000000 -0600
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/ixl.h 292097 2015-12-11 12:47:49Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/ixl.h 292097 2015-12-11 12:47:49Z smh $*/
 
 
 #ifndef _IXL_H_
@@ -324,7 +324,7 @@
 #define IXL_SET_IMCASTS(vsi, count)	(vsi)->imcasts = (count)
 #define IXL_SET_OMCASTS(vsi, count)	(vsi)->omcasts = (count)
 #define IXL_SET_IQDROPS(vsi, count)	(vsi)->iqdrops = (count)
-#define IXL_SET_OQDROPS(vsi, count)	(vsi)->iqdrops = (count)
+#define IXL_SET_OQDROPS(vsi, count)	(vsi)->oqdrops = (count)
 #define IXL_SET_NOPROTO(vsi, count)	(vsi)->noproto = (count)
 #else
 #define IXL_SET_IPACKETS(vsi, count)	(vsi)->ifp->if_ipackets = (count)
diff -Nur sys.orig/dev/ixl/ixl_pf.h sys/dev/ixl/ixl_pf.h
--- sys.orig/dev/ixl/ixl_pf.h	2017-03-28 17:07:01.376104000 -0600
+++ sys/dev/ixl/ixl_pf.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/ixl_pf.h 292097 2015-12-11 12:47:49Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/ixl_pf.h 292097 2015-12-11 12:47:49Z smh $*/
 
 
 #ifndef _IXL_PF_H_
diff -Nur sys.orig/dev/ixl/ixl_txrx.c sys/dev/ixl/ixl_txrx.c
--- sys.orig/dev/ixl/ixl_txrx.c	2017-03-28 17:07:01.375175000 -0600
+++ sys/dev/ixl/ixl_txrx.c	2016-03-27 09:50:51.000000000 -0600
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/ixl_txrx.c 292099 2015-12-11 13:05:18Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/ixl_txrx.c 292099 2015-12-11 13:05:18Z smh $*/
 
 /*
 **	IXL driver TX/RX Routines:
@@ -285,7 +285,7 @@
 	if (error == EFBIG) {
 		struct mbuf *m;
 
-		m = m_collapse(*m_headp, M_NOWAIT, maxsegs);
+		m = m_defrag(*m_headp, M_NOWAIT);
 		if (m == NULL) {
 			que->mbuf_defrag_failed++;
 			m_freem(*m_headp);
@@ -389,7 +389,6 @@
 	++txr->total_packets;
 	wr32(hw, txr->tail, i);
 
-	ixl_flush(hw);
 	/* Mark outstanding work */
 	if (que->busy == 0)
 		que->busy = 1;
diff -Nur sys.orig/dev/ixl/ixlv.h sys/dev/ixl/ixlv.h
--- sys.orig/dev/ixl/ixlv.h	2017-03-28 17:07:01.372593000 -0600
+++ sys/dev/ixl/ixlv.h	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/ixlv.h 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/ixlv.h 292100 2015-12-11 13:08:38Z smh $*/
 
 
 #ifndef _IXLV_H_
diff -Nur sys.orig/dev/ixl/ixlv_vc_mgr.h sys/dev/ixl/ixlv_vc_mgr.h
--- sys.orig/dev/ixl/ixlv_vc_mgr.h	2017-03-28 17:07:01.376500000 -0600
+++ sys/dev/ixl/ixlv_vc_mgr.h	2014-11-11 03:13:53.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/ixlv_vc_mgr.h 274360 2014-11-10 23:56:06Z jfv $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/ixlv_vc_mgr.h 274360 2014-11-10 23:56:06Z jfv $*/
 
 #ifndef _IXLV_VC_MGR_H_
 #define _IXLV_VC_MGR_H_
diff -Nur sys.orig/dev/ixl/ixlvc.c sys/dev/ixl/ixlvc.c
--- sys.orig/dev/ixl/ixlvc.c	2017-03-28 17:07:01.373063000 -0600
+++ sys/dev/ixl/ixlvc.c	2015-12-12 03:14:03.000000000 -0700
@@ -30,7 +30,7 @@
   POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-/*$FreeBSD: releng/10.3/sys/dev/ixl/ixlvc.c 292100 2015-12-11 13:08:38Z smh $*/
+/*$FreeBSD: stable/10/sys/dev/ixl/ixlvc.c 292100 2015-12-11 13:08:38Z smh $*/
 
 /*
 **	Virtual Channel support
