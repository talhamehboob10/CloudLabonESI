use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBTableExists("apt_aggregate_radio_locations")) {
        DBQueryFatal("CREATE TABLE `apt_aggregate_radio_locations` ( ".
		     " `aggregate_urn` varchar(128) NOT NULL default '', ".
		     " `location` varchar(64) NOT NULL default '', ".
		     " `itype` enum('FE','ME','BS','PE','unknown') ".
		     "    NOT NULL default 'unknown', ".
		     " `latitude` float(8,5) default NULL, ".
		     " `longitude` float(8,5) default NULL, ".
		     " `mapurl` tinytext, ".
		     " `streeturl` tinytext, ".
		     " `notes` text, ".
		     " PRIMARY KEY  (`aggregate_urn`,`location`) ".
		     ") ENGINE=MyISAM DEFAULT CHARSET=latin1");
    }
    if (!DBTableExists("apt_aggregate_radio_info")) {
        DBQueryFatal("CREATE TABLE `apt_aggregate_radio_info` ( ".
		     " `aggregate_urn` varchar(128) NOT NULL default '', ".
		     " `node_id` varchar(32) NOT NULL default '', ".
		     " `location` varchar(64) NOT NULL default '', ".
		     " `radio_type` tinytext, ".
		     " `power_id` varchar(32) default NULL, ".
		     " `cnuc_id` varchar(32) default NULL, ".
		     " `notes` text, ".
		     " PRIMARY KEY  (`aggregate_urn`,`node_id`) ".
		     ") ENGINE=MyISAM DEFAULT CHARSET=latin1");
    }
    if (!DBTableExists("apt_aggregate_radio_frontends")) {
        DBQueryFatal("CREATE TABLE `apt_aggregate_radio_frontends` ( ".
		     " `aggregate_urn` varchar(128) NOT NULL default '', ".
		     " `node_id` varchar(32) NOT NULL default '', ".
		     " `iface` varchar(32) NOT NULL default '', ".
		     " `frontend` enum('TDD','FDD','none') ".
		     "     NOT NULL default 'none', ".
		     " `transmit_frequencies` text, ".
		     " `receive_frequencies` text, ".
		     " `monitored` tinyint(1) NOT NULL default '0', ".
		     " `notes` text, ".
		     " PRIMARY KEY ".
		     "   (`aggregate_urn`,`node_id`,`iface`,`frontend`) ".
		     ") ENGINE=MyISAM DEFAULT CHARSET=latin1");
    }
    return 0;
}

# Local Variables:
# mode:perl
# End:
