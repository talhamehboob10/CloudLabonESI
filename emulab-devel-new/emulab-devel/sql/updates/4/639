use strict;
use libdb;
use emdb;
use Project;
use User;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBSlotExists("reservation_history", "pid_idx")) {
	DBQueryFatal("alter table reservation_history add ".
		     " `pid_idx` mediumint(8) unsigned NOT NULL default '0' ".
		     "  after pid");
    }
    if (!DBSlotExists("reservation_history", "uid_idx")) {
	DBQueryFatal("alter table reservation_history add ".
		     " `uid_idx` mediumint(8) unsigned NOT NULL default '0' ".
		     "  after uid");
    }
    if (!DBSlotExists("reservation_history", "canceled")) {
	DBQueryFatal("alter table reservation_history add ".
		     "  `canceled` datetime DEFAULT NULL ".
		     "    after deleted");
    }
    my $query_result =
	DBQueryFatal("select pid,start,end from reservation_history ".
		     "where pid_idx=0");
    while (my ($pid,$start,$end) = $query_result->fetchrow_array()) {
	my $project = Project->Lookup($pid);
	if (!defined($project)) {
	    print STDERR "Oops, project $pid no longer exists!";
	    next;
	}
	my $pid_idx = $project->pid_idx();
	DBQueryFatal("update reservation_history set ".
		     "  pid_idx='$pid_idx' ".
		     "where pid='$pid' and start='$start' and end='$end'");
    }
    $query_result =
	DBQueryFatal("select pid,uid,start,end from reservation_history ".
		     "where uid_idx=0");
    while (my ($pid,$uid,$start,$end) = $query_result->fetchrow_array()) {
	my $user = User->Lookup($uid);
	if (!defined($user)) {
	    print STDERR "Oops, user $uid no longer exists!";
	    next;
	}
	my $uid_idx = $user->uid_idx();
	DBQueryFatal("update reservation_history set ".
		     "  uid_idx='$uid_idx' ".
		     "where pid='$pid' and start='$start' and end='$end'");
    }
    $query_result =
	DBQueryFatal("select pid,start,end from reservation_history ".
		     "where uuid=''");
    while (my ($pid,$start,$end) = $query_result->fetchrow_array()) {
	DBQueryFatal("update reservation_history set ".
		     "  uuid=uuid() ".
		     "where pid='$pid' and start='$start' and end='$end'");
	sleep(1);
    }
    return 0;
}

# Local Variables:
# mode:perl
# End:
