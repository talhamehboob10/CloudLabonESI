use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBSlotExists("apt_instance_failures", "portal")) {
	DBQueryFatal("alter table apt_instance_failures add ".
		     "  `portal` enum('emulab','aptlab','cloudlab', ".
		     "      'phantomnet','powder') default NULL ".
		     "      after logfileid");
    }
    if (!DBSlotExists("apt_instance_history", "portal")) {
	DBQueryFatal("alter table apt_instance_history add ".
		     "  `portal` enum('emulab','aptlab','cloudlab', ".
		     "      'phantomnet','powder') default NULL ".
		     "      after servername");
    }
    if (!DBSlotExists("apt_instances", "portal")) {
	DBQueryFatal("alter table apt_instances add ".
		     "  `portal` enum('emulab','aptlab','cloudlab', ".
		     "      'phantomnet','powder') default NULL ".
		     "      after servername");
    }
    DBQueryFatal("update apt_instances set portal='emulab'");
    DBQueryFatal("update apt_instance_history set portal='emulab'");

    # This will not doing anything outside of utah.
    my %PORTAL_MAPPING =
	("www.aptlab.net"         => "aptlab",
	 "www.cloudlab.us"        => "cloudlab",
	 "www.phantomnet.org"     => "phantomnet",
	 "www.powderwireless.net" => "powder");

    foreach my $servername (keys(%PORTAL_MAPPING)) {
	my $portal = $PORTAL_MAPPING{$servername};

	DBQueryFatal("update apt_instances set portal='$portal' ".
		     "where servername='$servername'");
	DBQueryFatal("update apt_instance_history set portal='$portal' ".
		     "where servername='$servername'");
    }
    DBQueryFatal("update apt_instance_failures,apt_instance_history ".
		 "set apt_instance_failures.portal=apt_instance_history.portal ".
		 "where apt_instance_failures.uuid=apt_instance_history.uuid");
    DBQueryFatal("update apt_instance_failures,apt_instances ".
		 "set apt_instance_failures.portal=apt_instances.portal ".
		 "where apt_instance_failures.uuid=apt_instances.uuid");
    return 0;
}

1;

# Local Variables:
# mode:perl
# End:
