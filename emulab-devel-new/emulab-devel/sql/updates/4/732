use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBSlotExists("apt_instance_aggregates", "added")) {
        DBQueryFatal("alter table apt_instance_aggregates add ".
		     " `added` datetime default NULL ".
		     "     after status");

	DBQueryFatal("update apt_instance_aggregates ag, ".
		     "(select uuid,created,started from apt_instances) i ".
		     "set ag.added=i.created,ag.started=i.started ".
		     "where ag.uuid=i.uuid");
    }
    if (!DBSlotExists("apt_instance_aggregates", "destroyed")) {
        DBQueryFatal("alter table apt_instance_aggregates add ".
		     " `destroyed` datetime default NULL ".
		     "     after started");
    }
    
    if (!DBSlotExists("apt_instance_aggregate_history", "added")) {
        DBQueryFatal("alter table apt_instance_aggregate_history add ".
		     " `added` datetime default NULL ".
		     "     after status");
	
	DBQueryFatal("update apt_instance_aggregate_history agh, ".
		     "(select uuid,created,started ".
		     "   from apt_instance_history) h ".
		     "set agh.added=h.created,agh.started=h.started ".
		     "where agh.uuid=h.uuid");
    }
    if (!DBSlotExists("apt_instance_aggregate_history", "destroyed")) {
        DBQueryFatal("alter table apt_instance_aggregate_history add ".
		     " `destroyed` datetime default NULL ".
		     "     after started");
	
	DBQueryFatal("update apt_instance_aggregate_history agh, ".
		     "(select uuid,destroyed ".
		     "   from apt_instance_history) h ".
		     "set agh.destroyed=h.destroyed ".
		     "where agh.uuid=h.uuid");
    }
    return 0;
}
1;

# Local Variables:
# mode:perl
# End:
