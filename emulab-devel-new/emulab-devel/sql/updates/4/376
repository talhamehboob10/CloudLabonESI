#
# Add sitevars for persistent dataset handling:
#
#     storage/<type>/<var>
#
# where <type> is either "stdataset" or "ltdataset" and <var> is one of:
#
# maxsize	Max size (MiB) of a dataset
#		(0 == unlimited)
# maxlease	Max time (days) from creation before lease is marked expired
#		(0 == unlimited)
# maxidle	Max time (days) from last use before lease is marked expired
#		(0 == unlimited)
# graceperiod	Time (days) before an expired dataset will be destroyed
#		(0 == no grace period)
# autodestroy	If non-zero, destroy expired datasets after grace period
#		otherwise lock them
# usequotas	If non-zero, enforce per-project dataset quotas
# maxextend	Number of times a user can extend the lease
#		(0 == unlimited)
# extendperiod	Length (days) of each user-requested extention
#		(0 == do not allow extensions)
#
use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    #
    # Plausible defaults:
    #
    # Short-term datasets. Allow large datasets but with short lease and grace
    # periods. They are not quota-controlled and there is not an idle limit.
    # Users can extend their leases by small amounts for a little while.
    # After the grace period, these are automatically destroyed.
    #
    # Long-term datasets. Allow any-sized dataset that fits within the quota.
    # These are generally expired based on idle time but may have a really long
    # lease time as well. They are quota-controlled and users cannot extend
    # their leases. After the grace period, these are are just marked as locked
    # and unavailable.
    #
    my %value = (
	"stdataset/maxsize"      => 1048576,# 1 TiB
	"stdataset/maxlease"     => 7,	# 7 days
	"stdataset/maxidle"      => 0,	# none
	"stdataset/graceperiod"  => 1,	# 1 day
	"stdataset/autodestroy"  => 1,	# yes
	"stdataset/usequotas"    => 0,	# no
	"stdataset/maxextend"    => 2,	# 2 user extentions
	"stdataset/extendperiod" => 1,	# 1 day per extention

	"ltdataset/maxsize"      => 0,	# none
	"ltdataset/maxlease"     => 0,	# none, use idle time
	"ltdataset/maxidle"      => 180,# 6 months
	"ltdataset/graceperiod"  => 180,# 6 months
	"ltdataset/autodestroy"  => 0,	# no
	"ltdataset/usequotas"    => 1,	# yes
	"ltdataset/maxextend"    => 1,	# ignored because...
	"ltdataset/extendperiod" => 0,	# ...means no user extention
    );
    my %desc = (
	"stdataset/maxsize"      => "Max size (MiB) of a dataset (0 == unlimited)",
	"stdataset/maxlease"     => "Max time (days) from creation before lease is marked expired (0 == unlimited)",
	"stdataset/maxidle"      => "Max time (days) from last use before lease is marked expired (0 == unlimited)",
	"stdataset/graceperiod"  => "Time (days) before an expired dataset will be destroyed (0 == no grace period)",
	"stdataset/autodestroy"  => "If non-zero, destroy expired datasets after grace period, otherwise lock them",
	"stdataset/usequotas"    => "If non-zero, enforce per-project dataset quotas",
	"stdataset/maxextend"    => "Number of times a user can extend the lease (0 == unlimited)",
	"stdataset/extendperiod" => "Length (days) of each user-requested extention (0 == do not allow extensions)",

	"ltdataset/maxsize"      => "Max size (MiB) of a dataset (0 == unlimited)",
	"ltdataset/maxlease"     => "Max time (days) from creation before lease is marked expired (0 == unlimited)",
	"ltdataset/maxidle"      => "Max time (days) from last use before lease is marked expired (0 == unlimited)",
	"ltdataset/graceperiod"  => "Time (days) before an expired dataset will be destroyed (0 == no grace period)",
	"ltdataset/autodestroy"  => "If non-zero, destroy expired datasets after grace period, otherwise lock them",
	"ltdataset/usequotas"    => "If non-zero, enforce per-project dataset quotas",
	"ltdataset/maxextend"    => "Number of times a user can extend the lease (0 == unlimited)",
	"ltdataset/extendperiod" => "Length (days) of each user-requested extention (0 == do not allow extensions)"
    );

    foreach my $name (keys %value) {
	my $val = $value{$name};
	my $desc = $desc{$name};
	DBQueryFatal("INSERT INTO sitevariables VALUES ".
		     " ('storage/$name',NULL,'$val','$desc',0)")
	    if (!TBSiteVarExists("storage/$name"));
    }

    return 0;
}
1;

# Local Variables:
# mode:perl
# End:
