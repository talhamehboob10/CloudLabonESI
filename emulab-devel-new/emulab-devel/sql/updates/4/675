use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBTableExists("image_pending_imports")) {
	DBQueryFatal("CREATE TABLE `image_pending_imports` ( ".
	    "  `idx` int(10) unsigned NOT NULL auto_increment, ".
	    "  `imagename` varchar(30) NOT NULL default '', ".
	    "  `imageid` int(8) unsigned default NULL, ".
	    "  `imageuuid` varchar(40) default NULL, ".
	    "  `uid` varchar(8) default NULL, ".
	    "  `uid_idx` mediumint(8) unsigned NOT NULL default '0', ".
	    "  `uid_urn` varchar(128) default NULL, ".
	    "  `pid` varchar(48) default NULL, ".
	    "  `pid_idx` mediumint(8) unsigned NOT NULL default '0', ".
	    "  `gid` varchar(32) default NULL, ".
	    "  `gid_idx` mediumint(8) unsigned NOT NULL default '0', ".
	    "  `created` datetime default NULL, ".
	    "  `type` enum('import','copyback','relocation') default NULL, ".
	    "  `locked` datetime default NULL, ".
	    "  `locker_pid` int(11) default '0', ".
	    "  `failed` datetime default NULL, ".
	    "  `failure_message` text, ".
	    "  `remote_urn` varchar(128) default NULL, ".
	    "  `metadata_url` varchar(256) default '', ".
	    "  `credential_string` text, ".
	    "  PRIMARY KEY  (`idx`), ".
	    "  UNIQUE KEY `url` (`metadata_url`) ".
	    ") ENGINE=MyISAM DEFAULT CHARSET=latin1");
    }
    if (!DBSlotExists("apt_aggregates", "prestageimages")) {
	DBQueryFatal("alter table apt_aggregates add ".
		     "  `prestageimages` tinyint(1) NOT NULL default '0' ".
		     "     after nolocalimages");
    }
    return 0;
}

1;

# Local Variables:
# mode:perl
# End:
