use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBSlotExists("apt_profile_versions", "repourl")) {
        DBQueryFatal("alter table apt_profile_versions " .
		" add `repourl` tinytext after status, ".
                " add `reponame` varchar(40) default NULL after repourl, ".
		" add `repohash` varchar(64) default NULL after reponame");
    }
    DBQueryFatal("replace INTO table_regex VALUES ".
		 " ('apt_profiles','repourl','text','redirect', ".
		 "  'default:tinytext',0,0,NULL)");
    DBQueryFatal("replace INTO table_regex VALUES ".
		 " ('apt_profiles','repohash','text','regex', ".
		 "  '^[\\\\w]+\$',0,64,NULL)");

    if (!DBSlotExists("apt_instances", "script")) {
        DBQueryFatal("alter table apt_instances " .
		     " add `script` mediumtext after rspec, ".
		     " add `paramdefs` mediumtext after script");
    }
    if (!DBSlotExists("apt_instance_history", "script")) {
        DBQueryFatal("alter table apt_instance_history " .
		     " add `script` mediumtext after rspec, ".
		     " add `paramdefs` mediumtext after script");
    }
    if (!DBSlotExists("apt_instances", "repourl")) {
        DBQueryFatal("alter table apt_instances " .
		     " add `repourl` tinytext after privkey, ".
		     " add `reponame` varchar(40) default NULL after repourl, ".
		     " add `reporef` varchar(128) default NULL after reponame,".
		     " add `repohash` varchar(64) default NULL after reporef");
    }
    if (!DBSlotExists("apt_instance_history", "repourl")) {
        DBQueryFatal("alter table apt_instance_history " .
		     " add `repourl` tinytext after servername, ".
		     " add `reponame` varchar(40) default NULL after repourl, ".
		     " add `repohash` varchar(64) default NULL after reponame");
    }
    
    return 0;
}

# Local Variables:
# mode:perl
# End:
