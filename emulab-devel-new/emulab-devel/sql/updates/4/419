#
# Modify APT instances table.
#
use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBSlotExists("apt_profile_versions", "paramdefs")) {
	DBQueryFatal("alter table apt_profile_versions add ".
		     " `paramdefs` mediumtext after script");
    }
    if (!DBSlotExists("apt_instances", "rspec")) {
	DBQueryFatal("alter table apt_instances add ".
		     " `rspec` mediumtext after servername");
    }
    if (!DBSlotExists("apt_instances", "params")) {
	DBQueryFatal("alter table apt_instances add ".
		     " `params` mediumtext after rspec");
    }
    if (!DBSlotExists("apt_instance_history", "rspec")) {
 	DBQueryFatal("alter table apt_instance_history add ".
		     " `rspec` mediumtext after servername");
    }
    if (!DBSlotExists("apt_instance_history", "params")) {
	DBQueryFatal("alter table apt_instance_history add ".
		     " `params` mediumtext after rspec");
    }
    if (!DBSlotExists("apt_instance_history", "manifest")) {
	DBQueryFatal("alter table apt_instance_history add ".
		     " `manifest` mediumtext after params");
    }
    if (!DBSlotExists("user_pubkeys", "isaptkey")) {
	DBQueryFatal("alter table user_pubkeys add ".
		     " `isaptkey` tinyint(1) NOT NULL default '0' ".
		     "    after nodelete");
    }

    DBQueryFatal("REPLACE INTO table_regex VALUES ".
		 " ('apt_profiles','name','text','redirect', ".
		 "  'images:imagename',0,0,NULL)");
    return 0;
}
1;

# Local Variables:
# mode:perl
# End:
