#
# Add "role" to virt_nodes, for supporting alternate node roles, like
# as a bridge (delay, trace, etc). Add other slots to the virt_lans
# table to support bridges between links and lans. 
#
use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBSlotExists("virt_nodes", "role")) {
	DBQueryFatal("alter table virt_nodes add ".
		     " `role` enum('node','bridge') NOT NULL default 'node'");
    }
    if (!DBSlotExists("virt_lans", "bridge_vname")) {
        print "  *** Updating virt_lans ... please be patient.\n";
	DBQueryFatal("alter table virt_lans add ".
		     " `bridge_vname` varchar(32) default NULL");
    }
    if (!DBTableExists("virt_bridges")) {
	DBQueryFatal("CREATE TABLE `virt_bridges` ( ".
		     " `pid` varchar(12) NOT NULL default '', ".
		     " `eid` varchar(32) NOT NULL default '', ".
		     " `exptidx` int(11) NOT NULL default '0', ".
		     " `vname` varchar(32) NOT NULL default '', ".
		     " `vlink` varchar(32) NOT NULL default '', ".
		     " `vport` tinyint(3) NOT NULL default '0', ".
		     " PRIMARY KEY (`exptidx`,`vname`,`vlink`,`vport`),".
		     " KEY `pideid` (`pid`,`eid`,`vname`) ".
		     ") ENGINE=MyISAM DEFAULT CHARSET=latin1");
    }
    if (!DBSlotExists("delays", "isbridge")) {
	DBQueryFatal("alter table delays add ".
		     "  `isbridge` tinyint(1) default '0'");
    }
    #
    # The existing vname slot becomes the name of the bridge, while
    # vlan0 and vlan1 are the two sides of the delay getting connected
    # together.
    #
    if (!DBSlotExists("delays", "vlan0")) {
	DBQueryFatal("alter table delays add ".
		     "  `vlan0` varchar(32) default NULL after vname");
    }
    if (!DBSlotExists("delays", "vlan1")) {
	DBQueryFatal("alter table delays add ".
		     "  `vlan1` varchar(32) default NULL after vlan0");
	DBQueryFatal("update delays set vlan0=vname, vlan1=vname");
    }
    DBQueryFatal("replace into table_regex VALUES ".
		 "  ('virt_nodes','role','text','regex', ".
		 "   '^(node|bridge)\$',0,0,NULL)");
    DBQueryFatal("replace into table_regex VALUES ".
		 " ('virt_lans','bridge_vname','text','redirect',".
		 "  'virt_lans:vname',0,0,NULL)");

    DBQueryFatal("replace into table_regex VALUES ".
		 " ('virt_bridges','pid','text','redirect',".
		 "  'projects:pid',0,0,NULL)");
    DBQueryFatal("replace into table_regex VALUES ".
		 " ('virt_bridges','eid','text','redirect',".
		 "  'experiments:eid',0,0,NULL)");
    DBQueryFatal("replace into table_regex VALUES ".
		 " ('virt_bridges','vname','text','redirect',".
		 "  'virt_nodes:vname',0,0,NULL)");
    DBQueryFatal("replace into table_regex VALUES ".
		 " ('virt_bridges','vlink','text','redirect',".
		 "  'virt_lans:vname',0,0,NULL)");
    DBQueryFatal("replace into table_regex VALUES ".
		 " ('virt_bridges','vport','int','redirect',".
		 "  'default:tinyint',0,99,NULL)");

    return 0;
}
1;
