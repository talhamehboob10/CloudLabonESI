use strict;
use libdb;
use EmulabConstants;

if (PROTOGENI_SUPPORT()) {
    require APT_Profile;
}

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;

    if (!DBSlotExists("apt_profiles", "lastused")) {
        DBQueryFatal("alter table apt_profiles add " .
		     " `lastused` datetime default NULL");
    }
    if (!DBSlotExists("apt_profiles", "usecount")) {
        DBQueryFatal("alter table apt_profiles add " .
		     " `usecount` int(11) default '0'");
    }
    # There will not be any profiles if PGENISUPPORT is disabled.
    my $query_result =
	DBQueryFatal("select profileid from apt_profiles");

    while (my ($profileid) = $query_result->fetchrow_array()) {
	my $profile = APT_Profile->Lookup($profileid);
	next
	    if (!defined($profile));

	my $profile_id = $profile->profileid();
	my $count = 0;
	my $lastused = "null";
    
	my $count_result =
	    DBQueryFatal("select ".
			 "(select count(profile_id) ".
			 "   from apt_instances ".
			 " where profile_id='$profile_id') as count1, ".
			 "(select count(profile_id) ".
			 "   from apt_instance_history ".
			 " where profile_id='$profile_id') as count2");
	
	if ($count_result->numrows) {
	    my ($c1,$c2) = $count_result->fetchrow_array();
	    $count += $c1 if (defined($c1));
	    $count += $c2 if (defined($c2));
	}

	my $last_result =
	    DBQueryFatal("select max(created) ".
			 "  from apt_instances ".
			 "where profile_id='$profile_id'");
	my ($tmp) = $last_result->fetchrow_array();
	if (!defined($tmp)) {
	    $last_result =
		DBQueryFatal("select max(created) ".
			     "  from apt_instance_history ".
			     "where profile_id='$profile_id'");
	    ($tmp) = $last_result->fetchrow_array();
	    if (defined($tmp)) {
		$lastused = "'$tmp'";
	    }
	}
	DBQueryFatal("update apt_profiles set ".
		     "  lastused=$lastused,usecount=$count ".
		     "where profileid='$profile_id'");
    }
    return 0;
}

# Local Variables:
# mode:perl
# End:
