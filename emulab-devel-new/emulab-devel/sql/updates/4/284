#
# Missing state transitions previously silently allowed by stated.
#
use strict;
use libdb;

sub DoUpdate($$$)
{
    my ($dbhandle, $dbname, $version) = @_;
    my @mode_transitions = (
    );
    my @timeouts = (
    );
    my @transitions = (
        ["PXEFBSD","BOOTING","MFSSETUP","BootOK"],
	["PXEFBSD","BOOTING","SHUTDOWN","Error"],
	["PXEFBSD","MFSSETUP","ISUP","BootDone"],
	["PXEFBSD","MFSSETUP","SHUTDOWN","Error"],
	["PXEFBSD","ISUP","SHUTDOWN","Reboot"],
	["PXEFBSD","SHUTDOWN","PXEBOOTING","DHCP"],
	["SECURELOAD","TPMSIGNOFF","GPXEBOOTING","ReloadDone"],
    );
    my @triggers = (
    );

    foreach my $row (@mode_transitions) {
	my ($opm1,$s1,$opm2,$s2,$lab) = @$row;
	my $query_result =
	    DBQueryFatal("SELECT op_mode1 FROM mode_transitions WHERE ".
			 "op_mode1='$opm1' AND state1='$s1' AND ".
			 "op_mode2='$opm2' AND state2='$s2'");
	if ($query_result->numrows == 0) {
	    DBQueryFatal("INSERT INTO mode_transitions VALUES ".
			 "('$opm1','$s1','$opm2', '$s2','$lab')");
	}
    }

    foreach my $row (@timeouts) {
	my ($opm,$s,$to,$act) = @$row;
	my $query_result =
	    DBQueryFatal("SELECT op_mode FROM state_timeouts WHERE ".
			 "op_mode='$opm' AND state='$s'");
	if ($query_result->numrows == 0) {
	    DBQueryFatal("INSERT INTO state_timeouts VALUES ".
			 "('$opm','$s','$to', '$act')");
	}
    }

    foreach my $row (@transitions) {
	my ($opm,$s1,$s2,$lab) = @$row;
	my $query_result =
	    DBQueryFatal("SELECT op_mode FROM state_transitions WHERE ".
			 "op_mode='$opm' AND state1='$s1' AND state2='$s2'");
	if ($query_result->numrows == 0) {
	    DBQueryFatal("INSERT INTO state_transitions VALUES ".
			 "('$opm','$s1','$s2','$lab')");
	}
    }

    foreach my $row (@triggers) {
	my ($node,$opm,$s,$trig) = @$row;
	my $query_result =
	    DBQueryFatal("SELECT node_id FROM state_triggers WHERE ".
			 "node_id='$node' AND op_mode='$opm' AND state='$s'");
	if ($query_result->numrows == 0) {
	    DBQueryFatal("INSERT INTO state_triggers VALUES ".
			 "('$node','$opm','$s','$trig')");
	}
    }

    # XXX these are currently using NORMALv2 but should be using PXEFBSD
    DBQueryFatal("UPDATE os_info SET op_mode='PXEFBSD' WHERE ".
		 "  osname='ADMIN-LINUX' or osname='NEWNODE-LINUX'");

    return 0;
}
1;
