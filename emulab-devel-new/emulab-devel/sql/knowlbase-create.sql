-- MySQL dump 10.10
--
-- Host: localhost    Database: tbdb
-- ------------------------------------------------------
-- Server version	5.0.20-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Dumping data for table `knowledge_base_entries`
--


/*!40000 ALTER TABLE `knowledge_base_entries` DISABLE KEYS */;
LOCK TABLES `knowledge_base_entries` WRITE;
REPLACE INTO `knowledge_base_entries` (`idx`, `creator_uid`, `creator_idx`, `date_created`, `section`, `title`, `body`, `xref_tag`, `faq_entry`, `date_modified`, `modifier_uid`, `modifier_idx`, `archived`, `date_archived`, `archiver_uid`, `archiver_idx`) VALUES (3,'stoller',282,'2005-08-16 10:06:07','Getting Started','Who is Eligible to use Emulab.Net?','In principle, almost any research or educational use\r\nby those that have a need for it is appropriate and encouraged.\r\nThis includes use by universities, industrial research labs, and both\r\nUS and non-US institutions.   With some provisos, use for development\r\nand evaluation is also acceptable, even by companies.\r\nSee our <a href =\"docwrapper.php3?docname=policies.html\">posted policies</a>\r\nfor more detail.  If you are unsure about your eligibility to use\r\nNetbed/Emulab, please just send us an email inquiry.\r\n',NULL,1,'2005-08-16 12:10:16','stoller',282,0,NULL,NULL,0),(5,'stoller',282,'2005-08-16 10:50:44','Getting Started','How do I start a project?','<p>\r\nIf you are new to the Testbed, simply click on the \"Start Project\"\r\nlink on the Emulab <a href=\"http://www.emulab.net\">Home\r\nPage</a>. You will need to fill in the forms with your personal\r\ninformation and information about the project. Then click on the\r\n\"Submit\" button. Within a few days you will be contacted via email\r\nwith an approval message. More information about starting projects\r\ncan be found in <a href=\"docwrapper.php3?docname=auth.html\">\r\nAuthorization Page</a>.\r\n</p>\r\n<p>\r\nIf you already have an Emulab account, and wish to start a second\r\nproject, first log into the Web Interface. Then select the \"Start\r\nProject\" link; all of the personal information will already be\r\nfilled in. You will need to complete just the project information\r\nsection. \r\n</p>\r\n','start-project',1,'2005-08-16 12:10:32','stoller',282,0,NULL,NULL,0),(6,'stoller',282,'2005-08-16 11:00:05','Getting Started','I\'m a project leader and someone applied to join my project, but they are not on the list to be approved','<p>\r\nJoining a project has 3 stages. The first two are done by\r\nthe person trying to join, and they both must be completed\r\nbefore you can approve their application. The first two are\r\noutlined <a href=\"kb-show?xref_tag=join-project\">here</a>, where the\r\nuser fills out the \"Join Project\" form, and performs account\r\nverification. After these two steps are both complete, the\r\nproject leader and any group leaders in the group \r\n(<a href=\"#GS-6\">More info here</a>) will get an email saying\r\nthe account is ready to be approved, and it will appear on the\r\nlist of new users waiting to be approved.\r\n<p>\r\nIf someone says they\'ve applied, but you haven\'t received an\r\nemail from Emulab about it, and they don\'t show up on your\r\nlist, the most likely cause is that they haven\'t finished the\r\nverification step.\r\n</p>\r\n',NULL,1,'2005-08-16 12:12:12','stoller',282,0,NULL,NULL,0),(7,'stoller',282,'2005-08-16 12:14:39','Getting Started','How do I join a project?','<p>\r\nIf you are new to the Testbed, simply click on the \"Join Project\"\r\nlink on the Emulab <a href=\"http://www.emulab.net\">Home\r\nPage</a>. You will need to fill in the form with your personal\r\ninformation, and provide the name of the project you are trying to\r\njoin (typically, the <i>Project Leader</i> will have told you the\r\nname of the project). Then click on the \"Submit\" button, and wait\r\nfor an email with your new user key. When that email arrives, use\r\nthe link in it (or the key itself), and use it with your password \r\nto log into the web site and verify your account. Then just wait\r\nfor the project leader to approve you.  When approved you will\r\nreceive an email message saying so, and you can then log into the\r\nTestbed.\r\n</p>\r\n','join-project',1,NULL,NULL,0,0,NULL,NULL,0),(8,'stoller',282,'2005-08-16 12:15:51','Getting Started','Will Emulab send me email messages?','    <p>\r\n      Yes! Emulab uses email notifications to you in several different\r\n      ways. Often it will send you a copy of information regarding\r\n      experiments you set up, applications to projects, and other\r\n      things you do at Emulab. Sometimes (like with account\r\n      verification) the email is a critical part of being able to use\r\n      Emulab.\r\n    <p>\r\n      For those reasons it is <b>critical</b> that any spam filtering\r\n      software you have accept email from Emulab itself (anything\r\n      coming from the emulab.net domain) and from Emulab staff (from\r\n      the cs.utah.edu or flux.utah.edu domains). In many cases, it may\r\n      also say that is from a specific machine in those domains. Our\r\n      messages usually do not get flagged as spam by most filters, but\r\n      in certain cases it can be a problem. It is also important that\r\n      it not require manual intervention or confirmation to get emails\r\n      through to you, so programs like SpamKiller can cause problems.\r\n    <p>\r\n      It is also important to read your email often while you are\r\n      using Emulab, especially while you have machines reserved in \r\n      an experiment. A few emails may be the only notification you\'ll\r\n      get before we swap out an experiment that appears to be idle,\r\n      and if you don\'t respond, you may lose important work. Email is\r\n      also our method for informing you about problems we may be\r\n      experiencing, downtimes, or other important announcements. Your\r\n      experience with Emulab (and ours with you) will be much more\r\n      pleasant if everyone is responsive to email.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(9,'stoller',282,'2005-08-16 13:15:09','Getting Started','I have an Emulab account. Now what?','    <p>\r\n    Once you have been approved to start (or join) your first project,\r\n    you will be able to log into Emulab\'s user machine,\r\n    <b>users.emulab.net</b>. We require that all Emulab users use ssh. For\r\n    example, if your Emulab account name is \"joe\", then you would do:\r\n    <pre>\r\n	ssh users.emulab.net -l joe		</pre>\r\n    </p>\r\n    <p>\r\n    Your password is the same as the password you supplied to the\r\n    Start (or Join) Project web page.\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(10,'stoller',282,'2005-08-16 13:17:35','Getting Started','Can I be in more than one project?','    <p>\r\n    Yes. You may join (and/or start) as many projects as you like,\r\n    subject to Emulab <a href=\"docwrapper.php3?docname=policies.html\">\r\n    administrative policies</a>.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(11,'stoller',282,'2005-08-16 13:18:51','Getting Started','Can I change my Emulab password?','    <p>\r\n    Yes. You can change your Emulab Web password and your Emulab login\r\n    password (the password you use to log into <b>users.emulab.net</b>, as\r\n    well as nodes in your experiments). To change your password,\r\n    simply click on the \"Update User Information\" in the menu to your\r\n    left, and then enter your new password in the location provided.\r\n    Your new password will be installed on <b>users.emulab.net</b>\r\n    immediately. Your experimental nodes will get the new password\r\n    when they reboot.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(12,'stoller',282,'2005-08-16 13:19:34','Getting Started','I\'m a project leader. Can I designate TAs?','    Yes. To designate a TA, you must first create a project\r\n    <em>group</em>. A project group is a lot like a unix group, and\r\n    in fact unix groups is the mechanism used to protect members of\r\n    one group from members of another group. When you create a group,\r\n    you designate a <em>group leader</em> who is responsible for\r\n    approving users who apply to join the group. Group leaders may\r\n    also terminate experiments that have been created by members of\r\n    the group. As Project Leader, you may also shift members of your\r\n    project in and out of your project\'s groups as you like, and you\r\n    are automatically a member of all groups within your project. As a\r\n    convenience, all new projects are created with one new group,\r\n    termed the <em>default group</em>. As its name implies, whenever\r\n    the group is left unspecified in a form, it defaults to the\r\n    project group (this allows you to create a project without any sub\r\n    groups at all; new members join the default group, new experiments\r\n    are created in the default group, etc.).\r\n    </p>\r\n\r\n    <p>\r\n    Project groups are created via the Project Information link at\r\n    your left. Simply go to the project page in which you want to\r\n    create a group, and look for the \"Create New Group\" link. More\r\n    information on project groups is available via the <a\r\n    href=\"doc.php3\">Emulab Documentation</a> page in the\r\n    <a href=\"docwrapper.php3?docname=groups.html\">Groups Tutorial</a>.\r\n    </p>\r\n',NULL,1,'2005-08-16 13:19:46','stoller',282,0,NULL,NULL,0),(13,'stoller',282,'2005-08-16 13:21:17','Getting Started','How do I report a specific problem?','    <p>\r\n    Don\'t hesitate to send us <a href=\"emailus.php3\">email</a>!\r\n    <p>\r\n    Ok, hesitate just a little and read the rest of this entry first.\r\n    Before sending email, be sure to check out the\r\n    <a href=\"kb-show.php3?xref_tag=troubleshooting\">Troubleshooting</a>\r\n    entry which describes several common problems and possible causes.\r\n    If you do send email, there are several pieces of information you\r\n    should include to make our job easier.\r\n    <ul>\r\n    <li> The affected <b>project and experiment name</b> is pretty obvious,\r\n    but some people forget.\r\n    <li> The particular <b>nodes, OSes, and programs</b>\r\n    involved will help us zero in on the problem more quickly.\r\n    <li> The <b>time</b> at which the problem occurred.\r\n    We need this to correlate with our various log files.\r\n    <li> Any <b>relevant observations and actions</b> you have attempted.\r\n    Did the problem only happen once?  Is it reproducible?  Did restarting\r\n    a program or rebooting a node help?\r\n    </ul>\r\n    After sending email,\r\n    <em>please do not swap or terminate the experiment</em>, if possible.\r\n    It can be a lot harder to track down a problem after the experiment\r\n    is gone.  Sometime you may need to terminate it, for example it is\r\n    in the middle of the night our time and you really need the nodes\r\n    that are tied up in the experiment.  But at least give us 15 minutes\r\n    to respond to your message before acting, and then let us know that\r\n    you did swap/terminate it.\r\n    </p>\r\n','problem-reporting',1,'2005-08-16 13:26:07','stoller',282,0,NULL,NULL,0),(14,'stoller',282,'2005-08-16 13:30:54','Troubleshooting','My experiment setup failed, what did I do wrong?','    <p>\r\n    Experiments can fail in many, many ways, but before you send the above\r\n    vague question off to us, consider a couple of things.\r\n    First, look carefully at the \"experiment failed\"\r\n    e-mail that you received.  It includes a log of the setup process which,\r\n    while not a model of clarity, often contains an obvious indication of what\r\n    happened.\r\n    <p>\r\n    One potential point of failure is the mapping phase where Emulab\r\n    attempts to map your topology to the available resources.  Look\r\n    in the log for where it runs <code>assign</code>.  Common errors\r\n    here include:\r\n    <ul>\r\n    <li> Your topology that requires more physical nodes than\r\n    are currently available.  There should be a message of the form:\r\n    <pre>\r\n    *** NN nodes of type XX requested, but only MM found\r\n    </pre>\r\n    in the log.  You should always check the free node count on the left\r\n    menu before trying an experiment swapin.  Keep in mind that shaped\r\n    links might require additional traffic-shaping nodes above and beyond\r\n    nodes that are explicit in your topology.\r\n    <p>\r\n    <li> Your topology requires too many links on one node.\r\n    Currently you can have no more than four links per node unless\r\n    you use\r\n    <a href=/doc/docwrapper.php3?docname=linkdelays.html#EMULINKS>\r\n    multiplexed links</a>.\r\n    </ul>\r\n    <p>\r\n    If the setup log shows <code>assign</code> failing repeatedly and\r\n    eventually giving up, \r\n    <a href=\"kb-show.php3?xref_tag=problem-reporting\">contact us</a>.\r\n    <p>\r\n    The next potential failure point is the setup of the physical\r\n    nodes.  If you are explicitly setting the OS image to use with\r\n    <code>tb-set-node-os</code>, then make sure you have specified\r\n    a valid image (e.g., did you spell the OS identifier correctly?)\r\n    Again, the log output should include an error if the OSID was\r\n    invalid.\r\n    <p>\r\n    Click <a href=\"https://www.emulab.net/showosid_list.php3\">List ImageIDs and\r\n    OSIDs</a> in the Emulab web interface \"Interaction\" pane to see the\r\n    current list of Emulab-supplied OSs.\r\n    <p>\r\n    If the OSID is correct, but the log contains messages of the form:\r\n    <pre>\r\n    *** Giving up on pcXXX - it\'s been NN minute(s).\r\n    *** WARNING: pcXXX may be down.\r\n    This has been reported to testbed-ops.\r\n    </pre>\r\n    then a node failed to reach the point where it would report a successful\r\n    setup to Emulab.\r\n    <p>\r\n    Near the end of the experiment setup, Emulab\'s event system can fail to\r\n    startup with a message like this:\r\n    <pre>\r\n      Starting the event system.\r\n      *** ~/.ssh/identity is not a passphrase-less key\r\n          You will need to regenerate the key manually\r\n      *** /usr/testbed/devel/stack/sbin/eventsys.proxy:\r\n          Failed to start event system for foo/bar\r\n    </pre>\r\n    Or, like this:\r\n    <pre>\r\n      Starting the event system.\r\n      Permission denied, please try again.\r\n      Permission denied, please try again.\r\n      Permission denied.\r\n      *** /usr/testbed/devel/stack/sbin/eventsys.proxy:\r\n          Failed to start event system for foo/bar </pre>\r\n    This failure occurs because you have manually changed your default SSH\r\n    identity (~/.ssh/identity) or edited your authorized_keys file in your\r\n    Emulab home directory without going through the \"Edit SSH Keys\" web form on\r\n    your user page.  The easiest way to fix this is to make sure the passphrase\r\n    is empty using ssh-keygen(1) on the user\'s machine:\r\n    <pre>\r\n      users$ ssh-keygen -p -P \"<old-passphrase>\" -N \"\" -f ~/.ssh/identity\r\n    </pre>\r\n    Then, make sure the corresponding public key in your Emulab home directory\r\n    (\"~/.ssh/identity.pub\") is listed in the \"Edit SSH Keys\" form.\r\n    <p>\r\n    Such failures can be caused by many things.  Sometimes\r\n    a transient load on an Emulab server can push a node over its\r\n    timeout, though this is happening less and less as we\r\n    improve our infrastructure.  Most often, these failures are caused\r\n    by the use of custom images which either do not boot or do not\r\n    self-configure properly.  These are harder to dianose because you\r\n    often need access to the console logs to see what happened,\r\n    and these logs aren\'t available after an experiment fails.\r\n    However, it is possible to interactively monitor\r\n    the console while the experiment is setting up since console access\r\n    is granted early in setup process.  You can either use the\r\n    <code>console</code> command on users, use the\r\n    <a href=\"#UTT-TUNNEL\">tiptunnel</a> client application,\r\n    or just run \"tail -f\" on the <code>/var/log/tiplogs/pcXXX.run</code>\r\n    file.\r\n    </p>\r\n','troubleshooting',1,'2005-08-16 13:46:10','stoller',282,0,NULL,NULL,0),(15,'stoller',282,'2005-08-16 13:47:30','Getting Started','Where do I get more help?','    <p>\r\n    If you cannot find an answer to your question in the\r\n    <a href=\"doc.php3\">Emulab Documentation</a>, then you can\r\n    send us an <a href=\"emailus.php3\">email message</a>. We will try\r\n    to answer your question as quickly as we can.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(16,'stoller',282,'2005-08-16 13:48:22','Using the Testbed','Is there a tutorial?','    <p>\r\n    Yes, we have an extensive <a href=\"tutorial/tutorial.php3\">tutorial</a>\r\n    on using the Testbed.\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(17,'stoller',282,'2005-08-16 13:49:09','Using the Testbed','Do you have a GUI to help me create experiments?','    <p>\r\n    Yes, we provide a GUI that gives you an easy to use drawing\r\n    palette on which you can place nodes, lans, and links. Testbed\r\n    specific attributes such as operating system, hardware type, and\r\n    link/lan characteristics, may be attached to each object. With a\r\n    single click, you can instantiate your new topology on the Testbed\r\n    as an experiment in one of your projects. Alternatively, you can\r\n    save the auto-generated NS file on your machine, edit as required,\r\n    and then submit it later when creating an experiment.\r\n    </p>\r\n    \r\n    <p>\r\n    To access the GUI, please log in and go to the Begin Experiment page.\r\n    <em>Note: you need a Java compliant browser.</em>\r\n    </p>\r\n','netbuild',1,'2005-08-17 13:57:50','stoller',282,0,NULL,NULL,0),(18,'stoller',282,'2005-08-16 13:49:48','Using the Testbed','Are there any constraints on my topology?','   <p>\r\n    Yes, but only those imposed by the physical hardware that is\r\n    currently available in our testbed. The constraints that people\r\n    most commonly run into are the maximum speed of our links\r\n    (100Mbps) and the maximum number of network interface cards (NICs)\r\n    in our machines. You can\'t get any links faster than 100Mbps,\r\n    since we don\'t yet have gigabit links for experimenters to\r\n    use. Our nodes each have 4 experimental network interfaces, so\r\n    each node can be a member of up to 4 links or LANs. A good\r\n    strategy for making your topology fit within those limits is to\r\n    replace multiple links to a node with a LAN or with a router\r\n    node. \r\n    </p>\r\n    <p>\r\n    Another approach is to use\r\n    <a href=doc/docwrapper.php3?docname=linkdelays.html#EMULINKS>\r\n    <em>emulated</em> network links.</a> Emulated links are multiplexed\r\n    over the actual physical links, up to the physical bandwidth that\r\n    the physical link can support. In other words, five 20Mb links can\r\n    be multiplexed over a 100Mb physical link. More information on\r\n    emulated links can be found <a\r\n    href=doc/docwrapper.php3?docname=linkdelays.html>here.</a> Ask\r\n    Testbed Operations if you need further assistance.\r\n    </p>\r\n\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(19,'stoller',282,'2005-08-16 13:50:22','Using the Testbed','How many nodes can I ask for?','    <p>\r\n    You can ask for as many nodes as are currently available! You can\r\n    click on the \"Node Reservation Status\" link at your left to see\r\n    how many nodes are currently free. If you ask for more than are\r\n    currently available, your experiment will be rejected (you\r\n    will receive email notification shortly after you submit your NS\r\n    file to the web interface).\r\n    </p>\r\n\r\n    <p>\r\n    <em>We urge all new Emulab users to begin with a small 3-4 node\r\n    experiment so that you will become familiar with NS syntax and the\r\n    practical aspects of Emulab operation.</em>\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(20,'stoller',282,'2005-08-16 13:52:08','Using the Testbed','How long can I keep using my nodes?','    <p>\r\n    You can keep them as long as you need them, subject to our <a\r\n    href=\"docwrapper.php3?docname=swapping.html\">Node Usage\r\n    Policies</a>.  In general, you should do your work, and then\r\n    terminate your experiment as soon as you\'re done with it. If\r\n    you\'re not done with it, but are through for a while, you should\r\n    probably \"swap out\" your experiment (See the question <a\r\n    href=\"kb-show.php3?xref_tag=swapping\">What is Swapping</a> in this FAQ). It is\r\n    especially important to swap out your experiment if you\'re through\r\n    with it for the weekend. Emulab usually gets heavy use on the\r\n    weekends by users who need to make very large experiments, so it\r\n    is important to leave as many nodes available as possible.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(21,'stoller',282,'2005-08-16 13:53:39','Using the Testbed','I only need a couple of nodes but none are free, should I just keep trying?','    <p>\r\n    It is better for you and us if you don\'t just keep hitting the\r\n    submit button every few minutes.  It wastes your time and floods\r\n    us with email (we get every failure message you do!)\r\n    Instead, you can now use the\r\n    <a href=\"tutorial/tutorial.php3#BatchMode\">Batch System</a>\r\n    to queue an interactive job.  By submitting your experiment as\r\n    a batch job, but without any\r\n    <a href=\"tutorial/tutorial.php3#Startupcmd\"><tt>tb-set-node-startcmd</tt></a>\r\n    directives in your NS file, the job will be queued until nodes are\r\n    available.  For most experiments, this means just using your regular\r\n    NS file, and checking the Batch Mode Experiment box when you create\r\n    the experiment.\r\n    </p><p>\r\n    When your queued job is swapped in, you will be sent email to\r\n    inform you, and you can start working!\r\n    <b>Please note</b> that the\r\n    experiment will be idle when it is swapped in, and will be\r\n    <a href=\"swapping.html#idleswap\">idle swapped</a> if you do not\r\n    get things running on the nodes in a short period of time.  If your\r\n    experiment does get swapped out before you can get to it, you can\r\n    always visit the experiment\'s information page and try again by\r\n    using the Queue Batch Experiment menu item.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(22,'stoller',282,'2005-08-16 13:54:19','Using the Testbed','What if I need more nodes than are free?','    <p>\r\n    For example, say you need 50 nodes but there are only 40 free. In\r\n    general, getting this many nodes is going to require intervention\r\n    from Testbed Operations, if only so we can ask other experimenters\r\n    to free up nodes, if possible. Please send us email if you are not\r\n    able to able to get the number of nodes you need for your experiment.\r\n    </p>\r\n\r\n    <p>\r\n    Another alternative is to use the\r\n    <a href=\"tutorial/tutorial.php3#BatchMode\">Batch System.</a> \r\n    If your experiment is amenable to being batched (does not require\r\n    human intervention to start and stop), then you can submit a batch\r\n    request, which will be serviced when enough nodes become\r\n    available.  Typically, you would start out with a few nodes,\r\n    getting used to the batch system and creating whatever scripts are\r\n    needed to make the experiment batchable. Then scale up to larger\r\n    numbers of nodes. Thats the easiest way of getting a lot of nodes!\r\n    </p>    \r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(23,'stoller',282,'2005-08-16 13:56:33','Using the Testbed','Do I get root access on my nodes?','    <p>\r\n    Yes. Project leaders get root access to all of the nodes in all of\r\n    the experiments that are running in their project. Project members\r\n    get root if their project leader grants them root access, when the\r\n    leader approves the group <a href=\"kb-show.php3?xref_tag=start-project\">membership request</a>.\r\n    Root privileges are granted via the <code>sudo</code> command. The\r\n    <a href=\"tutorial/tutorial.php3#RootAccess\">tutorial</a> describes\r\n    this in more detail.\r\n    </p>\r\n','root-access',1,'2005-08-16 14:45:45','stoller',282,0,NULL,NULL,0),(24,'stoller',282,'2005-08-16 13:58:57','Using the Testbed','Do my nodes have consoles I can look at?','    <p>\r\n    Yes. Each of the PCs has its own serial console line with which you can\r\n    interact, either directly from your desktop \r\n    (see <a href=\"kb-show.php3?xref_tag=tiptunnel\">tiptunnel</a> entry),\r\n    or by hopping through the \"users\" machine,\r\n    using our <tt>console</tt> program located in \'/usr/testbed/bin\'.\r\n    To connect over serial line to\r\n    \"pc1\" in your experiment, ssh into <b>users.emulab.net</b>, and\r\n    then type <tt>console pc1</tt> at the Unix prompt. You may then\r\n    interact with the serial console (hit \"enter\" to elicit output from\r\n    the target machine).\r\n    </p>\r\n    <p>\r\n    To exit the console program, type <tt>Ctrl-]</tt>; its just a\r\n    telnet session. \r\n    </p>\r\n    <p>\r\n    In any case, all console output from each node is saved\r\n    so that you may look at it it later. For each node,\r\n    the console log is stored as <tt>/var/log/tiplogs/pcXXX.run</tt>.\r\n    This <em>run</em> file is created when nodes are first allocated\r\n    to an experiment, and the Unix permissions of the run files permit\r\n    only members of the project to view them. When the nodes are\r\n    deallocated, the run files are cleared, so if you want to save\r\n    them, you must do so before terminating the experiment. \r\n    </p>\r\n    <p>\r\n    In addition, you can view the console logs from the web interface,\r\n    on the Show Experiment page. Of course, you may not interact with\r\n    the console, but you can at least view the current log.\r\n    </p>\r\n    ','node-consoles',1,'2005-11-01 11:05:31','stack',424,0,NULL,NULL,0),(25,'stoller',282,'2005-08-16 14:00:05','Using the Testbed','How do I connect directly to node consoles, without going through <b>users</b>?','    <p>\r\n    Clicking \"Connect to Serial Line\"\r\n    in the Node Options page will send your browser a \"text/x-testbed-acl\"\r\n    \".tbacl\" file. \r\n    In windows, if you have installed <code>tiptunnel</code>, available\r\n    below, you can save this file in a folder and double-click it\r\n    to launch a tunneled connection to your node.\r\n    In FreeBSD or Linux, you can save the file and pass it as an argument\r\n    to <code>tiptunnel</code>, or associate it with\r\n    <code>tiptunnel</code> in your web browser.\r\n    Upon connection you typically first have to hit \"enter\" to\r\n    elicit output from the target machine.\r\n\r\n<!--\r\n    If you have downloaded <code>tiptunnel</code> and set it as the \r\n    handler for that MIME type, <code>tiptunnel</code> will launch a new \r\n    telnet running in a new xterm (this may take a few seconds.) \r\n    That telnet will be connected to a local port, \r\n    which is tunneled through SSL to your node\'s console. \r\n    Closing the xterm, exiting telnet, or killing <code>tiptunnel</code>\r\n    itself will end the connection. -->\r\n    \r\n    </p>\r\n    <ul>\r\n    <li>\r\n    You can download the <code>tiptunnel</code>\r\n    <a href=\"downloads/tiptunnel-win32.exe\">installer for Windows here</a>.\r\n    </li>\r\n    <li>\r\n    You can download the <code>tiptunnel</code> statically-linked x86\r\n    <a href=\"downloads/tiptunnel-freebsd.tar.gz\">binary for FreeBSD here</a>.\r\n    </li>\r\n    <li>\r\n    You can download the <code>tiptunnel</code> statically-linked x86\r\n    binary for Linux in two versions:\r\n    <a href=\"downloads/tiptunnel-fc4.tar.gz\">Fedora Core 4</a> or\r\n    <a href=\"downloads/tiptunnel-rhl90.tar.gz\">Redhat Linux 9.0</a>.\r\n    </li>\r\n    <li>\r\n    A source distribution will be available soon.\r\n    </li>\r\n    </ul>\r\n\r\n    <font size=\'+1\'><b>Instructions for Windows:</b></font>\r\n    <ul>\r\n      <li>Run the installer executable, and successfully complete the installation.</li>\r\n      <li>In the Web Interface Node view, \r\n          click on the \"Connect to serial line\" link.</li>\r\n      <li><b>Save</b> the resulting .tbacl file in an appropriate place.\r\n          (for instance a folder off the desktop.)</li>\r\n      <li>For the lifetime of your experiment, you can simply double-click\r\n          these .tbacl files to connect.</li>\r\n    </ul> \r\n\r\n    <font size=\'+1\'><b>Instructions for Linux/FreeBSD:</b></font>\r\n    <ul>\r\n    <li>Use <code>gunzip</code>, \r\n    then <code>tar xvf</code> on the downloaded file.</li>\r\n    <li>Move the resulting <code>tiptunnel</code> binary into \r\n    a directory of your choice (<code>/usr/local/bin</code>, \r\n    or <code>~/bin</code> are two good places.)</li>\r\n    <li>Set up your browser to handle MIME type \"text/x-testbed-acl\"\r\n    as outlined below.</li>\r\n    <li>In the Web Interface Node view, \r\n        click on the \"Connect to serial line\" link.</li>\r\n    <li>If your browser is properly configured to use <code>tiptunnel</code>,\r\n        a new xterm window with a telnet session open to your node\r\n        should emerge.</li>\r\n    <li>(Alternately, you can tell your browser to save \"text/x-testbed-acl\"\r\n        files in a directory and you can run them with \r\n	<code>tiptunnel</code> directly;\r\n        this may be more convenient than using the \r\n	web interface every time you wish\r\n        to connect to a node in your experiment.\r\n        Note that these files are valid for the \r\n	lifetime of your experiment.)</li>\r\n    </ul>\r\n\r\n    <font size=\'+1\'><b>Linux/FreeBSD and Netscape 4.7:</b></font>\r\n    <ul>\r\n    <li>Choose <code>preferences</code> from the <code>edit</code> menu.</li>\r\n    <li>Select <code>Navigator</code>, then <code>Applications</code> under\r\n        it.</li>\r\n    <li>Click the <code>New...</code> button.</li>\r\n    <li>In the <code>MIMEType</code> box, type <code>text/x-testbed-acl</code>\r\n    </li>\r\n    <li>In the <code>Suffixes</code> box, type <code>tbacl</code></li>\r\n    <li>Choose <code>Application</code> in the <code>Handled by</code>\r\n        box</li>\r\n    <li>Next to <code>Application</code>, either type the path to the\r\n        <code>tiptunnel</code> binary, or use <code>Choose...</code> to find\r\n        it.</li>\r\n    <li>Now, <b>be sure to</b> put a space, then <code>%s</code> after the\r\n        path to the application in the box. This tells netscape to actually\r\n        pass the aclfile into tiptunnel (Mozilla does not require this;\r\n        see below.)</li>\r\n    <li>Click <code>OK</code>, then <code>OK</code> again.</li>\r\n    <li>Clicking a \"connect to serial line\" link should now\r\n        bring up a connection in an xterm window.</li>\r\n    </ul> \r\n\r\n    <font size=\'+1\'><b>Linux/FreeBSD and Mozilla:</b></font>\r\n    <ul>\r\n    <li>Choose <code>preferences</code> from the <code>edit</code> menu.</li>\r\n    <li>Select <code>Navigator</code>, then <code>Helper Applications</code> \r\n        under it.</li>\r\n    <li>Click the <code>New Type...</code> button.</li>\r\n    <li>In the <code>MIMEType</code> box, \r\n    type <code>text/x-testbed-acl</code></li>\r\n    <li>In the <code>File extension</code> box, type <code>tbacl</code></li>\r\n    <li>For <code>Application to use</code>, either type the path to the\r\n        <code>tiptunnel</code> binary, or use <code>Choose...</code> to find\r\n	it.</li>\r\n    <li>In Mozilla do <b>not</b> add a <code>%s</code>.</li>\r\n    <li>Click <code>OK</code>, then <code>OK</code> again.</li>\r\n    <li>Clicking a \"connect to serial line\" link should now\r\n        bring up a connection in an xterm window.</li>\r\n    </ul> \r\n    </p>\r\n\r\n','tiptunnel',1,'2005-10-31 15:10:37','stack',424,0,NULL,NULL,0),(26,'stoller',282,'2005-08-16 14:01:24','Using the Testbed','Can I reboot (power cycle) my nodes?','    <p>\r\n    Yes. Each of the PCs is independently power controlled. If your\r\n    node hangs, or is otherwise unresponsive, you can use the\r\n    <tt>node_reboot</tt> command, as discussed in the\r\n    <a href=\"tutorial/tutorial.php3#Wedged\">Emulab Tutorial.</a>\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(27,'stoller',282,'2005-08-16 14:01:43','Using the Testbed','I\'ve clobbered my disk! Now what?','    <p>\r\n    If you manage to corrupt a disk (or slice), no worries. You can easily\r\n    repair the damage yourself by reloading a fresh copy of the default\r\n    disk image. You will of course lose anything you have stored on that\r\n    disk; it is a good idea to store only data that can be easily recreated, \r\n    or else store it in your project directory in <tt>/proj</tt>. Disk\r\n    reloading is covered in more detail in the\r\n    <a href=\"tutorial/tutorial.php3#Scrogged\">Emulab Tutorial</a>.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(28,'stoller',282,'2005-08-16 14:02:23','Using the Testbed','Where do I store files needed by my experiment?','    <p>\r\n    Each project has its own directory, rooted at <tt>/proj</tt>,\r\n    which is available via NFS to all of the nodes in experiments\r\n    running in that project. For example, when the \"RON\" project was\r\n    created, a directory called <tt>/proj/RON</tt> was also created. This\r\n    directory is owned by the project creator, and is in the unix\r\n    group \"RON.\" Its permission (mode) is 770; read/write/execute\r\n    permitted by the project creator and by all of the members of the\r\n    project RON, but protected against all access by people outside\r\n    the RON project.\r\n    </p>\r\n    <p>\r\n    Sub-groups within a project likewise have a directory in the\r\n    <tt>/groups</tt> tree. A group named \"group1\" in the RON project\r\n    would thus have a group directory in <tt>/groups/RON/group1</tt>.\r\n    </p>\r\n    <p>\r\n    Project members are encouraged to store any files needed by their\r\n    experiments in the corresponding /proj or /groups directory.\r\n  ','file-storage',1,'2005-08-17 13:18:37','stoller',282,0,NULL,NULL,0),(29,'stoller',282,'2005-08-16 14:03:01','Using the Testbed','Are my files on <b>users</b> backed up (filesaved)?','    <p>\r\n    Yes. All of the files in your home directory on /users, all of\r\n    the files in your project directory in /proj, and all of the files\r\n    in your groups directory in /groups are filesaved. While\r\n    we can restore lost files in an emergency, we encourage you to\r\n    back up critical data on your own to avoid (possibly long) delays\r\n    in conducting your experiments.\r\n    </p>\r\n ',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(30,'stoller',282,'2005-08-16 14:03:54','Using the Testbed','Are the nodes in my experiment backed up (filesaved)?','    <p>\r\n    No! The nodes in your experiment are not filesaved. Any changes\r\n    you make to the local filesystems will be lost if the event of a\r\n    disk failure. We plan to provide a mechanism for experimenters to\r\n    create snapshots of their node state, but that is not done yet. In\r\n    the meantime, any files that must not be lost should be stored in\r\n    the project directory (/proj/<project_name>), which is available\r\n    via NFS to all of the nodes in your experiment. You may also store\r\n    files in your home directory (/users/<login>), also available via\r\n    NFS to all of your nodes, but that is not the preferred location\r\n    since quotas on /users are relatively small.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(31,'stoller',282,'2005-08-16 14:05:41','Using the Testbed','What is Swapping?','    <p>\r\n    Swapping is when you (or we, or the Emulab system) temporarily swaps\r\n    out your experiment,\r\n    releasing all of the nodes in the experiment. Your experiment is\r\n    still resident in the Emulab database, and you can see its status\r\n    in the web interface, but no nodes are allocated. Once an\r\n    experiment is swapped out, you can swap it back in via the web\r\n    interface by going to the Experiment Information page for your\r\n    experiment, and clicking on the swapin option. \r\n    You can also <a href=\"kb-show.php3?xref_tag=swapmod\">modify it</a>.\r\n    </p>\r\n\r\n    <p>\r\n    The <tt>idle-swap</tt> checkbox in the Begin Experiment web page\r\n    is used to determine what experiments can be <em>automatically</em>\r\n    swapped by the testbed scheduling system. Note that all experiments are\r\n    capable of being swapped; even if you do not check the idle-swap box,\r\n    you are free to swap your own experiments as you like. The only\r\n    difference is that the testbed scheduling system will not consider your\r\n    experiment when looking for experiments to swap out. You will sometimes\r\n    notice that the Experiment Information page does not contain the swap\r\n    link. That is because experiments cannot be swapped when they are in\r\n    transition. For example, when the experiment is being swapped in (say,\r\n    after first being created) the link will disappear until the experiment\r\n    is fully swapped in, and it is capable of being swapped out. You will\r\n    need to occasionally reload the page so that the updated state is\r\n    recognized and the swap link appears. \r\n    </p>\r\n    \r\n    <p>\r\n    Be aware that we do not currently save any files that you may have\r\n    placed on your nodes. When your experiment is swapped back in, you\r\n    will likely get different nodes, with fresh copies of the disk\r\n    images. For that reason, you should not swap your experiment out\r\n    unless you make arrangements to save and restore any state you need.\r\n    </p>\r\n\r\n    <p>\r\n    <em>Please be sure to read our \r\n    <a href=\"docwrapper.php3?docname=swapping.html\"> Node Usage Policies</a></em>,\r\n    which contain detailed information on swapping.\r\n    </p>\r\n\r\n','swapping',1,NULL,NULL,0,0,NULL,NULL,0),(32,'stoller',282,'2005-08-16 14:08:52','Using the Testbed','How can I get switch statistics (such as packet counts) for my experiment?','    <p>\r\n    We have a command called <code>portstats</code> that allows you access\r\n    to some of the port counters on our switches. To use it, you\'ll need\r\n    to ssh to <b>users.emulab.net</b>. \'<code>portstats &lt;proj&gt; \r\n    &lt;exp&gt;</code>\' will get you stats for all experimental interfaces in\r\n    your experiment. Run \'<code>portstats -h</code>\' to get a list of other\r\n    options, such as different sets of stats.\r\n    </p>\r\n\r\n    <p>\r\n    Note that the numbers returned by <code>portstats</code> do not get\r\n    reset between experiments.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(33,'stoller',282,'2005-08-16 14:10:07','Using the Testbed','What names should I use to refer to the nodes in my experiment?','    <p>We set up names for your nodes in DNS, for use from outside,\r\n    and <code>/etc/hosts</code> files for use on the nodes in the experiment.\r\n    Since our nodes have multiple interfaces (the control network, and,\r\n    depending on the experiment, possibly several experimental interfaces,)\r\n    determining which name refers to which interface can be somewhat\r\n    confusing. The rules below should help you figure this out.\r\n    </p>\r\n\r\n    <ul>\r\n	<li><b>From the outside world</b> - \r\n	We set up names in the form\r\n	<code><i>node</i>.<i>expt</i>.<i>proj</i>.emulab.net</code> in DNS,\r\n	so that they visible anywhere on the Internet. This name always refers\r\n	to the node\'s control network interface, which is the only one\r\n	reachable from the outside world.\r\n	</li>\r\n\r\n	<li><b>On the nodes themselves</b> -\r\n	There are three basic ways to refer to the interfaces of a node. The\r\n	first is stored in DNS, and the second two are stored on the node in\r\n	the <code>/etc/hosts</code> file.\r\n	<ol>\r\n	    <li><i>Fully-qualified hostnames</i> - These names are the same ones\r\n	    visible from the outside world, and referred to by attaching the\r\n	    full domain name: ie.\r\n	    <code><i>node</i>.<i>expt</i>.<i>proj</i>.emulab.net</code>. (note\r\n	    that, since we put <code>.emulab.net</code> in nodes\' domain\r\n	    search paths, you can use\r\n	    <code><i>node</i>.<i>expt</i>.<i>proj</i></code> as a shorthand.)\r\n	    This name always refers to the control network\r\n	    </li>\r\n\r\n	    <li><i><code>node-link</code> form</i> - You can refer to an\r\n	    individual experimental interface by suffixing it with the name of\r\n	    the link or LAN (as defined in your NS file) that it is a member\r\n	    of. For example, <code>nodeA-link0</code> or\r\n	    <code>server-serverLAN</code>. This is the preferred way to refer\r\n	    to experimental interfaces, since it uniquely and unambiguously\r\n	    identifies an interface.\r\n	    </li>\r\n\r\n	    <li><i>Short form</i> - If a node is directly connected to the\r\n	    node you\'re on, you can refer to that node simply with its name\r\n	    (eg. <code>nodeA</code>.) Note that this differs from the fully-\r\n	    qualified name in that no domain is given. We also create short\r\n	    names for nodes you are not directly connected to.\r\n	    However, if two nodes are\r\n	    connected with more than one interface, or there is more than\r\n	    one route between them, there is no guarantee that the short name\r\n	    has been associated with the one is on the \'best\' (ie. shortest or\r\n	    highest bandwidth) path - so, if there is ambiguity, we strongly\r\n	    suggest that you use the <code><i>node-link</i></code> form.\r\n	    </li>\r\n	</li>\r\n    </ul>\r\n\r\n    <b>NOTE:</b> It\'s a bad idea to pick virtual node names in your topology\r\n    that clash with the physical node names in the testbed, like \"pc45\".\r\n\r\n','node-naming',1,'2006-06-29 18:03:44','fish',30775,0,NULL,NULL,0),(34,'stoller',282,'2005-08-16 14:11:29','Using the Testbed','Can I modify my experiment after creating it?','    <p>Yes. On the experiment view page, choose \"Modify this Experiment\".\r\n       This will allow you to modify an experiment, either swapped-out or in,\r\n       by editing its NS file. This is also know as <em>swapmod</em> in other sections of the Emulab documentation.</p>\r\n    <p>If the experiment is swapped-out, \r\n       Experiment Modify will simply replace its topology with the\r\n       newly specified one;\r\n       this new topology will be mapped when the experiment is swapped in.</p>\r\n    <p>If the experiment is already swapped-in, Modify will change the topology\r\n       and map in the portions which have been changed. This allows dynamic\r\n       addition, subtraction, and replacement of an experiment\'s nodes and links.\r\n       However, when modifying swapped-in experiments, there are a couple\r\n       things to keep in mind:\r\n       <ul>\r\n         <li>Any node with the same name in the old and new topology will remain\r\n	 on the same physical machine, unaffected-- its disk will not be reloaded.\r\n	 If you want to, for example, change the hardware on a machine, you will\r\n	 have to call the machine something different in the new topology.\r\n	 </li>\r\n	 <br>\r\n	 <li>\r\n	 It is highly recommended that you leave the\r\n	 \"Reboot nodes in experiment\" box checked in the Experiment Modify form.\r\n	 This is especially important if changing your experiment topology \r\n         (adding or removing nodes, links, and LANs).\r\n	 If adding/removing a delay to/from an existing link, or replacing \r\n	 a lost node <i>without modifying the experiment topology</i>,\r\n	 this won\'t be necessary.\r\n	 </li>\r\n	 <li>\r\n	 The event system is not automatically restarted for your\r\n	 experiment, so you will not be able to modify the traffic\r\n	 shaping for new links. In addition, if you add program\r\n	 agents or traffic generators, these will not activate unless\r\n	 you restart the event system by hand. Unfortunately, all\r\n	 events will be replayed, so be careful: On\r\n	 <tt>users.emulab.net</tt>, you may do the following:\r\n	     <blockquote>\r\n	     	<code>\r\n	        eventsys_control [-f] replay proj expt\r\n		</code>\r\n	     </blockquote>\r\n	 </li>\r\n       </ul>\r\n    </p>\r\n\r\n','swapmod',1,'2007-06-12 12:28:30','stoller',282,0,NULL,NULL,0),(35,'stoller',282,'2005-08-16 14:12:55','Using the Testbed','Are there Linux and/or FreeBSD sources and packages available locally?','    <p>\r\n    Yes.  We provide sources and packages for a few versions of\r\n    FreeBSD and RedHat / Fedora Core Linux.  The place to look for available\r\n    software is under <b>/share</b> on either <b>users.emulab.net</b>\r\n    or your experimental nodes.  This path is readonly (and NFS\r\n    mounted on the nodes), so you\'ll need to make a copy of the\r\n    contents found there if you need to do more than reference them\r\n    for information or installation.\r\n    </p>\r\n\r\n    <ul>\r\n        <li><b>FreeBSD Paths:</b>\r\n        The FreeBSD kernel, and userland sources are available under\r\n        <b>/share/freebsd</b>.  Look there to see if the version you are\r\n        seeking is available.  You can also find Emulab additions and\r\n        modifications to FreeBSD here.  Emulab kernel configurations are\r\n        called TESTBED and located in <b>sys/i386/conf</b> relative to the\r\n        FreeBSD source trees.  The README file in this directory has more\r\n        information on the contents.\r\n        </li>\r\n\r\n        <br>\r\n        <li><b>Linux Paths:</b>\r\n        Linux kernel sources and RPMs for various versions of Redhat can\r\n        be found under <b>/share/redhat</b>.  Fedora core versions are\r\n        likewise located under <b>/share/fedora</b>. Look in these locations\r\n        to see if the\r\n        version you are seeking is available.  You can also find Emulab\r\n        additions and modifications to Linux here.  Emulab kernel\r\n        configurations are called <b>config-emulab</b> and exist in the\r\n        root of the kernel source trees.  There is a README file in each\r\n        of these directories that describes their contents in more\r\n        detail.\r\n        </li>\r\n        \r\n        <br>\r\n        <li><b>Other Software:</b>\r\n        We provide a few other generally useful software packages and\r\n        sources under <b>/share</b> as well.  Have a look around.\r\n        </li>\r\n\r\n        <br>\r\n        <li><b>Something Missing?</b> \r\n        If you think something should be added to <b>/share</b>, feel\r\n        free to send your suggestion(s) to us via \r\n        <a href=\"emailus.php3\">email</a>.  Note that we may retire some\r\n        offerings if we determine them to be of little value.\r\n        </li>\r\n    </ul>\r\n',NULL,1,'2006-01-26 23:21:59','kwebb',10109,0,NULL,NULL,0),(36,'stoller',282,'2005-08-16 14:14:52','Hardware Setup','What kind of computers are used for my nodes?','    Please see the <a href=\"docwrapper.php3?docname=hardware.html\">\r\n    Hardware Overview</a> page for a description and count of the\r\n    computers that comprise the Testbed.\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(37,'stoller',282,'2005-08-16 14:15:21','Hardware Setup','How many nodes are there?','    Please see the <a href=\"docwrapper.php3?docname=hardware.html\">\r\n    Hardware Overview</a> page for a description and count of the\r\n    computers that comprise the Testbed.\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(38,'stoller',282,'2005-08-16 14:15:53','Hardware Setup','How many ethernet cards are on each node?   ','    <p>\r\n    Please see the <a href=\"docwrapper.php3?docname=hardware.html\">\r\n    Hardware Overview</a> page for a description and count of the\r\n    computers that comprise the Testbed.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(39,'stoller',282,'2005-08-16 14:16:54','Hardware Setup','How do I ask for specific hardware?','    If you would like to ask for a specific type of hardware, such as a\r\n    <code>pc850</code>, see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html#HARD\">\r\n    <code>tb-set-hardware</code></a>\r\n    command in our <a href=\"tutorial/docwrapper.php3?docname=nscommands.html\">NS\r\n    extensions document</a>. You can also define classes of nodes which should\r\n    be given the same hardware using\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html#VTYPE\">virtual\r\n    type commands</a>.\r\n    </p>\r\n','tb-set-hardware',1,'2005-11-08 07:44:27','stoller',282,0,NULL,NULL,0),(40,'stoller',282,'2005-08-16 14:17:25','Hardware Setup','How many nodes are currently available (free)?','    <p>\r\n    If you click on the \"Node Reservation Status\" link in the menu to\r\n    your left, you will see a summary of the number of nodes (by type)\r\n    that are currently available, followed by a listing of the\r\n    reservation status of each individual node.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(41,'stoller',282,'2005-08-16 14:17:54','Hardware Setup','Can I do traffic shaping on my links?','    <p>\r\n    Yes! You can specify the delay, bandwidth, and packet loss rate\r\n    between any two nodes in your topology. Bandwidth and delay are\r\n    specified in the NS <tt>duplex-link</tt> statement, while packet\r\n    loss rate is specified with the Emulab <tt>tb-set-link-loss</tt>\r\n    extension to NS. You may also specify delay, bandwidth, and packet\r\n    loss rate between nodes in a regular LAN.\r\n    </p>\r\n    <p>\r\n    Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html\">Extensions</a>\r\n    page for a summary of all Emulab NS extensions, and the\r\n    <a href = \"tutorial/tutorial.php3\">Emulab Tutorial</a> for an\r\n    example. \r\n    </p>\r\n\r\n',NULL,1,'2005-08-16 14:18:14','stoller',282,0,NULL,NULL,0),(42,'stoller',282,'2005-08-16 14:19:01','Hardware Setup','Can I modify the traffic shaping parameters on my links?','    <p>\r\n    Yes! If your NS file specified traffic shaping on a link, then you\r\n    can subsequently modify those parameters after the experiment has\r\n    been swapped in. Note that you cannot <em>convert</em> a non shaped\r\n    link into a shaped link; you can only modify the traffic shaping\r\n    parameters of a link that is already being shaped.  To modify the\r\n    parameters, go to the Experiment Information page of your\r\n    experiment, and click on the \"Modify Traffic Shaping\" menu\r\n    option. Follow the instructions at the top of the page.\r\n    </p>\r\n    <p>\r\n    An alternative method is to log into <b>users.emulab.net</b> and use the\r\n    <tt>delay_config</tt> program. This program requires that you know\r\n    the symbolic names of the individual links. This information is\r\n    available via the web interface on the Experiment Information\r\n    page. The command line syntax for <tt>delay_config</tt> will be\r\n    displayed when the <tt>-h</tt> option is given.\r\n    </p>\r\n\r\n','modify-traffic-shaping',1,'2006-01-24 11:09:25','stack',424,0,NULL,NULL,0),(43,'stoller',282,'2005-08-16 14:20:36','Hardware Setup','Are there other traffic shaping parameters besides latency,bandwidth, and packet loss rate? ','    <p>\r\n    Yes! Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=advanced.html\">\r\n    advanced tutorial</a>. Note though, that these other parameters\r\n    can be specified for duplex links only (not lans), and that they\r\n    are not configurable with <tt>delay_config</tt>, but with a\r\n    different testbed utility call <tt>tevc</tt> (also described in\r\n    the advanced tutorial).\r\n    </p>    \r\n\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(44,'stoller',282,'2005-08-16 14:21:27','Hardware Setup','Do any Emulab nodes have wifi (802.11) interfaces?','    <p>\r\n    Yes, of two kinds.  We currently have:<br>\r\n1. 18 Pentium IV 3GHz nodes scattered around \r\n    our building with two wifi interfaces each, as well as GNU Software Radio \r\nhardware (USRP). We have purchased 100 more high-end Core2 Duo machines\r\nto dramatically expand this testbed, installation to occur in May 2007.<br>\r\n2.  We have a dense 6x6 array of 802.11 from 36 pc600 cluster nodes\r\nin our machine room.  This is good for studying interference effects.<br>\r\nPlease refer\r\n    to the <a href=\"tutorial/docwrapper.php3?docname=wireless.html\">\r\n    wireless tutorial</a> for more info.\r\n    </p>\r\n',NULL,1,'2007-04-27 13:39:36','lepreau',12,0,NULL,NULL,0),(45,'stoller',282,'2005-08-16 14:21:48','Hardware Setup','What kind of wifi cards are used in Emulab?','    <p>\r\n    We use Netgear WAG311 cards which contain the Atheros 5212\r\n    chipset. The Madwifi driver and its branches provide support in Linux or\r\n    FreeBSD.  The default RHL90-WIRELESS image utilizes the unstripped\r\n    madwifi driver (second link below) by default.\r\n    </p>\r\n    <a href=\"http://netgear.com/products/details/WAG311.php\">\r\n    WAG311 product info</a>\r\n    <br>\r\n    <a href=\"http://madwifi.sourceforge.net\">Madwifi Atheros driver</a>\r\n    <br>\r\n    <a href=\"http://pdos.csail.mit.edu/~jbicket/madwifi.stripped/\">\r\n    Stripped madwifi driver</a> - <i>Primarily for use with\r\n    <a href=\"http://pdos.csail.mit.edu/click/\">click</a></i>\r\n    \r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(46,'stoller',282,'2005-08-16 14:36:58','Software Setup','What OS do the nodes run?','    <p>\r\n    Please see the <a href=\"docwrapper.php3?docname=software.html\">\r\n    Software Overview</a> page for a description of the Operating\r\n    Systems that can be run on each of the Testbed nodes.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(47,'stoller',282,'2005-08-16 14:37:28','Software Setup','How do I select which OS to run on each node?','    <p>\r\n    When a choice of OS is available, you may specify which one you\r\n    prefer for each node in the NS file using the Emulab\r\n    <tt>tb-set-node-os</tt> extension to NS. When your experiment is\r\n    configured, the appropriate disk image will be loaded on your\r\n    nodes, and the selected operating system will boot up on each.\r\n    </p>\r\n    <p>\r\n    Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html#OS\">Extensions</a>\r\n    page for a summary of all Emulab NS extensions, and the\r\n    <a href = \"tutorial/tutorial.php3#OsChoices\">Emulab Tutorial</a> for an\r\n    example. \r\n    </p>    \r\n    \r\n','tb-set-node-os',1,'2005-08-17 13:29:11','stoller',282,0,NULL,NULL,0),(48,'stoller',282,'2005-08-16 14:37:58','Software Setup','Is Windows 2000 supported as well as Windows XP?','    <p>\r\n    We have no existing support for Win2k.  Given our experience in bringing\r\n    Windows XP into the Emulab fold, it could easily be an enormous\r\n    undertaking to get Win2k going.  We know that it won\'t even boot on the\r\n    pc850 nodes, due to their lack of VGA graphics console hardware.\r\n    </p>\r\n    <p>\r\n    We suggest switching to Windows XP if at all possible.\r\n    </p>\r\n    <p>\r\n    Please see the <a href=\"doc/docwrapper.php3?docname=windows.html\">\r\n    Windows XP</a> page for more information.\r\n    </p>\r\n    \r\n','SWS-WIN2K',1,'2005-10-04 15:27:18','fish',30775,0,NULL,NULL,0),(49,'stoller',282,'2005-08-16 14:38:53','Software Setup','Can I load my own software (RPMs/Tarballs) on my nodes?','    <p>\r\n    Yes! If you have an RPM or Tarball (or more than one) that is appropriate for\r\n    loading on the OS you have selected, you can arrange to have them\r\n    loaded automatically when your experiment is configured. The\r\n    Emulab NS extension, <a href=\"tutorial/docwrapper.php3?docname=nscommands.html#tb-set-node-rpms\"><tt>tb-set-node-rpms</tt></a>, is used in the NS\r\n    file to specify a list of RPMS to install.\r\n    The <a\r\n    href=\"tutorial/docwrapper.php3?docname=nscommands.html#tb-set-node-tarfiles\"><tt>tb-set-node-tarfiles</tt></a>\r\n    command is used to specify a list of Tar\r\n    files to install, as well as the directories in which the tars\r\n    should be unpacked. You may specify a\r\n    different list for each node in the experiment. The RPMs/Tarballs\r\n    will be installed when the nodes first boot after the experiment is\r\n    swapped in or if the nodes detect a changed RPM/Tarball during a reboot.\r\n    </p>\r\n    <p>\r\n    Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html\">Extensions</a>\r\n    page for a summary of all Emulab NS extensions, and the\r\n    <a href = \"tutorial/tutorial.php3#RPMS\">Emulab Tutorial</a> for an\r\n    example. \r\n    </p>    \r\n    \r\n','load-software',1,'2006-02-27 13:18:13','kwebb',10109,0,NULL,NULL,0),(50,'stoller',282,'2005-08-16 14:40:10','Software Setup','Can I schedule programs to run automatically when a node boots?','    <p>\r\n    Yes! You can arrange to run a single program or script when your\r\n    node boots. The script is run as the UID of the experiment\r\n    creator, and is run after all other node configuration (including\r\n    RPM installation) has completed. The exit status of the script (or\r\n    program) is reported back and is made available for you to view in\r\n    Experiment Information link in the menu at your left. The Emulab\r\n    NS extension <tt>tb-set-node-startcmd</tt> is used in the NS file\r\n    to specify the path of the script (or program) to run. You may\r\n    specify a different program for each node in the experiment.\r\n    </p>\r\n    <p>\r\n    Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html\">Extensions</a>\r\n    page for a summary of all Emulab NS extensions, and the\r\n    <a href = \"tutorial/tutorial.php3\">Emulab Tutorial</a> for an\r\n    example.\r\n    </p>    \r\n\r\n','tb-set-node-startcmd',1,'2006-04-10 17:24:19','fish',30775,0,NULL,NULL,0),(51,'stoller',282,'2005-08-16 14:41:12','Software Setup','How can I turn on routing or set up routes automatically on my nodes?  ','    <p>\r\n    By default, we do not setup any static routes or run any routing daemon\r\n    on nodes in an experiment.  However, we do provide several options for\r\n    experimenters, which are described in the\r\n    <a href=\"tutorial/tutorial.php3#Routing\">\"Setting up IP routing\r\n    between nodes\"</a> section of the\r\n    <a href=\"tutorial/tutorial.php3\">Emulab Tutorial.</a>\r\n    </p>\r\n    \r\n','routing',1,'2005-08-16 14:53:25','stoller',282,0,NULL,NULL,0),(52,'stoller',282,'2005-08-16 14:42:03','Software Setup','How does my software determine when other nodes in my  experiment are ready?','    <p>\r\n    If your application requires synchronization amongst your nodes,\r\n    you may use the Emulab provided synchronization server, which\r\n    provides a very simple form of barrier synchronization. Use of the\r\n    synchronization server is described in more detail in the <a href =\r\n    \"tutorial/tutorial.php3#SyncServer\">Emulab Tutorial</a>.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(53,'stoller',282,'2005-08-16 14:42:30','Software Setup','Can I run my own Operating System?','    <p>\r\n    Yes! You can run your own OS (or a customized version of an Emulab\r\n    supported OS) on any of the PCs. You can also run <a href =\r\n    \"http://www.cs.utah.edu/flux/oskit/\">OSKit</a> kernels on the\r\n    PCs. Each of the PCs is partitioned with two DOS partitions large\r\n    enough to hold the typical OS installation. The 1st and 2nd\r\n    partitions are each 3GB. The 3rd partition is 500MB, and is\r\n    labeled as Linux Swap. The 4th partition is the remainder of the\r\n    disk, and varies in size depending on the pc type. We recommend\r\n    that you use the 1st or 2nd partition; using the 4th partition\r\n    will restrict the number of machines that you can run your OS on\r\n    since it varies in size. Note that you must leave the MBR (Master\r\n    Boot Record) in sector 0 alone, and that your custom partition\r\n    must contain a proper DOS boot record in the first sector.\r\n    </p>\r\n\r\n    <p>\r\n    Please note that while users are free to customize their disks and\r\n    install their own operating systems, Emulab staff will not be able\r\n    to offer more than encouragement and advice! We cannot install the\r\n    OS for you, and we cannot load CDROMS, floppy disks, or tape drives!\r\n    We <em>do</em> provide an easy way for you to boot FreeBSD from a\r\n    memory based filesystem (MFS) so that you can more easily work\r\n    with the disk (in case it is not possible to install your OS on a\r\n    live disk). Beyond that, you are pretty much on your own!\r\n    </p>\r\n\r\n    <p>\r\n    Many users had great success with customizing an Emulab supported\r\n    OS (FreeBSD or Linux), and then creating a disk image that is\r\n    autoloaded when the experiment is swapped in. We strongly\r\n    encourage people to use this approach whenever possible! There is\r\n    more information available in the <a\r\n    href=\"tutorial/tutorial.php3#CustomOS\">Custom OS</a> section of\r\n    the <a href = \"tutorial/tutorial.php3\">Emulab Tutorial.</a>\r\n    </p>\r\n\r\n\r\n','customos',1,'2006-05-09 09:09:51','mike',27,0,NULL,NULL,0),(54,'stoller',282,'2005-08-16 14:43:45','Software Setup','Can I share a disk image between two projects?','    <p>\r\n    No. At this time you cannot share OS images between projects. We\r\n    are thinking of adding project collaboration support, but that is\r\n    a future project.\r\n    </p>\r\n    <p>\r\n    In the meantime, you will need to create an\r\n    <a href=\"https://www.emulab.net/newimageid_ez.php3\">image\r\n    descriptor</a> in the project that wants to use your image. Fill out\r\n    the form, but leave out the \"Node to Obtain Snapshot from\". Then\r\n    just copy the image over to the default path it picked for you in\r\n    the form. There is more information available in the <a\r\n    href=\"tutorial/tutorial.php3#CustomOS\">Custom OS</a> section of\r\n    the <a href = \"tutorial/tutorial.php3\">Emulab Tutorial.</a>\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(55,'stoller',282,'2005-08-16 14:47:09','Software Setup','What if I need more disk space on my nodes?','    <p>\r\n    Each node has a partition at the end of the disk that you can use if\r\n    you wish. In Linux, the partition is <code>/dev/hda4</code> ; in FreeBSD,\r\n    it\'s </code>/dev/ad0s4</code> . There is no filesystem on this partition,\r\n    so you\'ll need to create it yourself.  Before going any further, there\r\n    is one very important point: <b>anything you put in this disk space will\r\n    be lost when your experiment swaps out!</b>  That is, unless you create\r\n    a <a href=\"tutorial/tutorial.php3#CustomOS\">Custom disk image</a>\r\n    before it gets swapped.\r\n    </p><p>\r\n    You can also use the\r\n    <a href=\"tutorial/docwrapper.php3?docname=loghole.html\">loghole</a>\r\n    utility to retrieve information from your nodes before swap-out.  Use the\r\n    <b><code>loghole sync -r <i>remotedir</i></code></b> option to specify the\r\n    directory you create on the experiment nodes, as described below.\r\n    Loghole uses rsync over ssh to collect files from your experiment nodes,\r\n    so you can run it multiple times as your experiment progresses and it will\r\n    do minimal work to update the results. Running as a post-process or during\r\n    idle times avoids mucking up your experiment timings with NFS overhead,\r\n    if that matters.  It puts results under\r\n    <code>/proj/<b><i>pid</i></b>/exp/<b><i>eid</i></b>/logs</code> in\r\n    per-node subdirectories, and has some support for archiving previous \r\n    states as zip files.\r\n    </p><p>\r\n    Recent versions of our standard FreeBSD and Linux images include a\r\n    script, <code>/usr/testbed/bin/mkextrafs</code> to make the partition\r\n    at the end of the disk available to you.\r\n    Just do the following <a href=\"kb-show.php3?xref_tag=root-access\">\r\n    as root</a>:\r\n    <blockquote>\r\n    <code>/usr/testbed/bin/mkextrafs /mnt</code>\r\n    </blockquote>\r\n    and it will create the filesystem, mount it on <code>/mnt</code>\r\n    and make an entry in <code>/etc/fstab</code> so that the filesystem\r\n    will be mounted on future reboots.\r\n    </p><p>\r\n    If that script does not exist, you can perform the steps by hand.\r\n    For example, in Linux do the following\r\n    <a href=\"kb-show.php3?xref_tag=root-access\">as root</a>:\r\n    <ul>\r\n        <p>\r\n        <li>Set the correct partition type (type 83 - ext2fs):</li>\r\n        <blockquote>\r\n        <code>fdisk /dev/hda</code>\r\n        </blockquote>\r\n        <ul>\r\n            <li>Press \'t\' to change partition sysid.</li>\r\n            <li>Enter \'4\' as the partition to change.</li>\r\n            <li>Enter \'83\' to specify ext2fs.</li>\r\n            <li>Type \'w\' to save and exit.</li>\r\n        </ul>\r\n        </p><p>\r\n        <li>Create the filesystem:</li>\r\n        <blockquote>\r\n	<code>mkfs /dev/hda4</code>\r\n        </blockquote>\r\n        </p><p>\r\n        <li>Mount the filesystem:</li>\r\n        <blockquote>\r\n        <code>mount /dev/hda4 /mnt</code>\r\n        </blockquote>\r\n        </p>\r\n	<p>\r\n	You may want to add the filesystem to <code>/etc/fstab</code>\r\n	so that it will be automatically mounted on future reboots.\r\n	</p>\r\n    </ul>\r\n    In FreeBSD, do the following\r\n    <a href=\"kb-show.php3?xref_tag=root-access\">as root</a>:\r\n    <ul>\r\n        <p>\r\n        <li>First, you need to set the correct partition type:</li>\r\n        <blockquote>\r\n        <code>fdisk -i4 /dev/ad0</code>\r\n        </blockquote>\r\n        <ul>\r\n            <li>Do <em>not</em> change what the BIOS thinks.</li>\r\n            <li>Edit the partition info, setting the sysid to 165; leave other\r\n            metrics alone.</li>\r\n            <li>Do <em>not</em> change the active partition</li>\r\n            <li>Write out the new partition table</li>\r\n        </ul>\r\n        </p>\r\n        <p>\r\n        <li>Next, you have to create a BSD disklabel on the partition:</li>\r\n        <blockquote>\r\n        <code>disklabel -w ad0s4 auto</code>\r\n        </blockquote>\r\n        </p>\r\n        <p>\r\n        <li>Create the filesystem:</li>\r\n        <blockquote>\r\n        <code>newfs /dev/ad0s4c</code>\r\n        </blockquote>\r\n        </p>\r\n        <p>\r\n        <li>Finally, mount it:</li>\r\n        <blockquote>\r\n        <code>mount /dev/ad0s4c /some/where</code>\r\n        </blockquote>\r\n        </p>\r\n	<p>\r\n	You may want to add the filesystem to <code>/etc/fstab</code>\r\n	so that it will be automatically mounted on future reboots.\r\n	</p>\r\n    </ul>\r\n    <p>\r\n    The available space ranges from 6-33GB depending on the disk type.\r\n    </p>\r\n\r\n','local-space',1,'2006-06-06 14:20:52','fish',30775,0,NULL,NULL,0),(56,'stoller',282,'2005-08-16 14:49:48','Software Setup','Are there testbed-specific daemons that could interfere with my experiment?','    <p>\r\n    Probably not.\r\n    By default, the testbed startup scripts currently start two daemons in \r\n    addition to the OS\'s standard set.  Other daemons may be started depending\r\n    on the network services you ask for in your ns file (see below).\r\n    </p>\r\n\r\n    <p>\r\n    <b>Unconditionally started daemons:</b>\r\n    </p>\r\n\r\n    <p>\r\n    <blockquote>\r\n    <li><code>healthd</code> - A low overhead hardware health monitor.</li>\r\n    </blockquote>\r\n    </p>\r\n\r\n    <p> \r\n    This deamon periodically polls the machine\'s health monitoring\r\n    hardware and sends this information back to our <code>boss</code>\r\n    node for analysis.  The hardware is polled once per second, and a\r\n    status datagram is sent out once every five minutes.\r\n    <code>Healthd</code>\'s overhead is quite low, but it can be safely\r\n    killed and disabled from startup if you\'re worried about possible\r\n    side effects.  It is started by\r\n    <code>/etc/testbed/rc.healthd</code>.\r\n    </p>\r\n\r\n    <p>\r\n    <blockquote>\r\n    <li><code>slothd</code> - A low overhead usage analysis tool.</li>\r\n    </blockquote>\r\n    </p>\r\n\r\n    <p>\r\n    <code>Slothd</code> is important to efficient testbed utilization\r\n    and should run on every node whenever possible.  Its overhead is\r\n    almost negligible (essentially less than running <code>\'ls -l\r\n    /dev\'</code> once every five minutes), and should not interfere with your\r\n    work.  However if your experiment is exceptionally sensitive, then\r\n    you may arrange with us to disable <code>slothd</code>.  Please\r\n    note that we will restart this daemon if it is not running unless\r\n    prior arrangements have been made.\r\n    </p>\r\n\r\n    <p>\r\n    <b>Conditionally started daemons:</b>\r\n    </p>\r\n\r\n    <p>\r\n    <blockquote>\r\n    <li><code>gated</code> - A network routing daemon.</li>\r\n    </blockquote>\r\n    </p>\r\n\r\n    <p>\r\n    If you have requested automatic routing on your nodes with  \r\n    <code>$ns&nbsp;rtproto&nbsp;Session</code> in your NS file, this will\r\n    start <code>gated</code> on all of your nodes.\r\n    </p>\r\n\r\n    <p>\r\n    We have left all daemons started by the operating systems\' default\r\n    configurations (such as <code>cron</code>) enabled, so you should also\r\n    look at them if you are concered about running processes affecting\r\n    your experiment.\r\n    </p>\r\n\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(57,'stoller',282,'2005-08-16 14:50:32','Software Setup','Does Emulab support IP Multicast?','    <p>\r\n      In short, yes, the local nodes in Emulab (but not all remote\r\n      Netbed nodes) support IP Multicast on the experimental\r\n      network. In order to use it, you must have a kernel that\r\n      supports it, and if you want multicast routing, you\'ll need to\r\n      enable <code>mrouted</code>. (You can do it manually, or\r\n      automatically via program objects or startup commands, but the\r\n      rtproto commands will not do it.)\r\n    </p>\r\n\r\n    <p>\r\n      When using multicast, there are a few issues you need to be aware\r\n      of. The first is the fact that multicast traffic will often find\r\n      the control network, rather than the experimental network, which\r\n      you don\'t want. See <a href = \"tutorial/tutorial.php3#ControlNet\">this\r\n	  section</a> of the tutorial for information about the control net.\r\n      There are two ways to work around the control net. The first is to\r\n      set a route for all multicast addresses (224.0.0.0/4) to go out the\r\n      experimental interface of your node. The second is to have your program\r\n      use the IP_MULTICAST_IF sockopt to bind to a particular interface.\r\n    </p>\r\n\r\n    <p>\r\n      You should also stay away from multicast addresses that have special\r\n      meanings, such as 224.0.0.1 . You can get a list of these addresses\r\n      from IANA <a href=\"http://www.iana.org/assignments/multicast-addresses\">\r\n	  here</a>.\r\n    </p>\r\n','multicast',1,'2007-05-14 10:51:44','fish',30775,0,NULL,NULL,0),(58,'stoller',282,'2005-08-16 14:51:11','Security Issues','Is Emulab Firewalled?','    <p>\r\n    Yes. Emulab blocks all of the <i>low numbered</i> ports (ports below 1024),\r\n    with the exception of ports 20 and 21 (FTP), 22 (Secure Shell), and 80\r\n    (HTTP). This is for the protection of experimenters, as well as to ensure\r\n    that an errant application cannot become the source of a Denial of Service\r\n    attack to sites outside of Emulab. If your application requires external\r\n    access to other low numbered ports, please contact us to make special\r\n    arrangements.\r\n    </p>\r\n','SI-FW',1,'2005-10-04 15:38:51','fish',30775,0,NULL,NULL,0),(59,'stoller',282,'2005-08-16 14:56:40','Troubleshooting','My experiment is set up, but I cannot send packets between some of the nodes. Why?','    <p>\r\n    The most common reason is that your topology\r\n    includes nodes which are not directly connected, and you have\r\n    not setup any routing.  Refer to\r\n    \"<a href=\"kb-show.php3?xref_tag=routing\">How can I turn on routing or set up routes\r\n    automatically in my nodes?</a>\" for details.  If you cannot\r\n    send packets between two machines which are directly connected\r\n    (via a link or a lan), then there are two possibilities:\r\n    either the nodes did not properly negotiate their speed and\r\n    duplex with the Cisco switch, or the physical wire is loose\r\n    or bad.  In these cases, <a href=\"kb-show.php3?xref_tag=problem-reporting\">you should contact us</a>\r\n    for help.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(60,'stoller',282,'2005-08-16 14:59:30','Troubleshooting','I asked for traffic shaping, but everything seems to be going at full LAN speeds','    <p>\r\n    The most likely problem is that it is using the unshaped control\r\n    network for the traffic you\'re looking at. This occurs when it\r\n    tries to contact a node using a \"pcXXX\" address, like pc76 or\r\n    pc76.emulab.net, or when it tries to ping a fully-qualified name,\r\n    like NodeA.myexpt.myproj.emulab.net, which also resolves to a\r\n    control network address. On one of your nodes, take a look at the\r\n    file /etc/hosts. It shows the IP addresses and aliases that refer\r\n    to the different experimental interfaces. These are the names/IPs\r\n    you can use to see the delays.\r\n    </p><p>\r\n    See <a href = \"tutorial/tutorial.php3#ControlNet\">this section</a>\r\n    of the tutorial for more details on the control network.\r\n    For a discussion of the way to \'name\' interfaces on the control\r\n    and experimental networks, see the the \r\n    <a href=\"kb-show.php3?xref_tag=node-naming\">naming section</a> of this     document.\r\n    </p>\r\n\r\n','no-traffic-shaping',1,'2005-08-16 15:00:24','stoller',282,0,NULL,NULL,0),(61,'stoller',282,'2005-08-16 15:05:12','Troubleshooting','I set a non-zero packet-loss (or delay) but \'ping\' shows no packet-loss (or delay)','   <p>\r\n    You are probably pinging through the control net interface. See this\r\n    <a href=\"kb-show.php3?xref_tag=no-traffic-shaping\">\r\n    Troubleshooting entry</a> and\r\n    the <a href = \"tutorial/tutorial.php3#ControlNet\">control net section</a>\r\n    of the tutorial.\r\n    </p>\r\n ',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(62,'stoller',282,'2005-08-16 15:07:07','Troubleshooting','I set a non-zero packet-loss (or delay) but \'ping\' shows a different packet-loss (or delay)','    <p>\r\n    Short answer: Ping is round trip, PLR and delay are \"one way\".\r\n    </p>\r\n\r\n    <p>\r\n    Long Answer: If you\'re not seeing any traffic shaping at all\r\n    (100Mbps, 0ms, 0plr), see \r\n    <a href=\"kb-show.php3?xref_tag=no-traffic-shaping\">this Troubleshooting entry</a>. If\r\n    you are seeing shaping, but something different than you\r\n    expected, it is probably because link characteristics are one\r\n    way, and you\'re measuring them over the round trip.\r\n    </p>\r\n\r\n    <p>\r\n    For instance, if you asked for a link that was 100Mbps, 30ms,\r\n    with 5% (0.05) packet loss rate (plr), you may expect ping to\r\n    show 30ms ping times and 5% loss rate. But what you should see\r\n    is 60ms latency for the round trip, and a loss rate of\r\n    9.75%. Latencies can be added, therefore 30ms + 30ms gives\r\n    60ms. However, loss rates are probabilities, and must be\r\n    multiplied. The chance of a packet making it across a 5% lossy\r\n    link is 95%, so with a 95% chance of arriving at the\r\n    destination, and a 95% chance of returning if it made it there,\r\n    and the total chance of making a round trip is .95 * .95 = .9025 or\r\n    90.25%, or a round trip loss rate of 9.75% on a 5% lossy link.\r\n    </p>\r\n\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(63,'stoller',282,'2005-08-16 15:07:56','Troubleshooting','I decreased the bandwidth on a link and now the ping time between the nodes has increased','    <p>\r\n    Short answer: Decreasing the bandwidth of a link means that your\r\n    bytes take longer to get where they are going! \r\n    </p>\r\n\r\n    <p>\r\n    Long Answer: A ping packet is 98 bytes of data; 56 bytes of data\r\n    plus 8 bytes of ICMP header plus 20 bytes of IP header plus 14\r\n    bytes of ethernet header. At 100Mbs those 98 bytes takes .0078ms\r\n    to traverse the wire, which is hardly noticeable! If you have set\r\n    the delay of your link to 10ms, then your ping packets will incur\r\n    10ms+0.0078ms of delay in each direction, for a 20ms roundtrip time.\r\n    </p>\r\n\r\n    <p>\r\n    Say you set the bandwith of your link to 250Kbs. The wire time for\r\n    those same 98 bytes is now 3ms. If your delay is 10ms like above,\r\n    then your ping packets will incur 10ms+3ms of delay in each\r\n    direction, for a 26ms roundtrip time! If you set the bandwith to\r\n    100Kbs, the wire time is now 7.8ms and your ping packets will\r\n    incur 10ms+7.8ms of delay in each direction, for a 35.6ms roundtrip\r\n    time!\r\n    </p>\r\n\r\n    <p>\r\n    Note: If you have a router connecting two nodes, then <em>each of\r\n    the two links</em> will incur the same wire time (and delay of\r\n    course). In the above 250Kbs example, each ping packet will incur\r\n    3ms of wire time to the router and <em>another</em> 3ms from the\r\n    router to the destination. The ping reply packet will see the same\r\n    6ms of wire time. If your delay is again 10ms, then the ping\r\n    roundtrip is 52ms. \r\n    </p>\r\n\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(64,'stoller',282,'2005-08-16 15:09:33','Troubleshooting','I wrote a small TCP application to test the bandwidth of a link/LAN, but I do not observe the bandwidth that I asked for. ','    <p>\r\n    \r\n    Short answer: TCP needs large send and receive socket buffers in\r\n    order for its throughput to approach the capacity of long fat\r\n    networks (LFN) i.e. link/LANs with a large bandwidth-delay product\r\n    (BDP). Use UDP instead, if your intention is just to test the\r\n    bandwidth. If you need to tune the throughput of your TCP\r\n    application, refer to <a\r\n    href=\"http://www.psc.edu/networking/perf_tune.html\">\"Enabling High\r\n    Performance Data Transfers\"</a>.\r\n    </p>\r\n\r\n    <p>\r\n    \r\n    Long Answer: In order to observe the bandwidth that you specify,\r\n    it is necessary to keep the data pipe between the sender and the\r\n    receiver full. For a reliable window based protocol such as TCP,\r\n    the window size represents the number of unacknowledged bytes. TCP\r\n    needs to keep the unacknowledged bytes around until the acks for\r\n    them are received. These bytes are retained in socket buffers. On\r\n    a link/LAN with bandwidth B and round-trip-time (RTT) D, the\r\n    sender TCP needs to be able to transmit B times D bytes before\r\n    expecting any acknowledgement, if the data pipe has to be kept\r\n    full. The effective sending window is dependent on receiver\r\n    advertised window besides other things. It is necessary to have\r\n    sender and receiver socket buffers at least as high as BxD. If you\r\n    only care about optimal end-to-end TCP throughput, then the socket\r\n    buffers need to be BxD where B is the bandwidth of the bottleneck\r\n    link and D is the end-to-end RTT. Refer to the following <a\r\n    href=\"http://www.ssfnet.org/Exchange/tcp/tcpTutorialNotes.html\">\"TCP\r\n    mini-tutorial\"</a> or a basic TCP/IP book for the gory details.\r\n    \r\n    </p>\r\n',NULL,1,'2005-08-16 15:09:49','stoller',282,0,NULL,NULL,0),(65,'stoller',282,'2005-08-16 15:10:49','Troubleshooting','I wrote a small UDP application to test the bandwidth of a link/LAN, but I do not observe the bandwidth that I asked for. ','    <p>\r\n    Since UDP is unreliable and not flow controlled, you may just be\r\n    trying to push packets out on the wire too fast.  In this case\r\n    packets will be dropped before even getting to the wire.  You\r\n    may also be dropping packets at the receiver side if the consumer\r\n    cannot keep up.\r\n    <p>\r\n    If you are trying to saturate a 100Mb link and can\'t do it, it\r\n    may be due to using too small a packet size.\r\n    For small packet sizes, the limitation on a 100Mb link will be\r\n    the packet rate, not the raw bandwidth.  The eepro100\r\n    ethernet NICs in most of our machines can only generate a little\r\n    over 100,000 packets per second (pps).  With 64-byte packets,\r\n    you will thus only see about 51.2Mb/sec of raw data or about\r\n    14.4Mb/sec of UDP payload (a 64 byte ethernet packet can hold\r\n    only 18 bytes of UDP payload).  Note that the theoretical max\r\n    is less than 150,000 pps for 64-byte packets, so even better NICs\r\n    would not change this.\r\n    </p><p>\r\n    Considering that stock FreeBSD and Linux can generate even fewer\r\n    packets per second due to interrupt and scheduling overheads, you\r\n    probably need to use at least 200-byte packets to saturate a 100Mb\r\n    link.\r\n     </p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(66,'stoller',282,'2005-08-16 15:11:34','Troubleshooting','I am running a routing daemon in my topology but the daemon claims that all my nodes are directly connected!','    <p>\r\n    The routing daemons are probably talking to each other via the control\r\n    net and routing traffic through it since it is the shortest path.\r\n    You will need to configure your daemon to ignore the control net interface.\r\n    See the\r\n    <a href = \"tutorial/tutorial.php3#ControlNet\">control net section</a>\r\n    of the tutorial.\r\n\r\n    </p>\r\n','cnet-routing',1,'2005-11-16 09:11:23','mike',27,0,NULL,NULL,0),(67,'mike',27,'2005-08-18 14:53:50','Troubleshooting','My custom Linux kernel won\'t boot, why?','<p>\r\nShort answer: Either your kernel is misconfigured, you didn\'t run LILO, \r\nyou hit a LILO-related bug we introduced, or you misconfigured your\r\n/etc/lilo.conf or /boot/grub/grub.conf.\r\n<p>\r\nLong answer:\r\n<ul>\r\n<li><b>The kernel is misconfigured.</b>\r\nIf you customized one of our RHL90 images and did not start from the\r\nconfiguration in the <tt>configs/emulab.config</tt>\r\nfile in one of our <tt>/share/redhat/...</tt>\r\nkernel source trees, or customized one of our Fedora images (see <a\r\nhref=\"https://www.emulab.net/kb-show.php3?idx=269\">our kernel build guide</a>),\r\nthen perhaps you have left out some essential device driver.\r\nAlso make sure you have the serial line console enabled and running at\r\n115200 baud.\r\n</li>\r\n<li><b>You did not run LILO.</b>\r\nAfter installing a new kernel, you need to run <tt>/sbin/lilo</tt> to update\r\nthe boot block.\r\n</li>\r\n<li><b>You hit a bug we introduced.</b>\r\n<br><b>[ As of 10/19/05 this bug should be fixed.  If you suspect it is still\r\na problem, contact testbed-ops. ]</b>\r\n<br>\r\nIf the machine boots, but comes up in the default kernel rather than your\r\nkernel, then you probably hit a bug we caused.  If you made your kernel the\r\ndefault Linux to boot by setting <tt>default=my-linux</tt>\r\nin <tt>lilo.conf</tt>, then it will get over-ridden the <i>first</i> time\r\nthe machine reboots.  After the first time, it will boot your kernel.\r\nThe fix for this is to leave the default setting alone, but to change the\r\nlabel associated with your image: <tt>label=linux</tt>.\r\n<li><b>You get a \"Device 0x0300: Invalid partition table\" when running LILO.</b>\r\nIf you see this error, run LILO with the \'-P ignore\' option.  From the man page, the \'-P ignore\' option tells LILO to ignore partition tables in which linear and sector/head/cylinder addresses don\'t correspond (from manpage).\r\n</li>\r\n</ul>\r\n',NULL,1,'2007-04-19 12:35:52','johnsond',30817,0,NULL,NULL,0),(68,'stoller',282,'2005-09-01 13:10:34','Setting Up a New Emulab','What partitions do I have to make initially?','<p>\r\nFor the standard disk image you obtained from us, you do not need to worry \r\nabout partitioning the disk.  That image is a \"whole disk\" image, and \r\nhence contains a partition table and MBR - these will be laid down on the \r\ndisk along with the contents of the partitions by frisbee.\r\n</p>\r\n\r\n<p>\r\nAs for Windows, you will have to manually partition the disk and install \r\nfrom your own copy (due to licensing restrictions).  We recommend holding \r\noff on Windows for now; focus on making your testbed work well with \r\nFreeBSD and Linux first.  \r\n</p>\r\n\r\n',NULL,0,'2005-09-01 14:38:04','kwebb',10109,0,NULL,NULL,0),(69,'stoller',282,'2005-09-02 11:00:20','Getting Started','Forgot your password? Resetting does not work!','<p>\r\nPeople often report that the link to reset their password (after\r\nforgetting it) fails with the seemingly obscure error:\r\n<pre>\r\n	Invalid page arguments:\r\n	/chpasswd.php3?reset_uid=joeuser&key=0641d88cf3abb16d&simple=0\r\n</pre>\r\n\r\nThis typically happens because you are using a different browser for\r\nthe link you got in the email message, then you did when initially\r\nmaking the chpasswd request.\r\n</p>\r\n\r\n<p>\r\nWe store a cookie (1/2 of the above key) in the browser, and if\r\nyou fire up a new browser (invocation, as some email clients will do)\r\ninstead of using the same browser, that cookie will be missing.\r\n</p>\r\n\r\n<p>\r\nSolution: Paste the link you get in the email message, into the same\r\nbrowser invocation that you used to make the Change Password request.\r\n</p>\r\n','forgotpassword',1,'2005-11-02 13:30:31','stoller',282,0,NULL,NULL,0),(70,'kwebb',10109,'2005-09-12 15:20:17','Using the Testbed','How can I login to users.emulab.net or a node in my experiment without providing my password?','<p>\r\nTo do this, you\'ll need to run an ssh agent on your machine, have a\r\nprivate key loaded into it, and have uploaded the public counterpart to\r\nEmulab (via the web interface).  Be sure you have agent forwarding enabled\r\nlocally.  Once you are logged into an emulab machine, your default Emulab \r\nkeypair should allow you to ssh from one node to another without a\r\npassword.\r\n</p>\r\n<p>\r\nFor more information on using ssh keypairs and ssh in general, please\r\nreference the ssh-keygen, ssh-add, and ssh man pages; ask your fellow\r\nproject/group members; and/or talk to your local sysadmin.\r\n</p>\r\n<br>\r\nYou might also find the following links for the more popular ssh\r\nclients useful:<br>\r\n<br>\r\nOpenSSH:<br>\r\n<br>\r\nhttp://sial.org/howto/openssh/publickey-auth/<br>\r\n<br>\r\nPuTTY:<br>\r\n<br>\r\nhttp://the.earth.li/~sgtatham/putty/0.58/htmldoc/Chapter8.html#pubkey<br>\r\nhttp://the.earth.li/~sgtatham/putty/0.58/htmldoc/Chapter9.html#pageant\r\n',NULL,1,'2005-09-12 15:22:43','kwebb',10109,0,NULL,NULL,0),(71,'mike',27,'2005-09-29 13:14:01','Setting Up a New Emulab','Nodes not being reloaded','<h2>Free nodes are not getting reloaded.</h2>\r\n\r\nThe normal path for a node after it leaves an experiment (at swapout time)\r\nis that it is placed in the emulab-ops/reloadpending experiment where the\r\n\"reload daemon\" (<code>/usr/testbed/sbin/reload_daemon</code>) will notice\r\nit, move it into emulab-ops/reloading and then issue the appropriate\r\n<code>os_load</code> command.\r\n<p>\r\nIf nodes are not being \"freed\" properly, there are a number of possible\r\ncauses:\r\n<ul>\r\n<li>The reload daemon has died.  Do a \"ps\" and see if\r\n<code>/usr/testbed/sbin/reload_daemon</code> is shown.  If not, restart it.\r\n<li>The reload daemon is hung.  If the reload daemon doesn\'t appear to be\r\noperating (e.g., there are nodes in emulab-ops/reloadpending for a long period),\r\nand \"ps\" reveals that the reload daemon is running, then it is probably stuck.\r\nAt Utah, the most common sticking point is when it tries to do a power cycle\r\nof a node on one of the serial-line-controlled RPC power controllers.  The\r\ncapture proxy monitoring that serial line sometimes thinks it is busy and locks\r\neveryone out.  The result is that calling <code>power</code> on a node\r\nconnected to such a controller hangs forever waiting for the serial line\r\nto become free.  If this happens, look at\r\n<code>/usr/testbed/log/powermon.log</code> which monitors the RPC power\r\ncontrollers and see if there is a message in there about timing-out on a\r\nparticular controller.  If so, go restart the capture process for that line.\r\n<li>Nodes are stuck in reloading.  This happens due to a variety of reasons,\r\nmostly having to do with heavy load during the boot process.  The reload\r\ndaemon only makes a modest attempt at resuscitating these nodes.  The easiest\r\nway to recover these is to just\r\n<code>nfree emulab-ops reloading <i>node ...</i></code>\r\n</ul>\r\n\r\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(72,'stoller',282,'2005-09-30 11:23:20','Hardware Setup','What does \'Too many links of type ethernet!\' mean (and what do I do)?','<p>\r\nIf you get the following message:\r\n	<code><pre>\r\n	*** No possible mapping for node0053\r\n	Too many links of type ethernet!</code></pre>\r\n\r\nit means that you tried to create more duplex links on a node than\r\nthere are physical ethernet cards. Typical testbed machines have 2-4 available network cards,\r\nand so that is all the duplex links you can create. To get around this\r\nlimitation, you can use a <b>lan</b> or if your code runs (or can be\r\nmade to run) under FreeBSD, you can use our\r\n<a href=tutorial/docwrapper.php3?docname=vnodes.html><em>virtual\r\nnode</em></a> or\r\n<a href=\"doc/docwrapper.php3?docname=linkdelays.html#EMULINKS\"><em>multiplexed link</em></a>\r\nsupport. Those features allow you to multiplex virtual nodes and/or network\r\nlinks onto a single physical node/ethernet link.\r\n</p>\r\n',NULL,0,'2006-02-09 10:17:27','lepreau',12,0,NULL,NULL,0),(73,'stoller',282,'2005-10-07 09:26:53','Hardware Setup','What is the current arrangement of switches and nodes?','<p>\r\nWe have a nice picture of the current\r\n<a href=doc/docwrapper.php3?docname=topo.html>\r\ncurrent arrangement of switches and nodes</a> (what node is attached to\r\nwhich switch, and how the switches connected to each other).\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(74,'stoller',282,'2005-10-07 10:31:36','Setting Up a New Emulab','How is the reboot timeout controlled?','When an experiment is swapping in, and a node fails to reboot\r\nproperly, you will often see the following messages in the swapin\r\nlog:\r\n	<code><pre>\r\n	Still waiting for pc218 - it\'s been 1 minute(s).\r\n	Still waiting for pc218 - it\'s been 2 minute(s).\r\n	Still waiting for pc218 - it\'s been 3 minute(s).\r\n	Still waiting for pc218 - it\'s been 4 minute(s).\r\n	*** Giving up on pc218 - it\'s been 4 minute(s).	</pre></code>\r\n\r\nThere are two variables in the Emulab database that control how long\r\nthe system will wait for a node to reboot before giving up on it and\r\ndeclaring failure:\r\n\r\n<ul>\r\n<li> <b>bios_waittime</b>: The <tt>node_types</tt> table has a slot to\r\nindicate how long the bios typically takes to go from reset, to\r\nthe point where it it loads the PXE kernel. This number is typically\r\nset in the range of 60-120 seconds.\r\n\r\n<li> <b>reboot_waittime</b>: The <tt>os_info</tt> table (where OSIDs\r\nare stored) has a slot to indicate how long the operating system takes\r\nto reach multiuser mode. This number also includes the Emulab portion\r\nof the node self-configuration, which can add several minutes if\r\ntarballs or RPMs are scheduled to be loaded via the NS file. For our\r\ngeneric FreeBSD and Linux images, this number is typically set to 120\r\nseconds. This number is of course dependent on the processor speed of\r\nyour nodes. Slower nodes will require a longer timeout value.\r\n</ul>\r\n\r\nPlease note that the <tt>reboot_waittime</tt> is stored in each OSID\r\nentry in the database, and defaults to 120 seconds when an new OSID\r\nis created. You will need to change all of the entries in your\r\ndatabase if you decide to change this number on your testbed. For\r\nexample, to change all of the existing Linux images from 120 to 100\r\nseconds:\r\n	<code><pre>\r\n	mysql> update os_info set reboot_waittime=100 where os=\'Linux\'\r\n	</pre></code>\r\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(75,'mike',27,'2005-10-07 12:00:15','Troubleshooting','Why is the per-packet latency so high (variable) on the pc3000 nodes?','The pc3000 nodes have Intel Pro1000 Gigabit adaptor cards which implement\r\n\"interrupt throttling\" which can add quantity and variability to the latency\r\nof packets.  Interrupt throttling effectively caps the interrupt rate (either\r\ntransmit or receive) presented to the CPU.  See the README file that comes\r\nwith the driver\r\n(<code>/share/linux/e1000*</code> or <code>/share/freebsd/em*</code>)\r\nand the referenced Intel application note\r\n<a href=\"http://www.intel.com/design/network/applnots/ap450.htm\">\r\nhttp://www.intel.com/design/network/applnots/ap450.htm\r\n</a>.\r\nPlease note that the absolute and packet timer descriptions in\r\nthe README file are backwards, in particular the descriptions of\r\n<code>RxIntDelay</code> and <code>RxAbsIntDelay</code> would lead you to\r\nbelieve that the default values have no effect when in fact they serve\r\nto limit receive interrupts to about 8000/sec (RxAbsIntDelay == 128).\r\n<p>\r\nTo disable interrupt throttling on all interfaces in Linux, put the following\r\nas one line in your <code>/etc/modules.conf</code> (<code>/etc/modprobe.conf</code> in\r\nFedora Core images) file:\r\n<code><pre>\r\noptions e1000 InterruptThrottleRate=0,0,0,0,0,0 \\\r\n  TxIntDelay=0,0,0,0,0,0 TxAbsIntDelay=0,0,0,0,0,0 \\\r\n  RxIntDelay=0,0,0,0,0,0 RxAbsIntDelay=0,0,0,0,0,0\r\n</pre></code>\r\nand then reboot the machine.\r\n<p>\r\nFor FreeBSD, while you can change the per-interface settings with\r\n<code>sysctl</code> (<code>hw.em?.*_int_delay</code>), you cannot overcome\r\nthe global 8000 ints/sec. that is compiled into the kernel.  To override that,\r\nyou will need to modify the driver and build a new kernel.  In\r\n<code>/usr/src/sys/dev/em/if_em.c</code> look for:\r\n<code><pre>\r\n                /* Set the interrupt throttling rate.  Value is calculated\r\n                 * as DEFAULT_ITR = 1/(MAX_INTS_PER_SEC * 256ns) */\r\n#define MAX_INTS_PER_SEC        8000\r\n#define DEFAULT_ITR             1000000000/(MAX_INTS_PER_SEC * 256)\r\n                E1000_WRITE_REG(&adapter->hw, ITR, DEFAULT_ITR);\r\n</pre></code>\r\nand modify to suit your needs.\r\n\r\n','pc3000-latency',1,'2006-06-19 14:22:44','mike',27,0,NULL,NULL,0),(76,'stoller',282,'2005-10-10 12:55:23','Software Setup','Why does my image not boot on node type Y?','When you create your image, you need to specify the node_types that your\r\nimage runs on. This is done on the\r\n<a href=https://www.emulab.net/newimageid_ez.php3>image creation\r\nform</a> in the <b>Node Types</b> section. There will be a list of\r\nthe PC node types, and by default they start out as checked. If your\r\nimage is know not to run on some of those type, then be sure uncheck\r\nthe appropriate boxes.\r\n<br><br>\r\nWhat happens if a new node type is added to the testbed? Your image\r\nwill not run on the new node type until you edit the image descriptor\r\nand add the new node type to the list. To get to the image descriptor\r\nedit page, find the image descriptor on the\r\n<a href=https://www.emulab.net/showimageid_list.php3>List ImageIDs</a>\r\npage (see the left hand menu), and then click on the Edit option in\r\nthe upper left menu. \r\n<br><br>\r\nSimply check the boxes for the new node types, and then submit your\r\nchanges.\r\n<p>\r\nIf you are trying to get an image from an older pc type (pc600, pc850)\r\nto boot on a pc3000, then you also should read the\r\n<a href=\"http://www.emulab.net/doc/pc3000.html#images\">\r\nImages and Kernel Support section</a>\r\nof the <a href=\"http://www.emulab.net/doc/pc3000.html\">\r\npc3000 document\r\n</a>.\r\n\r\n',NULL,1,'2005-11-01 14:21:39','mike',27,0,NULL,NULL,0),(77,'lepreau',12,'2005-10-11 23:33:04','Operations and Policy','Restricted access for SIGCOMM\'06','<pre>\r\nFrom: Leigh Stoller <stoller@flux.utah.edu>\r\nTo: emulab-recently-active-projects@emulab.net\r\nCc: testbed-ops@flux.utah.edu\r\nSubject: Restricted access for SIGCOMM\r\nDate: Tue, 31 Jan 2006 10:06:16 -0800\r\n\r\nYou MUST read this if you want Emulab access in the run up to the SIGCOMM\r\n2006 deadline on Feburary 10th.\r\n\r\nDue to the high demand for Emulab resources before the deadline we are\r\nonce again allowing you to handle resource scheduling.  There is a\r\nsocial element and some technical elements.\r\n\r\nBasically, we are going to let you self-schedule.\r\n\r\nIt will be up to you, the experimenters on imminent deadline, to manage\r\nthis yourselves, including working out schedules and allocations.  Our\r\nrole will be approver, and, if necessary, enforcer and adjudicator.\r\n(But we\'re busy and we\'d rather not, so play nice with each other!)\r\n\r\nWe are using the project-oriented collaboration tools to provide\r\ncommunication channels for you, and to provide access only to those\r\nwith imminent deadlines.\r\n\r\n1) If you are working on a SIGCOMM deadline or otherwise have permission\r\n   from us to work on an imminent deadline, you *MUST* go to this page\r\n   and join the DEADLINE project.  Don\'t fake it-- we can find out who\r\n   really has submitted an abstract.  Make sure you are already logged\r\n   into the Emulab web interface, and then go here (or click \"join\r\n   project\"):\r\n\r\n	https://www.emulab.net/joinproject.php3?target_pid=DEADLINE\r\n\r\n   Unless you are a member of this project, when resources get tight you\r\n   will not be able to swap in any experiments-- which will probably\r\n   start about a week prior to the deadline.  Please note that you can\r\n   *not* use the special DEADLINE project to *run* your experiments; you\r\n   only need to be a member of it.  For experimentatiion, continue to\r\n   use whatever projects you currently use.\r\n\r\n2) Send email to testbed-ops@flux.utah.edu giving us your project\r\n   name, explaining your need, and cc\'ing your official project head\r\n   (typically the faculty member). \r\n\r\n3) Once you are a member of the DEADLINE project, you should use some of\r\n   Emulab\'s new Collaboration tools to arrange resource use with other\r\n   members of that project.\r\n\r\n   We expect to restrict the resources used by almost all other projects.\r\n   We will get involved if there are problems or detect gross unfairness,\r\n   but we\'d rather not.\r\n\r\n   Here are the DEADLINE project collaboration tools that will be available\r\n   as soon as you join that project, clearly marked in the \"Collaboration\"\r\n   submenu on the left hand side of the Emulab web interface.\r\n\r\n   * Mailing list: DEADLINE-users@emulab.net, a normal Mailman mailing\r\n     list, can be used to send email to everyone on deadline.  You can\r\n     create new DEADLINE-* lists there, as well.\r\n\r\n   * Wiki: You can use the scheduling form we provided on the DEADLINE\r\n     project wiki to aid you in reserving times when you need lots of\r\n     nodes.  Or you can build a fancier one.  Or whatever.  Use the \"My\r\n     Wikis\" link.\r\n\r\n   * Chat Room.  There is an DEADLINE chatroom on the Emulab chat\r\n     server. If you go to the \"My Chat Buddies\" link, you will see your\r\n     jabber id and your password.  Use whatever client you like, as long\r\n     as it speaks jabber.\r\n\r\n     To join the chatroom, the room name is \"DEADLINE\" and the server is\r\n     \"conference.emulab.net\". You do not need a password to enter the\r\n     room.\r\n</pre>\r\n','DEADLINE',0,'2006-01-31 11:08:26','stoller',282,0,NULL,NULL,0),(78,'stoller',282,'2005-10-13 10:00:21','Collaboration Tools','Who is the administrator of per-project mailing lists?','<p>\r\nEach project and subgroup gets its own Mailman mailing list. Only\r\nmembers of the list (project or group) are allowed to post to these\r\nmailman lists, since we want to prevent spammers from bothering us.\r\nNote that <em>Testbed Operations is the administrator for these\r\nlists</em>, although users (including the project leader) are free to\r\nmanage their user options on those lists. Simply click on the \"My\r\nMailing Lists\" option in the Collaboration menu on your left. \r\n</p>\r\n\r\n<p>\r\nUsers may also create their own mailing lists. You will see a submenu\r\noption on the \"My Mailing Lists\" option in the Collaboration menu,\r\nwhich will redirect you to a form. Instructions are on that form, but\r\nalso note that you <em>are the administrator</em> for lists you create\r\nyourself.\r\n</p>\r\n\r\n\r\n','maillist-admin',1,'2006-01-17 11:40:15','mike',27,0,NULL,NULL,0),(79,'mike',27,'2005-10-26 15:24:28','Troubleshooting','Why isn\'t my multicast traffic being correctly shaped?','If you have setup shaped links in your experiment, but your multicast traffic\r\nis not being properly shaped, then most likely your multicast traffic is using\r\nthe control network.\r\n<p>\r\nThis is because the default route for nodes is out the (unshaped) control\r\nnetwork and unless you have setup an explicit route for your multicast\r\naddresses, they will go via the default route.\r\n<p>\r\nIn FreeBSD and Linux you typically use <code>setsockopt</code>\r\nto explicitly bind multicast sockets to interfaces\r\n(<code>IP_MULTICAST_IF</code>).  If the application you are using doesn\'t\r\nallow you to specify the interface via a command line or config file option,\r\nyou can also just add a system wide route for the multicast address range\r\nin question.  For FreeBSD it would look something like:\r\n<code><pre>\r\n    route add -net 239.0.0.0/8 -iface em2\r\n</pre></code>\r\nSee also\r\n<a href=\"kb-show.php3?xref_tag=no-traffic-shaping\">\r\nthis FAQ entry\r\n</a>\r\nand the <a href =\" tutorial/tutorial.php3#ControlNet\">control net section</a>\r\nof the tutorial.\r\n\r\n','multicast_shaping',1,'2007-05-14 10:54:59','fish',30775,0,NULL,NULL,0),(80,'mike',27,'2005-10-27 09:41:57','Setting Up a New Emulab','I\'ve added new nodes to the testbed but I cannot ping them, what is wrong?','This question is too open-ended to just answer.  But here are some tools\r\nat your disposal for figuring out what is wrong.\r\n\r\n<h3>You really, <i>really</i> want to have a console</h3>\r\nFirst, there is a reason why we spend up to $50 a machine to put serial\r\nconsoles on every node, the console is invaluable for debugging these\r\nproblems.  So, if you have a serial console, connect to it, reboot the\r\nmachine and watch what happens.\r\n<p>\r\nIf you do not have a machine with a serial console, get one.  Just run\r\na serial cable from the machine to your boss or ops node, or any machine\r\nthat has an available serial connector.  Use <code>tip</code>,\r\n<code>minicom</code>, <code>hyperterm</code>, whatever to connect at 115200\r\nbaud (one stop bit, no parity) to a node.  Believe me, it is worth the\r\nhassle to do this.\r\n<p>\r\nIf you still insist on not having a serial console, at least have a console.\r\nConfigure you MFSes and images to use the VGA for a console (see the README\r\nfiles that come with the MFSes and generic images for instructions).  They\r\nhaul your butt over to the machine room and hook up a monitor and keyboard.\r\nNow reboot the node and frantically scribble down messages that scroll past\r\non the screen. (Have I mentioned that you really want a serial console?)\r\n\r\n<h3>Debugging boot problems without a console</h3>\r\nIf you don\'t have a console of any sort, you have to figure out what happened\r\nfrom second hand info.  Nodes contact boss from a number of places and for a\r\nvariety of reasons when they boot.  Thus there are numerous log files that\r\nyou can look at on boss to see how far a node boot has progressed.\r\n<ul>\r\n<li><b><code>/usr/testbed/log/dhcpd.log</code></b>.\r\nNodes boot using PXE and the first thing the PXE BIOS does is DHCP\r\nto discover its address and to learn what boot program to download.\r\nLook in here for the node\'s MAC to see if it requested and received its\r\nIP info.\r\n\r\n<li><b><code>/usr/testbed/log/tftpd.log</code></b>.\r\nDHCP should return <code>/tftpboot/pxeboot.emu</code> as the boot loader\r\nto download and the PXE BIOS should attempt to download this using TFTP.\r\nLook in this log to see if the node downloaded pxeboot.emu.\r\n(There may be other downloads for the node as well, we\'ll get to those in\r\na minute.)\r\n\r\n<li><b><code>/usr/testbed/log/bootinfo.log</code></b>.\r\nThe pxeboot loader will contact the boss node to determine what it should\r\ndo next, one of: download a memory-based filesystem (MFS) or boot from a\r\ndisk partition.  That request is done via the \"bootinfo\" protocol. \r\nLook in this log for the node IP to see if requested and received its\r\n\"marching orders.\"  If the node is has just been added then it should be\r\nconfigured to boot the \"admin MFS.\"  Now, you can go back to the TFTP log\r\nand see if it also requested a series of files from the\r\n<code>/tftpboot/freebsd/boot</code> directory.  The final request should\r\nhave been for <code>mfsroot.gz</code>.\r\n\r\n<li><b><code>/usr/testbed/log/tmcd.log</code></b>.\r\nOnce the MFS (or disk-based) OS is running, the Emulab scripts should start\r\nrequesting self-configuration info via the \"Testbed Master Control\" protocol.\r\nLook in the TMCD\'s log for the node name to see if it started requesting\r\nvarious info.  You should see \"status\", \"fullconfig\", and other requests,\r\nculminating in its reporting state <code>ISUP</code>.\r\n</ul>\r\n\r\n',NULL,1,'2005-10-27 09:50:44','mike',27,0,NULL,NULL,0),(81,'stoller',282,'2005-10-27 13:33:29','Using the Testbed','How much permanent disk is available for my files?','<p>\r\nEmulab provides a reasonable amount of disk space on\r\n<tt>users.emulab.net</tt> for experimenters to store files. There are\r\nseveral directory trees you have access to. Remember, all of these\r\ndirectories can be accessed on your experimental nodes via NFS.\r\n\r\n<ul>\r\n<li> <tt><b>/proj</b></tt>: Every project gets a sub directory in\r\n     <tt>/proj</tt>. This is the primary location in which you should\r\n     store files needed by your experiments and/or results from your\r\n     experiments.\r\n\r\n<li> <tt><b>/groups</b></tt>: Every project subgroup gets a sub\r\n     directory in <tt>/groups</tt>. If you have files that need to be\r\n     restricted to just your subgroup members, place them here.\r\n\r\n<li> <tt><b>/users</b></tt>: Every user gets a home directory in\r\n     <tt>/users</tt>. Your home directory is not the place to store\r\n     project files.\r\n</ul>\r\n\r\nSince we have many experimenters, all wanting more disk space then we\r\nphysically have, we run <b>quotas</b> on all filesystems to prevent\r\nusers from filling up the disks. To see how big your quota is on each\r\nfilesystem, simply run the <tt>quota</tt> command on\r\n<tt><b>users.emulab.net</b></tt>:\r\n\r\n	<code><pre>\r\n	users$ quota\r\n	Disk quotas for user leebee (uid 30379): \r\n	     Filesystem   usage   quota   limit   grace   files   quota   limit   grace\r\n	         /users      54   50000   60000              25       0       0\r\n	             /q  967226 2000000 2500000           30348       0       0</pre></code>\r\n\r\nYou will notice several important facts about the above quota display.\r\n\r\n<ul>\r\n<li> Your diskspace <b>resides on <tt>users.emulab.net</tt></b>. To delete\r\n     files when overquota, log into <b><tt>users.emulab.net</tt></b>.\r\n\r\n<li> Quotas are displayed in 1K byte blocks.\r\n\r\n<li> Quotas are per-user, not per-project or per-group.\r\n     Just joining a new project or group isn\'t going to get you any\r\n     more disk space!\r\n\r\n<li> You have a seperate quota on each physical filesystem.\r\n     Note however that this does not necessarily mean a seperate quota\r\n     for each of <tt>/users</tt>, <tt>/proj</tt> and <tt>/groups</tt>.\r\n\r\n<li> You have a very small quota on <tt>/users</tt>, which is\r\n     intended to encourage users to use the project disk space in\r\n     <tt>/proj</tt>.\r\n\r\n<li> On the current Utah Emulab fileserver,\r\n     <tt>/proj</tt> and <tt>/groups</tt> are actually symlinks to\r\n     directories on <tt>/q</tt>, and there your quota is much larger\r\n     than on <tt>/users</tt>.\r\n</ul>\r\n\r\nIf you find that your existing quota is not big enough for your needs,\r\nplease send email to testbed-ops explaining your needs.\r\n','diskspace',1,'2006-10-18 08:36:49','stoller',282,0,NULL,NULL,0),(82,'stoller',282,'2005-10-29 08:19:28','Setting Up a New Emulab','How do I add users to arbitrary unix groups on boss/ops','<p>\r\nTo add a user to an arbitrary unix group on boss and ops (say, <b>wheel</b>\r\nor bin or operator) you need to add a entry to the database so that\r\nthe Emulab account system knows about it. Editing /etc/group on boss\r\nand ops will not work since those changes will be removed by Emulab\r\naccount system later. To permanently add someone to the <tt>wheel</tt>\r\ngroup:\r\n	<code><pre>\r\n	boss> withadminprivs /usr/testbed/sbin/unixgroups -a leebee wheel</pre></code>\r\n\r\nUse the \'-r\' option to later remove a user from a group. To dump the\r\ncurrent contents of the DB\'s auxiliary unix groups table, use the \'-p\'\r\noption.\r\n</p>\r\n<p>\r\n<b>Note that testbed administrators are automatically added to the\r\n<tt>wheel</tt> group on boss and ops.</b>\r\n\r\n\r\n',NULL,0,'2005-10-29 08:20:49','stoller',282,0,NULL,NULL,0),(83,'stack',424,'2005-10-31 10:55:15','Using the Testbed','Where are the Emulab command-line tools located?','<p>\r\nEmulab provides several handy command-line tools on the \'users\' node in the\r\n\'/usr/testbed/bin\' directory.  The experimental nodes have the same directory, although it contains only a few of the tools.  You can add the directory\r\nto your shell PATH by editing your .cshrc and adding:\r\n\r\n<pre>\r\nsetenv PATH ${PATH}:/usr/testbed/bin\r\n</pre>\r\n\r\nOr, if you use bash:\r\n\r\n<pre>\r\nexport PATH=${PATH}:/usr/testbed/bin\r\n</pre>',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(84,'stack',424,'2005-11-01 15:28:39','Setting Up a New Emulab','Python, Swig, and m2crypto incompatibilities','<p>\r\nDue to some changes in the way SWIG lays out its native objects, some parts of Emulab may fail to work.  Here are some of the common symptoms:\r\n\r\n<ul>\r\n<li>The python scripts in /usr/testbed/bin fail due to an exception in the m2crypto code.\r\n<li>The event system fails with an XML-RPC error.\r\n<li>The XML-RPC server rejects connections.\r\n</ul>\r\n\r\nThe solution is to downgrade SWIG to 1.3.23 and rebuild/reinstall m2crypto with this older version of SWIG on both boss and ops.  The XML-RPC server runs on boss and uses the m2crypto library, so it should be restarted as well.\r\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(85,'stoller',282,'2005-11-08 07:52:33','Setting Up a New Emulab','Whats that Cross Reference Tag in the Knowledge Base entry used for?','The reason for the \"cross reference tag\" in the kb entry is so that you can do this:\r\n	<code><pre>\r\n	href=\"../kb-show.php3?xref_tag=tiptunnel\"</pre></code>\r\n\r\ninstead of:\r\n	<code><pre>\r\n	href=\"../kb-show.php3?idx=39\"</pre></code>\r\n\r\nThe former makes it possible to export the KB without worrying about how\r\nthe remote DB loads the entries.\r\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(86,'stoller',282,'2005-11-08 07:55:43','Setting Up a New Emulab','Whats that Faq Entry checkbox in the Knowledge Base entry used for?','The <em>Faq Entry</em> checkbox indicates whether the Knowledge Base\r\nentry should be displayed on the generic emulab <a href=kb-faq.php3>\r\nFAQ</a> page. Displaying all of the KB entries in the FAQ would be\r\ninformation overload for most people, so the Faq Entry checkbox is\r\nused to restrict the FAQ page to just the things that clueless users\r\nreally need to know.\r\n',NULL,0,'2005-11-08 08:08:23','lepreau',12,0,NULL,NULL,0),(87,'stoller',282,'2005-11-11 07:55:14','Setting Up a New Emulab','Does Emulab use NTP?','<p>\r\nYes, Emulab uses NTP (<a href=www.ntp.org/>Network Time Protocol</a>)\r\nto keep all of the clocks synchronized. The typical setup is for\r\nyour boss node to act as a client, keeping in sync with external\r\nservers and peers. Your ops node also acts as a client (using external\r\ntime servers), but also acts as a server for your experimental nodes.\r\n</p>\r\n<p>\r\nThe Emulab installation process creates a CNAME in your named setup\r\nfiles, called <tt>ntp1</tt>, which is really an alias for your ops\r\nnode. In addition, all of the generic images that you get from Utah\r\ninclude <tt>ntp.conf</tt> files that specify <tt>ntp1</tt> as their\r\nNTP server.\r\n</p>\r\n<p>\r\n','NTP',0,NULL,NULL,0,0,NULL,NULL,0),(88,'mike',27,'2005-11-16 09:28:40','Hardware Setup','What is the control net and how do I identify it on a node?','<h4>What is the \"control network\"?</h4>\r\n\r\nAll experimental nodes in the testbed are connected to a common LAN\r\ncalled the control network.  The control network is used for a variety\r\nof purposes including: loading node disks, allowing nodes to communicate\r\nwith the Emulab infrastructure, and allowing access to the nodes from outside.\r\nFor a more complete description see\r\n<a href=\"tutorial/tutorial.php3#ControlNet\">\r\nthe tutorial section</a>.\r\n<p>\r\nThe fact that it is a shared LAN has many implications for applications,\r\nincluding for\r\n<a href=\"kb-show.php3?xref_tag=no-traffic-shaping\">\r\ntraffic shaping\r\n</a> and\r\n<a href=\"kb-show.php3?xref_tag=cnet-routing\">\r\nrouting</a>.\r\nAll stem from the fact that\r\nnetwork traffic can traverse the control network between experiment nodes\r\nrather than the designated topology.  Again, refer to the tutorial for\r\nmore details.\r\n\r\n<h4>How do I identify the control network interface on a node?</h4>\r\n\r\nSince different types of nodes may have different control net interfaces and\r\ndifferent OSes identify the interfaces in different ways, you cannot just\r\nhardwire a particular name in your scripts.\r\n<p>\r\nInstead, use the file <code>/var/emulab/boot/controlif</code> which, on any\r\nexperiment node, contains the name of the control network interface.  For\r\nexample, you could do:\r\n<pre>\r\n<code>\r\n    tcpdump -i `cat /var/emulab/boot/controlif`\r\n</code>\r\n</pre>\r\n\r\n','what-is-cnet',1,'2005-11-16 09:36:27','mike',27,0,NULL,NULL,0),(89,'kwebb',10109,'2005-12-08 13:17:55','Using the Testbed','Can I specify specific network interfaces on the nodes for the links in my topology?','<p>\r\nAt this time it isn\'t possible to bind the links in your experiment to specific interfaces on the nodes.  However, most people can abstract away the need to know which interface is being used for what by utilizing mapping information catalogued on each individual node.\r\n<br><br>\r\nFor example, the file  /var/emulab/boot/ifmap contains mappings from IP and MAC address to network interface.  A typical entry looks like this:\r\n<br><br>\r\n<code>\r\nem2 10.1.143.2 000423b73e88\r\n</code>\r\n<br><br>\r\nWhere the fields are: {interface name} {IP address} {MAC address}.  This mapping file can easily be parsed by a simple script or snippet of code.\r\n</p>\r\n\r\n<p>\r\nIf you are using automatic IP assignment (which most people do, and should in most cases!), then you may not know which IPs you will be using ahead of time, but will instead know which next hop or end node you wish to communicate with.  In this case, the /etc/hosts file is the first place to start since it contains mappings from {hostname} and {hostname}-{linkname} to IP address (more information on node naming can be found <a href=\"http://www.emulab.net/kb-show?xref_tag=node-naming\">here</a>.)\r\nOnce you have the IP address you care about, you can use the \"route get\" command on FreeBSD or the \"ip route get\" command on Linux to find out which interface will transmit packets destined to that IP.\r\n</p>\r\n\r\n<p>\r\n<b>NOTE:</b> Please be aware that when using automatic IP assignment, IP addresses are consistent across swapins for links in your topology <b>only</b> if you do not modify or recreate (terminate then create) your experiment.  I.e., swapin and swapout operations will not alter the IP assignment, but other operations will re-run the IP assigner.\r\n</p>\r\n','map-interfaces',1,'2005-12-08 13:33:55','kwebb',10109,0,NULL,NULL,0),(90,'stoller',282,'2006-01-17 07:50:28','Using the Testbed','So you want to teach a class using Emulab?','<p>\r\nSure, Emulab has been used to teach many classes!\r\n(<a href=\"doc/docwrapper.php3?docname=exclasses.html\">partial list</a>) From our\r\nperspective, there is no significant operational difference between a\r\nproject that is doing research and a project that has been started to\r\nteach a class. However, there are a few things that <b>you, the\r\nprofessor</b> have to keep in mind.\r\n\r\n<ul>\r\n<li> Please start a new project for each new class number; the name of\r\n     the project should be the same as the name of the class.\r\n<br><br>\r\n\r\n<li> If you have TAs, then you should grant them <em>group_root</em>\r\n     privileges so that they can handle day to day stuff like\r\n     approving new project members, creating subgroups, etc.\r\n<br><br>\r\n\r\n<li> Note that by default, all people in a project are in the same\r\n     group and can see other people\'s work in /proj and can access other\r\n     people\'s experiments.\r\n     You should read the tutorial on <a href=groups.html>sub groups</a>,\r\n     if it is necessary to partition class members into independent\r\n     groups where members of one group should not be able to access\r\n     the work of another group.\r\n<br><br>\r\n\r\n<li> Students should be instructed to read the <a href=faq.php3>FAQ</a> and\r\n     the <a href=tutorial/tutorial.php3>tutorial</a> so they\r\n     understand what Emulab can do and how to use Emulab. The biggest\r\n     stumbling block for students is recognizing that Emulab grants\r\n     access to real hardware, all the way down to the bits on the disk.\r\n<br><br>\r\n\r\n<li> Most important, <b>you and your TAs</b> are the first resource for\r\n     answering questions from students. Students should not contact us\r\n     until they have first contacted you or your TAs.  There are a variety\r\n     of collaboration tools available to assist in \"self help\", in particular\r\n     <a href=\"http://www.emulab.net/kb-show.php3?xref_tag=maillist-admin\">\r\n     per-project and per-group mailing lists</a> can be extremely valuable.\r\n     If you are unable to answer a question about Emulab, then by all means\r\n     please contact us.\r\n<br><br>\r\n\r\n<li> Bug reports and questions should include the project name, the\r\n     experiment name, any node IDs on which a problem is present.\r\n     Please, no questions of the form \"my software does not work on\r\n     Emulab; whats wrong?\" We do not have the resources to debug\r\n     your software problems.\r\n<br><br>\r\n\r\n<li> Emulab is a finite resource, consider this when making assignments.\r\n     While 300+ machines may seem like a lot, they don\'t go very far if\r\n     you have 10 groups in the class, each trying to do a project requiring\r\n     30 nodes, the night before the assignment is due.\r\n\r\n</ul>\r\n</p>\r\n',NULL,1,'2007-03-09 08:18:01','ricci',1182,0,NULL,NULL,0),(91,'stoller',282,'2006-01-17 16:56:26','Getting Started','How do I change my email address?','<p>\r\nSorry, we have to do that for you. Just send a message to \r\nTestbed Operations, and we will verify the email address works, and then\r\nchange it for you.\r\n</p>\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(92,'stoller',282,'2006-01-19 14:40:16','Using the Testbed','Linking to Emulab from your project home page','<p>\r\nSince we provide this service free of charge to the research\r\ncommunity, we would greatly appreciate it if you would add a link to\r\nus on your project home page. One such example would be:\r\n<br><br>\r\n\r\n<blockquote>\r\n\r\n<a href=\'http://www.emulab.net\'>\r\n   <img style=\'width:200px; height:auto;\'\r\n   src=\'http://www.emulab.net/logo-emulab.gif\'></a><br>This work made\r\n   possible, in part, by the good people at\r\n   <a href=\'http://www.emulab.net\'>Emulab.Net</a>\r\n</blockquote>\r\n<br><br>\r\nbut of course it is up to you! The logo above can be scaled bigger or smaller, as you like, although much smaller and its hard to see what it is. \r\n',NULL,0,'2006-01-19 15:09:38','stoller',282,0,NULL,NULL,0),(93,'stack',424,'2006-01-24 09:47:38','Troubleshooting','Why does my NS file not parse correctly anymore?','<p>\r\nWe are now running NS files through the real NS parser as a check that our own parser is functioning correctly. This change should not cause a problem for most files, however, there is some syntax that works in our parser but not the real one. For example, the following NS would not parse correctly anymore because the \"node1\" and \"node2\" strings are not variable references:\r\n\r\n<pre>\r\n  set node1 [$ns node]\r\n  set node2 [$ns node]\r\n\r\n  $ns make-lan \"node1 node2\" 10Mbps 0ms\r\n</pre>\r\n\r\nThe fix is simply to prefix them with dollar signs:\r\n\r\n<pre>\r\n  $ns make-lan \"$node1 $node2\" 10Mbps 0ms\r\n</pre>\r\n\r\nIn cases where the variable name is constructed programmatically, you can use the \"set\" command to get the value of the variable. For example, to fix the following NS:\r\n\r\n<pre>\r\n  for {set i 0} {$i < 10} {incr i} {\r\n    set name node$i\r\n    set $name [$ns node]\r\n    append lanstr \"$name \"\r\n  }\r\n  $ns make-lan $lanstr 10Mbps 0ms\r\n</pre>\r\n\r\nYou would change the \"append\" line to get the value of the variable specified by the \"name\" variable like so:\r\n\r\n<pre>\r\n    append lanstr \"[set $name] \"\r\n</pre>\r\n','stricter_ns',1,NULL,NULL,0,0,NULL,NULL,0),(94,'ricci',1182,'2006-01-24 17:10:33','Using the Testbed','What topology generators work with Emulab?','In theory, you can use any topology generator whose output you can convert\r\nto NS. Some can do this natively.\r\n\r\nHowever, there are a few issues to be aware of. First, most topology generators\r\ndo not annotate their topologies with bandwidth, latencies, etc. You may have\r\nto do this yourself, and it won\'t always be obvious what you should set them to.\r\nSecond, topology generators can often produce experiments that can\'t be\r\ninstantiated on Emulab. They may generate topolgoy generators that simply have\r\ntoo many nodes, or they make use too many links on some hosts.\r\n\r\n<h4>Some Known Topology Generators</h4>\r\n<ul>\r\n    <li><a href=\"http://www.cs.bu.edu/brite/\">BRITE</a> is the generator most\r\n        suited to Emulab. You can decide how many nodes you want, and it can\r\n        produce NS files with bandwidths and latencies.</li>\r\n    <li><a href=\"http://www.cc.gatech.edu/projects/gtitm/\">gt-itm</a> is another\r\n        good generator, but you will have to convert its output to NS, and it\r\n        does not provide latencies and bandwidths.</li>\r\n    <li><a href=\"http://topology.eecs.umich.edu/inet/\">inet</a> generates only\r\n        very large topologies (several thousands nodes), so it is not a good\r\n        match for Emulab.</a>','generators',1,'2006-08-29 16:34:38','mike',27,0,NULL,NULL,0),(95,'ricci',1182,'2006-01-25 13:47:07','Troubleshooting','I got an error in my swapin that says \'Temporary Resource Shortage\' - what does it mean?','<p>\r\n<code>assign</code> is the program that takes your virtual topology and\r\nEmulab\'s physical topology, and decides which nodes, links, etc. to\r\ninstantiate your experiment on. So, if it fails, we were not able to find\r\nsuitable nodes for your experiment.\r\n</p>\r\n\r\n<p>\r\nWe first run <code>assign</code> with the currently available physical topology.\r\nIf it finds a mapping, we swap your experiment in. If it fails, we try again, but\r\non the full Emulab topology - the whole testbed, as if it were empty. This way,\r\nwe can help you distinguish between experiment that simply cannot be swapped in\r\nright now, and ones that have a topology that we cannot instantiate for some\r\nreason.\r\n</p>\r\n\r\n<h3>Precheck errors returned by <code>assign</code></h3>\r\n\r\n<p>\r\nWhen <code>assign</code> starts, it does some &quot;Type prechecks&quot; and\r\n&quot;Mapping Prechecks&quot; to find some common types of errors. In this\r\ncase, we can usually tell you exactly which nodes in your virtual topology was\r\na problem, and why.  If the error message says\r\n<font color=\"red\">available nodes</font>, it means that there are not enough\r\nfree nodes of the type available right now.  If it says \r\n<font color=\"red\">suitable nodes</font>, this means that there are enought nodes\r\nof the type available, but some of them are not suitable for your experiment.\r\nSay, for example, that some of the nodes in your topology request a large\r\nnumber of interfaces. This message could then mean that there are enough\r\nfree PCs, but not enough free PCs that meet your interface requirements.\r\n</p>\r\n\r\n<h4>Type Precheck Errors</h4>\r\n\r\n<dl>\r\n    <dt><font color=\"red\">No physical nodes of type T found</font></dt>\r\n    <dd>One or more of your nodes requested to be placed on a physical\r\n    node of type T. This usually means that there are simply no nodes\r\n    of that type available right now. In the case of a mapping failure\r\n    on an empty testbed, though, it means that you asked for a type\r\n    of node we don\'t have.</dd>\r\n\r\n    <dt><font color=\"red\">X  nodes of type T requested, but only Y found\r\n        </font></dt>\r\n    <dd>Similar to the error above; there were some nodes of type T available,\r\n    but not enough for your experiment</dd>\r\n\r\n    <dt><font color=\"red\">X  nodes of type T requested, but you are only\r\n        allowed to use Y</font></dt>\r\n    <dd>Similar to the two above, but in this case, the issue is not with the\r\n    available physical topology, but with Emulab policies which limit the number\r\n    of nodes of a given type you\'re allowed to use.</dd>\r\n\r\n    <dt><font color=\"red\">No physical nodes can satisfy vclass V</font></dt>\r\n    <dd>You have asked for a virtual equivalence class, but there are no nodes\r\n    available that fit your request for the class.</dd>\r\n</dl>\r\n\r\n<h4>Mapping Precheck Errors</h4>\r\n\r\n<p>\r\nThese errors take the form: <font color=\"red\">&quot;No possible mapping for\r\n    N: E&quot;</font>, where N is the name of one of the nodes in your virtual\r\ntopology, and E is some error message. Usually, there will be only one error,\r\nthough in some rare cases, there could be more.\r\n\r\n<dl>\r\n    <dt>No links of type T found</dt>\r\n    <dd>Node N had at least one link of type T (the default link type, if you\r\n    don\'t specify one, is Ethernet), but we didn\'t find any physical links of\r\n    that type in the testbed.</dd>\r\n\r\n    <dt>Too many links of type T</dt>\r\n    <dd>We found some links of type T, but no physical node had enough to\r\n    satisfy node N. For example, if you ask for 5 Ethernet links on the same\r\n    node, Utah\'s Emulab will not be able to instantiate your experiment, since\r\n    its nodes currently only have 4 links.</dd>\r\n\r\n    <dt>Too much bandwidth on emulated links!</dt>\r\n    <dd>If you\'re using multiplexed links, you will get this error if the\r\n    total bandwidth to and from some virtual node exceeds the total amount\r\n    of bandwidth on any of our nodes. For example, if all nodes in the testbed\r\n    have 4 100Mbit links, and one of your vnodes has 500Mbits of aggregate\r\n    bandwidth across all of its links, you will get this error.</dd>\r\n\r\n    <dt>No physical nodes have feature F</dt>\r\n    <dd><code>assign</code> uses a system of <em>features</em> and\r\n    <em>desires</em> to model miscellaneous mapping constraints.  Nodes in your\r\n    topology have <em>desires</em>, and we try to map those to\r\n    <em>features</em> on the physical testbed. One example of this is disk\r\n    images. We attach a <em>desire</em> to each node in your topology for the\r\n    disk image you\'ve requested for it. We then ensure that the physical nodes\r\n    that you get have a <em>feature</em> indicating that your OS on them.</dd>\r\n\r\n</dl>\r\n\r\n<h3>Other <code>assign</code> error messages</h3>\r\n\r\n<p>\r\n<code>assign</code> is a big, complex program that uses a randomized heuristic\r\nto find solutions to an NP-hard problem. Thus, some types of failures are\r\nmore difficult than those above to attribute to a specific node or link.\r\n<code>assign</code> calls these <em>violations</em> of its mapping constraints.\r\nBelow we give a brief description of what each type of violation means. Each\r\nviolation is associated with an integer, which tells you how many violations\r\nof that type there were.\r\n</p>\r\n\r\n<dl>\r\n    <dt><code>unassigned</code></dt>\r\n    <dd>One or more of the nodes in your topology was not mapped. This could\r\n    come from a number of sources: there might not be enough nodes of the\r\n    right type free, there may not be enough nodes with enough interfaces\r\n    of sufficient speed available, etc.</dd>\r\n\r\n    <dt><code>pnode_load</code></dt>\r\n    <dd>If you were trying to instantiate an experiments with vnodes, then\r\n    the best mapping found by <code>assign</code> places too many vnodes onto\r\n    at least one physical nodes. This is most often caused by insufficient\r\n    physical nodes being available.</dd>\r\n\r\n    <dt><code>no_connect</code></dt>\r\n    <dd><code>assign</code> didn\'t find a mapping for a link for which both of\r\n    the endpoints were assigned. For example, if you asked for two nodes of a\r\n    type which don\'t have gigabit interfaces, and a gigabit link between them,\r\n    you would get this violation.</dd>\r\n\r\n    <dt><code>link_users</code></dt>\r\n    <dd>When using vnodes, this violation means that the best solution\r\n    <code>assign</code>has found mixes multiplexed and non-multiplexed\r\n    virtual link on the same physical link, which is not allowed. This\r\n    likely means that you\'ve asked for too many links on one vnode, or its\r\n    links ask for too much bandwidth.</dd>\r\n\r\n    <dt><code>bandwidth</code></dt>\r\n    <dd><em>assign</em> tries to avoid artifacts from over-use of bottleneck\r\n    links in the testbed\'s physical topology by limiting the traffic across\r\n    inter-switch trunks. This violation means that in the best solution found,\r\n    an inter-switch link was oversubscribed. The most common cause of this is\r\n    big (>50 node), high speed LANs. Consider using a different topology.</dd>\r\n\r\n    <dt><code>desires</code></dt>\r\n    <dd>See the section on desires above - this violation means that\r\n    <code>assign</code> was not able to fulfill all of the desires in your\r\n    submitted topology</dd>\r\n\r\n    <dt><code>vclass</code></dt>\r\n    <dd>If you put a <code>tb-make-hard-vtype</code> in your NS file, this\r\n    violation means that <code>assign</code> was unable to find a solution\r\n    that fit the constraints of your vtype.</dd>\r\n\r\n    <dt><code>delay</code></dt>\r\n    <dd>This type of violation is currently not generated</dd>\r\n\r\n    <dt><code>trivial_mix</code></dt>\r\n    <dd>This type of violation is currently not generated</dd>\r\n\r\n    <dt><code>subnodes</code></dt>\r\n    <dd>Some nodes are hosted \'in\' or \'on\' other nodes. For example, the IXP\r\n    network processors are hosted inside of a PC, and sensor net motes are\r\n    hosted on a programming board. This violation means that\r\n    <code>assign</code> was unable to find a mapping in which the host and\r\n    subnode in your topology correspond to a host/subnode pair in the\r\n    physical topology.</dd>\r\n\r\n    <dt><code>max_types</code></dt>\r\n    <dd>Emulab policy may prevent you from using too many nodes of a given\r\n    type at a time. This violation indicates that the best solution found\r\n    used too many nodes of some type</dd>\r\n\r\n    <dt><code>endpoints</code></dt>\r\n    <dd>This type of violation is currently not generated</dd>\r\n\r\n</dl>\r\n\r\n','assignfail',1,'2006-04-04 15:12:23','ricci',1182,0,NULL,NULL,0),(96,'stoller',282,'2006-01-28 09:58:54','Customizing your experiment','How to build your own delay kernel','<p>\r\nTo build your own delay kernel, first log into one of your delay nodes and\r\ncopy over the sources:\r\n	<code><pre>\r\n	cd /usr\r\n	sudo tar xzf /share/freebsd/4.10/src.tar.gz	</pre></code>\r\n\r\nMake whatever changes you need. For example, the code for traffic\r\nshaping is contained in <tt>/usr/src/sys/netinet/ip_dummynet.c</tt>.\r\nThen build a new kernel:\r\n	<code><pre>\r\n	cd /usr/src\r\n	sudo make buildkernel KERNCONF=TESTBED-DELAY	</pre></code>\r\n\r\nand install it:\r\n	<code><pre>\r\n	sudo cp /usr/obj/usr/src/sys/TESTBED-DELAY/kernel /kernel.10000HZ\r\n	sudo cp -p /kernel.10000HZ /kernel.delay\r\n	sudo cp -p /kernel.10000HZ /kernel		</pre></code>\r\n\r\nand reboot:\r\n	<code><pre>\r\n	sudo reboot					</pre></code>\r\n	\r\nIf you want to use this image on other delay nodes in future\r\nexperiments, <a href=\"tutorial/tutorial.php3#CustomOS\">create a custom\r\nimage</a>. In your NS file:\r\n	<code><pre>\r\n	tb-set-delay-os XXX-XXX				</pre></code>\r\n</p><p>\r\nA similar procedure is used to build the so-called \"link delay\" kernel\r\nwhich is used for\r\n<a href=\"doc/docwrapper.php3?docname=linkdelays.html\">end-node shaping</a>\r\nand for\r\n<a href=\"tutorial/docwrapper.php3?docname=vnodes.html\">virtual nodes</a>.\r\nUsing the same source tree copied above, build a new kernel:\r\n	<code><pre>\r\n	cd /usr/src\r\n	sudo make buildkernel KERNCONF=TESTBED-LINKDELAY	</pre></code>\r\n\r\nand install it:\r\n	<code><pre>\r\n	sudo cp /usr/obj/usr/src/sys/TESTBED-LINKDELAY/kernel /kernel.1000HZ\r\n	sudo cp -p /kernel.1000HZ /kernel.linkdelay\r\n	sudo cp -p /kernel.1000HZ /kernel		</pre></code>\r\n\r\nand reboot:\r\n	<code><pre>\r\n	sudo reboot					</pre></code>\r\n</p><p>\r\nHere you will need a new kernel on <i>all</i> nodes since there will be\r\nno delay nodes.  Thus, you will probably want to build a custom image.\r\n','delay_kernel',0,'2007-03-28 10:12:41','fish',30775,0,NULL,NULL,0),(97,'mike',27,'2006-02-02 11:23:54','Hardware Setup','What are the limits for link shaping?','There are four characteristics of an emulated link that can be shaped:\r\nbandwidth, delay (latency), packet loss rate, and queue sizes.\r\nShaping is performed either by dedicated shaping nodes or on the\r\nnodes themselves when using\r\n<a href=\"doc/docwrapper.php3?docname=linkdelays.html\">\r\nend node shaping</a>.  The fidelity\r\n(precision and accuracy) of shaping depends on the type of shaping used.\r\nThe lowest fidelity is achieved when using\r\n<a href=\"tutorial/docwrapper.php3?docname=vnodes.html\">\r\nmultiplexed virtual nodes</a>\r\n(which use virtual links and end node shaping),\r\nthe highest with dedicated shaping nodes (the default).\r\nMileage varies with end node shaping, depending on the applications in use,\r\nas shaping shares node resources (CPU cycles, memory) with the applications.\r\nThe limits below apply only to dedicated shaping nodes.\r\n<p>\r\n<a href=\"doc/docwrapper.php3?docname=linktest.html\">\r\nLinktest</a>\r\ncan be used to verify characteristics of all links in an experiment,\r\nwith possible limitations as explained in the list below.\r\n<p>\r\n<ul>\r\n<li><b>Bandwidth.</b>\r\nThe maximum possible bandwidth of a link is 1000Mb/sec (aka \"gigabit\")\r\nand is available on approximately half of our nodes\r\n(the <a href=\"doc/docwrapper.php3?docname=pc3000.html\">pc3000s</a>).\r\nThe maximum value\r\nfor which we have validated shaping is 100Mb/sec.  Values between 100Mb\r\nand 1000Mb may be possible, but we have not attempted any characterization.\r\nNote that the bandwidths of 100Mb and 1000Mb are special in cases where no\r\nother shaping parameters are specified (i.e., 0ms delay, no loss).\r\nIn these cases, no shaping is enabled (no shaping nodes allocated).\r\n<li><b>Delay.</b>\r\nThe minimum possible non-zero delay is 2ms.  This is due to the scheduling\r\ngranularity of the shaping nodes.\r\nThe maximum possible delay depends on the available buffering on the shaping\r\nnode and is proportional to the delay-bandwidth product of the links being\r\nshaped by that node.  In the default configuration, a delay node has\r\nbuffering for ~65,000 full-sized packets (the NMBCLUSTERS parameter of the\r\nFreeBSD kernel).  With a delay node shaping only a single, unidirectional\r\n100Mb/sec TCP stream (~8100 packets/sec) this would be adequate for about\r\n8 seconds.  Since packet buffers are a fixed size, extremely high packet\r\nrates can affect this dramatically.  So a node shaping two bidirectional\r\nUDP streams (four \"pipes\") with an aggregate packet rate of 60,000 pps\r\ncould handle about 0.25 second of delay per pipe.  In general, delays of\r\nless than one second are recommended.\r\n<li><b>Packet Loss Rate.</b>\r\nThe packet loss rates can range from 0 to 1.\r\nRecall that this is a probability, not a percentage;\r\ni.e., don\'t expect great things from a link with loss rate of 1.\r\n<li><b>Queue Size.</b>\r\nShaping \"pipe\" queue sizes cannot exceed 100 \"slots\" or one megabyte.\r\nFor more on queues, see the\r\n<a href=\"tutorial/docwrapper.php3?docname=advanced.html\">\r\nadvanced tutorial</a>.\r\n</ul>\r\n','link-shaping-limits',1,'2006-02-02 12:08:11','mike',27,0,NULL,NULL,0),(98,'ricci',1182,'2006-02-22 12:03:58','PlanetLab','Building binaries for PlanetLab','<p><code>PLAB-DEVBOX</code> is a disk image suitable for building binaries to\r\nrun on PlanetLab. It can also be used to help you <a href=\"kb-show.php3?xref_tag=plab-on-elab\">run your PlanetLab app inside\r\nEmulab</a></p>\r\n\r\n<p>\r\nAs you\'ve probably noticed, the PlanetLab nodes do not have a compiler installed\r\non them.  This is intentional - PlanetLab is intended for experimentation and\r\ndeployment, not development. You need to compile your binaries somewhere else,\r\nand copy the binaries to PlanetLab. You could try to build binaries on your\r\ndesktop Linux box, but unless you\'re running the same distribution as the\r\nPlanetLab nodes, you run the risk of shared library problems, and even\r\npotentially kernel ABI incompatabilities.\r\n</p>\r\n\r\n<p>\r\nYou have two choices for binary building. First, you can make your own\r\n\"DevBox\" using <a href=\"https://wiki.planet-lab.org/twiki/bin/view/Planetlab/DevBox\">PlanetLab\'s\r\ninstructions</a>. Or, if you don\'t have a spare box, or don\'t want to put in\r\nall that work, you can use one of Emulab\'s DevBox images. The latest is called   \r\n<code>PLAB-DEVBOX</code>, and it has been updated to reflect the changes in PlanetLab 4.x. It has all of the PlanetLab software, a kernel\r\nbased on the PlanetLab kernel, plus <code>gcc</code> and Java. It also has\r\nall of the standard Emulab test node configuration, so you\'ll get your account, \r\nhome directory, etc. We also supply a legacy DevBox via the <code>PLAB-DEVBOX-v3</code> image, which runs PlanetLab version 3.x software.\r\n</p>\r\n\r\n<p>\r\n\r\n</p>\r\n\r\n<p>\r\nIf you\'re comfortable with NS, you can just create an NS file yourself that\r\n<a href=\"kb-show.php3?idx=47\">requests</a> this image.\r\nOr, you can use our tool to\r\n<a href=\"nsgen.php3?template=plabdevbox\">automatically\r\ncreate</a> an NS file for you.\r\n</p>\r\n\r\n<p>\r\n<em>Disclaimer</em>: The PlanetLab <code>RESMAN</code> tools for changing\r\nresource limits currently do not work. We are working with the PlanetLab support staff to get them up and running.\r\n</p>\r\n\r\n<p>\r\nThis image is considered \"non-standard\", meaning that our level of support for\r\nit is lower than what we provide for the \"standard\" Emulab images. Still, if\r\nyou have any problems with it, let us know.\r\n</p>','PLAB-DEVBOX',0,'2007-03-15 16:56:07','johnsond',30817,0,NULL,NULL,0),(99,'stack',424,'2006-02-24 11:22:29','Using the Testbed','Isonet man page','<p>\r\nThe isonet wrapper script is part of the <i>libmultihome</i> package which\r\nis available in the following RPMs:\r\n</p>\r\n\r\n<ul>\r\n<li>RHL9 - /share/redhat/9.0/emulab-RPMS/libmultihome-0.1.1-1.i386.rpm\r\n<li>Fedora Core 2 (PlanetLab Images) - /share/fedora/FC2/emulab-RPMS/libmultihome-0.1.1-1.i386.rpm\r\n</ul>\r\n\r\n</PRE>\r\n<H2>SYNOPSIS</H2><PRE>\r\n       <B>isonet</B> [<B>-hVews</B>] [<B>-b</B> <I>ip</I>] <I>--</I> <I>utility</I>\r\n\r\n\r\n</PRE>\r\n<H2>DESCRIPTION</H2><PRE>\r\n       The <B>isonet</B> utility is used to isolate programs to the experimental net-\r\n       work  of  an  Emulab experiment.  Because Emulab nodes are connected to\r\n       multiple networks at the same time, the control network and one or more\r\n       experimental  networks, you may unwittingly have traffic traveling over\r\n       the wrong interface.  For example, instead of traveling through routers\r\n       and shaped links on the experimental network, packets may take the sin-\r\n       gle hop from one node to  the  destination  over  the  control  network\r\n       interfaces.   To help address this situation, <B>isonet</B> uses the <B>libmulti-</B>\r\n       <B>home(7)</B> library to intercept many of the standard networking  calls  to\r\n       \"hide\"  IP addresses from the program.  The result is that any attempts\r\n       to communicate over hidden networks generates a message and  halts  the\r\n       program.   Hopefully,  this should aid you in identifying misconfigura-\r\n       tions or adapting your programs to work on multi-homed hosts.\r\n\r\n       In addition to checking for accidental connections being made over  the\r\n       control	network,  <B>isonet</B> can change the arguments and results for some\r\n       functions.  This functionality is particularly useful  for  third-party\r\n       programs  that do not deal well with mult-homed hosts.  For example, if\r\n       a program is hard coded to <B>bind(2)</B> to the INADDR_ANY address,  you  can\r\n       force  it  to  use  an experimental address through the <B>-b</B> option.  The\r\n       library also changes the result of <B>gethostname(3)</B> to return the	node\'s\r\n       experimental  name  (e.g.  node0),  instead of the fully qualified name\r\n       (e.g. node0.foo.bar.emulab.net), which resolves to the control  network\r\n       address.\r\n\r\n       Available options:\r\n\r\n\r\n       <B>-h</B>     Print out a usage message.\r\n\r\n       <B>-V</B>     Print out version information and exit.\r\n\r\n       <B>-b</B> <I>ip</I>  Force  any  <B>bind(</B>INADDR_ANY<B>)</B>  calls  to  bind  to the given IPv4\r\n	      address instead.\r\n\r\n       <B>-e</B>     Log a message and return an error to the	program  (through  the\r\n	      function that was called), instead of stopping the program imme-\r\n	      diately.\r\n\r\n       <B>-w</B>     Log a message instead of stopping the program.\r\n\r\n       <B>-s</B>     Start a shell that has the  environment  variable  configuration\r\n	      needed to isolate any executed commands.\r\n\r\n\r\n</PRE>\r\n<H2>RETURN VALUES</H2><PRE>\r\n       The child\'s exit code.\r\n	      If  the child did not attempt to make an illegal connection, its\r\n              exit code will be returned.\r\n\r\n       <b>EX_SOFTWARE</b> (70)\r\n              There was an internal  software  error  in  the  libmultihome(7)\r\n              library.\r\n\r\n       <b>EX_NOPERM</b> (77)\r\n              The child tried to make an illegal connection.\r\n\r\n       <b>EX_CONFIG</b> (78)\r\n              The <b>isonet</b> script created an invalid configuration for the <b>lib-\r\n              multihome(7)</b> library.  Should not happen  in  normal  operation,\r\n              send a bug report if you encounter it though.\r\n\r\n\r\n</PRE>\r\n<H2>EXAMPLES</H2><PRE>\r\n       To isolate a <B>ttcp</B> sender and receiver:\r\n\r\n	      [vic@mxc1 ~] isonet -- ttcp -r -s\r\n\r\n	      [vic@mxc2 ~] isonet -- ttcp -t -s mxc2\r\n\r\n       An illegal connection with a <B>ttcp</B> sender and receiver:\r\n\r\n	      [vic@mxc1 ~] isonet -- ttcp -r -s\r\n	      (5970)isonet|Accepted connection from 155.98.36.139 to hidden IP\r\n	      (155.98.36.131).\r\n	      (5970)isonet|panic with exit code 77.\r\n\r\n	      [vic@mxc2 ~] isonet -- ttcp -t -s mxc2.foo.bar.emulab.net\r\n	      (6837)isonet|Connection through  hidden  IP  (155.98.36.139)  to\r\n	      155.98.36.131.\r\n	      (6837)isonet|panic with exit code 77.\r\n\r\n       To explicitly bind to an experimental interface:\r\n\r\n	      [vic@mxc1 ~] isonet -b 10.1.1.3 -- ttcp -r -s\r\n\r\n\r\n</PRE>\r\n<H2>BUGS</H2><PRE>\r\n       This  utility  will  not work with setuid or statically linked binaries\r\n       because it uses an LD_PRELOAD library, <B>libmultihome</B>,  to  detect  prob-\r\n       lems.\r\n\r\n\r\n</PRE>\r\n<H2>NOTES</H2><PRE>\r\n       While  this utility can detect many problems it <I>does</I> <I>not</I> guarantee that\r\n       no experimental traffic is flowing over the control network.  The  only\r\n       way  to	be  sure  is  to  monitor traffic with <B>tcpdump(1)</B> or a similar \r\n       packet capture tool.\r\n\r\n\r\n</PRE>\r\n<H2>SEE ALSO</H2><PRE>\r\n       <B>libmultihome(7)</B>, <B>tcpdump(1)</B>, <B>bind(2)</B>, <B>gethostname(3)</B>, <B>getifaddrs(3)</B>\r\n\r\n\r\n</PRE>\r\n<H2>AUTHOR</H2><PRE>\r\n       The Emulab project at the University of Utah.\r\n\r\n\r\n</PRE>\r\n<H2>NOTES</H2><PRE>\r\n       Emulab can found on the web at <I>http://www.emulab.net</I>\r\n\r\n\r\n\r\nlibmultihome 0.1.0		    Feb 24, 2006\r\n<B>ISONET(1)</B>\r\n</PRE>\r\n','isonet',0,'2006-02-24 15:37:15','stack',424,0,NULL,NULL,0),(100,'ricci',1182,'2006-02-24 15:28:55','PlanetLab','Moving back and forth between PlanetLab and Emulab','<p>\r\n<a href=\"http://www.planet-lab.org\">PlanetLab</a> gives you widely variable network and node conditions. This is its\r\nstrength - you\'re running on the real Internet.  Sometimes, though, you\'d rather\r\ndevelop, debug, or test under more controllable, repeatable conditions. Emulab\r\ncan help you out with this. This\r\ndocument will help you go back and forth between experimentation on Emulab and\r\nPlanetLab.\r\n</p>\r\n\r\n<p>\r\nWe have other, more comprehensive introductions to Emulab, but this one is\r\nspecifically targeted towards users familar with PlanetLab. Once you\'re done\r\nwith this one, you may want to <a href=\"doc.php3\">check them out</a>. We\r\nalso have a frontend to PlanetLab, which can help you create and manage slices.\r\nIt has a <a href=\"doc/docwrapper.php3?docname=plab.html\">separate document</a>.\r\n</p>\r\n\r\n<p>\r\nGetting an Emulab account is similar to getting a PlanetLab account - a PI from\r\nyour institution <a href=\"newproject.php3\">starts a project</a>, and then\r\nstudents, staff, etc. <a href=\"joinproject.php3\">join it</a>. The full process\r\nis documented <a href=\"docwrapper.php3?docname=auth.html\">here</a>.\r\n</p>\r\n\r\n<p>\r\nThe first difference to notice is the difference in experiment specification\r\nbetwen PlanetLab\r\nand Emulab.  An <em>Experiment</em> in Emulab is roughly equivalent to a\r\n<em>Slice</em> in PlanetLab. Whereas on PlanetLab, you pick from a list of\r\nnodes to instantiate your slice on, in Emulab, you supply a network topology\r\nwith information such as delay, bandwidth, and packet loss between the nodes.\r\nThis is done with a variant of the popular <code>ns</code> simulator language.\r\nEmulab then creates an emulation of that network for you, by picking nodes\r\nand links whithin our facility, and applying taffic shaping to get the\r\nnetwork characteristics you aksed for. This allows you control over your\r\nenvironment, and gives you very good repeatability.\r\n</p>\r\n\r\n<p>\r\nAnother difference is the way in which resources are allocated. In PlanetLab, the\r\nslivers in your slice are on shared machines. In Emulab, the nodes in your\r\nexperiment are not shared with anyone else - Emulab isolates experiments from\r\neach other so that your results will not be affected by any others that may\r\nbe running at the same time.  Thus, you are expected to only hold onto nodes\r\nwhile you are using them - if you go home for the night (and aren\'t running\r\nsome experiment overnight), you are expected to \"<a href=\"kb-show.php3?xref_tag=swapping\">swap out</a>\" your experiment so\r\nthat others can use the nodes. Emulab will, in fact, enforce this policy and\r\nswap you out automatically if it detects that your experiment has gone idle.\r\n</p>\r\n\r\n<p>\r\nSince you have exclusive access to the nodes in your experiment, you have\r\ncomplete root access. You\'re free to replace any disk contents you want,\r\netc. Emulab will clean off the disk for the next user once you\'re done\r\nwith it.  All users in a project (\"institution\" in PlanetLab) have their own\r\naccounts on the nodes, instead of the one-account-per slice model of PlanetLab.\r\nYou have an NFS home directory and project directory accessible on all of\r\nyour nodes. You can run several versions of Linux, FreeBSD, and Windows on the\r\nnodes in your experiment. If your goal is to build an application that can\r\nrun easily on both Emulab and PlanetLab, we suggest that you use our\r\n<a href=\"kb-show.php3?xref_tag=PLAB-DEVBOX\">PLAB-DEVBOX</a> disk image.\r\n</p>\r\n\r\n<p>\r\nPlanetLab gives you acess to real Internet path characteristics. Emulab, on\r\nthe other hand, creates the characteristics you\'d like to use in an Emulator.\r\nBasically, you tell us what packet loss, bandwidth, and delay you\'d like\r\nto see, and we create it artifically within our facility using traffic\r\nshaping. One way of creating Internet-like conditions in Emulab is to model\r\nthe InterNet as a fully-connected LAN. Unlike a reguar LAN, however, you\'ll\r\nbe able to set traffic shaping characteristics on every node, so that they\r\ncommunicate as if they were in different parts of the world rather than in the\r\nsame machine room. You can use the \r\n<a href=\"tutorial/docwrapper.php3?docname=nscommands.html#LOSS\">\r\n<code>tb-set-node-lan-*</code></a> commands to accomplish this.\r\n</p>\r\n\r\n<p>\r\nAnother important difference is the <a href=\"tutorial/docwrapper.php3?docname=tutorial.html#ControlNet\"><em>Control Net</a></em>, which exists on\r\nEmulab, but not on PlanetLab. The control net separates traffic that is\r\npart of your experiment and traffic that is for control. For example, when\r\nyou ssh into an Emulab node, you do so over the control network. Similarly,\r\nyour NFS home directory is mounted using the control network. The traffic\r\nshaping is done on the <em>Experimental Network</em>, and not on the control\r\nnetwork.\r\n</p>\r\n\r\n<p>\r\nThis means that you need to be aware of multi-homing issues. You\'ll need to\r\nmake sure that your application binds itself to the experimental net, not\r\nthe control net. To help you do this, we\'ve created a program called\r\n<a href=\"kb-show.php3?xref_tag=isonet\">isonet</a> which does this binding for you, without having to modify your\r\napplication.\r\n</p>','plab-on-elab',0,'2006-02-26 09:53:40','lepreau',12,0,NULL,NULL,0),(101,'kwebb',10109,'2006-02-27 13:19:43','Troubleshooting','I am running into errors while working in my home and/or project directory (or subdirectories).  What\'s going on?','<p>\r\nYou may have been bitten by undesireable behavior present in the way FreeBSD handles NFS mount permissions updates.  Each time Emulab swaps an experiment in or out, it must modify the set of allowed mounts on the Emulab fileserver to match the permissions required by the current set of experiments.  This means adding mount permissions for nodes swapping in as part of an experiment, or removing permissions for nodes belonging to an experiment that is swapping out.\r\n</p>\r\n<p>\r\nUnfortunately, the way mountd and the FreeBSD kernel currently perform this update involves momentarily clearing the entire mount permissions table, followed by installing the new, updated one.  Therefore, if you are interacting with files that happen to be located on an NFS mounted filesystem exported from the Emulab fileserver (e.g., files on /users or /proj), the lapse in permissions will result in errors such as \"permission denied\", \"stale NFS handle\", and \"No such file or directory.\"\r\n</p>\r\n<p>\r\nFixing the bad NFS mount permissions update behvior is a non-trivial task that we have not had the time to undertake.  We hope to do this at some point, but when this will happen is indeterminate.  In the meantime, there are a few things you can do to minimize the impact of this problem.  Most importantly, don\'t make a habit of running processes (especially long-running ones) that use files on NFS mounted filesystems.  The best approach is to make a local copy of the things you need and operate on that local copy.  This also helps cut down on the fileserver load.  There are several tools to help make this easier:\r\n</p>\r\n<p>\r\n<list>\r\n<li> Use the Emulab <a href=\"kb-show?xref_tag=load-software\">tarball feature</a> to lay down your files.\r\n<li> Pull back changes with the <a href=\"tutorial/docwrapper.php3?docname=loghole.html\">loghole</a> facility.\r\n<li> Use rsync to pull/push over your files.\r\n</list>\r\n</p>\r\n<p>\r\nMost Emulab nodes have an empty fourth disk partition you can setup and use if you need more space to work in.  Follow <a href=\"kb-show?xref_tag=local-space\">this link</a> for more information.\r\n</p>\r\n','bad-mountd',1,'2006-07-18 16:48:07','fish',30775,0,NULL,NULL,0),(102,'stoller',282,'2006-03-17 12:04:00','Using the Testbed','Resources Temporary Unavailable','An error of this type is likely because there are insufficient free nodes\r\nof the right type, although for a large experiment it can result\r\nfrom insufficient inter-switch bandwidth.\r\nYou can get a <a href=https://www.emulab.net/nodecontrol_list.php3>\r\nsummary</a> of free nodes by visiting this link:\r\n<a href=\"https://www.emulab.net/nodecontrol_list.php3\">\r\n   https://www.emulab.net/nodecontrol_list.php3</a>.\r\n<br>\r\n<br>\r\nFor help with\r\nspecific mapping errors, please see\r\n<a href=\"kb-show.php3?xref_tag=assignfail\">this knowledge base entry.</a>\r\n<br>\r\n<br>\r\nNote that <a href =\r\n\"http://www.emulab.net/docwrapper.php3?docname=hardware.html#tbpc3000w\">pc3000w</a>\'s\r\nare primarily wireless nodes and have various constraints so they rarely satisfy \r\nthe needs of wired experiments.\r\n<br><br>\r\nPlease do not try again until you see enough free nodes of the right types,\r\nand don\'t blindly re-submit over and over. Real people have to read the resulting\r\nerror mail!  Or, you can use the <a href=http://www.emulab.net/tutorial/docwrapper.php3?docname=tutorial.html#BatchMode>batch system</a> that queues your experiment and automatically retries every 10 minutes\r\nuntil it succeeds.\r\n','no_resources',0,'2006-05-25 09:31:28','stoller',282,0,NULL,NULL,0),(103,'mike',27,'2006-03-19 16:38:36','Operations and Policy','What does testbed-ops message \'WARNING: power controller(s) failed with exit value N\' mean?','If you get an e-mail message with the subject:\r\n<p>\r\nEMULAB.NET: WARNING: power controller(s) failed with exit value <em>N</em>\r\n<p>\r\nthen the \"powermon\" power controller monitoring program was unable to contact one of the serial line controlled power controllers.  This typically means that the serial line capture process on one or more of the controllers has died or gotten hung.  Occasionally, this message is generated as the result of a transient error (e.g., someone else is accessing a particular power controller when the monitor tries to do so).  To determine that, first do:\r\n<p>\r\nwap power status <em>name</em>\r\n<p>\r\nIf that command fails or hangs, the problem still exists.\r\nIn this case, you will need to login to the appropriate serial line controlling machine and start or restart the capture process.\r\n<p>\r\nYou can look in the database \"tiplines\" table to determine what machine is hosting a particular serial line (if you have multiple serial line hosting machines).  Then login and look in /usr/site/etc/capture.rc (Utah) or /usr/local/etc/rc.d/capture.sh (elsewhere) to see the necessary command line for starting the capture process.\r\n','pwr_ctl_fail',0,'2007-05-22 17:36:26','fish',30775,0,NULL,NULL,0),(104,'mike',27,'2006-03-21 09:38:33','Operations and Policy','How do I swapout a firewalled experiment that is paniced or failed to swapout?','If you are not a testbed administrator, contact testbed-ops.  This entry\r\nis for testbed admins.\r\n<p>\r\nOften times a transient problem will cause the swapout of a firewall experiment\r\nto fail and it will be up to you, Testbed-Ops Man, to tear it down.\r\nWe tend to be very cautious and leave such failed experiment swapped in,\r\nbut disabled in a couple of ways.  These ways are generally enumerated in\r\nthe failure mail:\r\n<code><pre>\r\n\r\n    Swapout of firewalled experiment &lt;PID&gt;/&lt;EID&gt; by &lt;UID&gt; failed!\r\n    Admin intervention required:\r\n\r\n    Failed to &lt;SOMETHING&gt; on &lt;NODES&gt;.\r\n\r\n    Current state of &lt;NODES&gt;:\r\n\r\n    Firewall is NOT in place\r\n    All nodes set to admin mode\r\n    All nodes are powered off\r\n    MAKE SURE THESE NODES DO NOT BOOT FROM DISK!\r\n    Firewall cnet interface &lt;NODE&gt;:&lt;PORT&gt; disabled\r\n\r\n</pre></code>\r\nThe ones that matter are whether the nodes have been powered off and whether\r\nthe firewall control net interface has been disabled.\r\n\r\nTo successfully swap the experiment out, you may need to do a variety of\r\nthings.\r\n<ul>\r\n<li><b>Mark experiment as no longer \"swapping\".</b>\r\nOccasionally, a failure will result in an experiment being left as \"paniced\"\r\nbut in the swapping state.  In this state there will be no menu item for\r\nswapping the experiment out.  So you first need to go into the DB and fix up\r\nthe state:\r\n<code><pre>\r\n        update experiments set state=\'active\' where pid=\'&lt;PID&gt;\' and eid=\'&lt;EID&gt;\';\r\n</pre></code>\r\n<p>\r\n<li><b>Reenable the firewall node control net interface.</b>\r\nIf the failure message says \"Firewall cnet interface ... disabled\", then\r\nyou will need to reenable the interface before re-trying the swapout.  If you\r\ndo not, cleanup of the firewall node can never succeed since it will never\r\nPXE boot.  To reenable, use snmpit:\r\n<code><pre>\r\n        wap snmpit -e &lt;NODE&gt;:&lt;PORT&gt;\r\n</pre></code>\r\nwhere NODE and PORT are as given in the error message; e.g., \"pc1:4\".\r\n<p>\r\n<li><b>Power on the affected nodes.</b>\r\nIn most cases, you won\'t need to do this, since most experiments will go\r\nthrough the \"zap boot blocks phase\" whose first step is to power off the\r\nnodes anyway.  However, if the experiment was at security level 1 (\"Blue\"),\r\nthen nodes will not go through the power down step, and the regular node\r\nreload step will fail as the nodes cannot be power cycled (power cycling\r\nwill not turn on a powered off node).  So in this case, you will need to\r\nexplicitly power on the machines with the power command:\r\n<code><pre>\r\n        wap power on &lt;NODES&gt;\r\n</pre></code>\r\nwhere NODES is the list given in the failure message.  Or if that list is\r\ntoo long to cut/paste, try:\r\n<code><pre>\r\n        wap power on `wap node_list -e &lt;PID&gt;,&lt;EID&gt;`\r\n</pre></code>\r\n</ul>\r\nNow you should be able to retry the swapout.\r\nIf the swapout continues to fail due to either trying to boot into the admin\r\nMFS or when trying to run the boot block zapper, it is possible to avoid that\r\nstep.  If you do this, be aware that\r\n<b>you are circumventing part of our security measures!</b>\r\nSo don\'t do this unless you are confident that the nodes either are not\r\ncontaminated or that you will personally assure that they will not boot from\r\nthe disk.  At any rate, you can avoid the disk zap step by doing the following:\r\n<ul>\r\n<li><b>Set the machines to boot into the admin MFS.</b>\r\nWe don\'t actually force them into the MFS right now.  This step is just to\r\nensure that once we power on the nodes in the following step, they\r\nwill not automatically come up from the disk.\r\n<code><pre>\r\n        wap node_admin -n on &lt;NODES&gt;\r\n</pre></code>\r\n<p>\r\n<li><b>Clear the magic DB state.</b>\r\nMark the experiment as not paniced and at the lowest, firewall-enabled\r\nsecurity level:\r\n<code><pre>\r\n        update experiments set paniced=0,security_level=1 where pid=\'&lt;PID&gt;\' and eid=\'&lt;EID&gt;\';\r\n</pre></code>\r\n<p>\r\n<li><b>Perform standard cleanups.</b>\r\nReenable the firewall control net interface and power on the nodes:\r\n<code><pre>\r\n        wap snmpit -e &lt;NODE&gt;:&lt;PORT&gt;\r\n        wap power on &lt;NODES&gt;\r\n</pre></code>\r\n</ul>\r\nAnd now you can redo the swapout.  If things are still screwed up, talk to\r\nMike.\r\n',NULL,0,'2006-03-21 10:05:36','mike',27,0,NULL,NULL,0),(105,'mike',27,'2006-04-11 11:46:03','Operations and Policy','How can I control what boots on a node?','<b>NOTE:</b>\r\nThis entry is intended for administrators who want to control what PXE\r\nboots on a node as well as what MFSes are used.\r\n<p>\r\nIn Emulab, the nodes are hardwired to attempt a PXE boot only from the\r\ncontrol network interface.  So all boot redirection must be initiated\r\non the control net.\r\n<p>\r\nThere are two fields in the database which can be used to control what\r\nboot loader is downloaded by the PXE boot ROM.  If not NULL,\r\n<tt>node_types.pxe_boot_path</tt> contains a string that will be put\r\nin <tt>/usr/local/etc/dhcpd.conf</tt> as a \"filename\" option for all\r\nnodes of the indicated type.  This allows you to use a different PXE\r\nboot loader for a group of machines; e.g., a type of PC that does not\r\nhave serial port ports could use a VGA-only pxeboot program.\r\n<tt>nodes.pxe_boot_path</tt> allows for changing the PXE boot path\r\non a node-by-node basis.  If is different than the <tt>node_types</tt>\r\nfield in that it is cleared when a node is freed with <tt>nfree</tt>.\r\nThus it is intended to be used within an experiment, <em>not</em> as \r\na general mechanism.  The specific reason for this option was to allow\r\n\"PlanetLab in Emulab\" experiments where the inner PlanetLab nodes need\r\nto boot up in a Linux MFS for which we use\r\n<a href=\"http://syslinux.zytor.com/pxe.php\">PXELINUX</a>.\r\nNote that after changing either of these fields you will need to recreate the DHCP config file and restart the daemon.  You can do this with:\r\n<p>\r\n/usr/testbed/sbin/dhcpd_makeconf -ir\r\n<p>\r\nWhen <tt>nfree</tt> clears <tt>nodes.pxe_boot_path</tt> for a node, it\r\nwill automatically do this.  You only need to do it when setting the fields.\r\n<p>\r\nThe <tt>node_types</tt> table also contains two fields to allow for\r\nspecifying different\r\n\"admin\" (<tt>adminmfs_osid</tt>) and\r\n\"disk loader\" (<tt>diskloadmfs_osid</tt>) MFSes.  These are the\r\nmemory-based filesystem versions of FreeBSD that we use for creating\r\nand loading disk images.  Again, using the VGA-only example, we would\r\ndefine new OSIDs <tt>FRISBEE-MFS-VGA</tt> and <tt>FREEBSD-MFS-VGA</tt>\r\nidentical to the\r\nstandard versions except for the path column which would point to\r\nalternate /tftpboot directories.\r\n',NULL,0,'2006-04-11 11:50:31','mike',27,0,NULL,NULL,0),(106,'stoller',282,'2006-05-08 09:55:41','Using the Testbed','All things Java','We get many questions about Java on Emulab. The bulk of the questions\r\nfall into these categories:\r\n\r\n<ul>\r\n<li> Is Java installed?\r\n<br>\r\n<blockquote>\r\nNo, Java is not installed. It takes up a lot of space on the disk\r\nimages, and since only a small subset of researchers require Java, we\r\nlet those researchers deal with it themselves. Besides, everyone has\r\ntheir own idea of what version is best, so we do not try to guess.\r\n</blockquote>\r\n\r\n<li> What version of Java should I install?\r\n<br>\r\n<blockquote>\r\nSee answer to previous question! \r\n</blockquote>\r\n\r\n<li> How do I install Java?\r\n<br>\r\n<blockquote>\r\nGood Question! Seeing as we are operating system and network weenies,\r\nwe do not know much about installing the many different versions of\r\njava on all of the different operating systems we support. You are\r\nbasically on your own, but <a href=www.google.com>Google</a> is\r\ncertainly your friend and best source of information. Be sure to ask\r\nother members of your project for help as well, since other people\r\nhave probably walked this path before you. <p>\r\n\r\nNoting the previous disclaimers, here is one answer for inspiration\r\n(probably dated by the time you read this):\r\n  <blockquote>\r\nIt\'s quite easy to install a JDK on our FC4-STD image; just go to\r\n<a href=\"http://java.sun.com/javase/downloads/index.jsp\">\r\n         http://java.sun.com/javase/downloads/index.jsp</a>,\r\nclick the first download button for JDK 6, and then download the\r\n\"Linux self-extracting file\" from the next page.  Read the\r\ninstallation instructions!  For example,\r\n<a href=\"http://java.sun.com/javase/6/webnotes/install/jdk/install-linux.html#self-extracting\">\r\n  http://java.sun.com/javase/6/webnotes/install/jdk/install-linux.html#self-extracting</a>.\r\n  </blockquote>\r\n\r\n</blockquote>\r\n\r\n<li> My Java program does not work correctly. Can you help me?\r\n<br>\r\n<blockquote>\r\nThis should come as no surprise given the previous answers ... but you\r\nare absolutely <b>on your own</b> when it comes to debugging your Java\r\napplications. The best response you are likely to get from us is \"have\r\nyour rebooted your machine and power cycled your cable modem\"\r\n</blockquote>\r\n</ul>\r\n\r\n',NULL,0,'2007-03-16 09:23:38','fish',30775,0,NULL,NULL,0),(107,'mike',27,'2006-05-09 09:52:18','Software Setup','What FreeBSD kernels are available and what features do they include?','<h4>Available Kernels</h4>\r\nThe FBSD-STD (aka FBSD410-STD) image has way too many special purpose kernels.\r\nCurrently there is:\r\n<ul>\r\n<li><b>/kernel.100HZ</b>.\r\nThe default kernel, built to run with a 100HZ clock (100 clock interrupts per\r\nsecond).  It is built from the sources in\r\n<code>/share/freebsd/4.10/src/sys</code>\r\nwhich is the standard FreeBSD 4.10 source with some local customizations.\r\nIt is based on the GENERIC configuration, with many device drivers removed\r\nand the feature list modified slightly.\r\nThe exact configuration is in\r\n<code>/share/freebsd/4.10/src/sys/i386/conf/TESTBED</code>.\r\nThe significant features are: it is uniprocessor-only, has IPv6 and IPSEC\r\nsupport, has a larger than normal number of \"mbufs\" (network buffers),\r\nand includes support for the Linux ext2fs.\r\n<p>\r\nIt also includes a couple of local features for better integration in the\r\nEmulab environment.  <code>ICMP_PINGOFDEATH</code> is a feature to allow\r\nrebooting a machine with a special ICMP packet.  <code>MOUNTD_SUX_HACK</code>\r\nis a \"feature\" intended to avoid a problem with the BSD NFS server which will\r\nbriefly invalidate all exported filesystems when changing the export list.\r\n<p>\r\nThis kernel should be sufficient for most uses.\r\n<p>\r\n<li><b>/kernel.1000HZ</b> also known as <b>/kernel.linkdelay</b>.\r\nThe kernel used when you specify\r\n<a href=\"/doc/docwrapper.php3?docname=linkdelays.html\">end-node shaping</a>.\r\nIt runs at a higher clock rate (1000HZ) to improve the accuracy of shaping.\r\nIn addition to a higher clock rate, it also includes IPFW, dummynet, and\r\ndivert socket support, necessary for traffic shaping.  It also includes\r\nstill more mbufs.\r\nThe exact configuration is in\r\n<code>/share/freebsd/4.10/src/sys/i386/conf/TESTBED-LINKDELAY</code>.\r\n<p>\r\nYou might want to use this kernel if you need firewall or dummynet support.\r\nSee <a href=\"#AlternateKernel\">below</a> for directions on how to setup\r\nyour experiment to use this kernel.\r\n<p>\r\n<li><b>/kernel.10000HZ</b> also known as <b>/kernel.delay</b>.\r\nThis kernel is used on the so-called \"delay nodes\", traffic shaping nodes.\r\nSince the nodes are dedicated to moving packets between interfaces, it\r\nis customized for that purpose: a high (10,000HZ) clock rate, use of\r\npolling (rather than interrupt-driven) device drivers, and still more mbufs.\r\nIt includes the layer2 bridge code, in addition to the other options \r\nnecessary for traffic shaping (firewall, dummynet, ipdivert).\r\nThe exact configuration is in\r\n<code>/share/freebsd/4.10/src/sys/i386/conf/TESTBED-DELAY</code>.\r\n<p>\r\nYou could use this kernel if you need a high clock rate, bridging, or\r\npolling device drivers.  See <a href=\"#AlternateKernel\">below</a> for\r\ncustomizing and using this kernel.\r\n<p>\r\n<li><b>/kernel.jail</b>.\r\nThis is a highly specialized and non-standard kernel intended for use\r\nin our FreeBSD\r\n<a href=\"tutorial/docwrapper.php3?docname=vnodes.html\">virtual node</a>\r\nenvironment.  It has support for multiple routing tables in addition to\r\nthe other standard and linkdelay features.\r\nThe exact configuration is in\r\n<code>/share/freebsd/4.10/src/sys/i386/conf/TESTBED-JAIL</code>.\r\n<p>\r\nYou probably do not want to use this kernel for anything as the networking\r\ncode is sufficiently different and we have not characterized its behavior\r\nversus a standard kernel.\r\n</ul>\r\n<a NAME=\"AlternateKernel\"></a>\r\n<h4>Using an Alternate Kernel</h4>\r\nIn order to use the above kernels as the default kernel in an experiment,\r\nyou have to do a couple of things.  First, you can only do this to a swapped\r\nin experiment.  If you want to be able to specify using the kernel in future\r\nexperiments, you will have to make the changes below, and then save a\r\n<a href=\"tutorial/tutorial.php3#CustomOS\">custom image</a>.\r\n<p>\r\nSecond, you need to fool the Emulab scripts into thinking this is the\r\ncorrect kernel to be running.  If you want the delay kernel to be the\r\nstandard you would need to:\r\n<pre><code>\r\n        sudo cp -p /kernel.10000HZ /kernel.100HZ\r\n        sudo cp -p /kenrel.10000HZ /kernel\r\n</code></pre>\r\nas the Emulab scripts will double check that \"/kernel.100HZ\" is the same\r\nas \"/kernel\" and copy it and reboot if not.  If you specified linkdelays\r\nin your NS file, then you will need to copy it to /kernel.1000HZ instead\r\nas that is the kernel that the scripts will attempt to make standard.\r\n<p>\r\nIf you want to modify the clock rate of one of the standard kernels,\r\nyou can modify <code>/boot/loader.conf</code> and add, for example:\r\n<pre><code>\r\n        kern.hz=1000    # for 1000HZ (1ms)\r\n</code></pre>\r\nGoing above 10,000 or below 100 is not advised.\r\n\r\n','freebsd-kernels',1,'2006-05-09 09:59:52','mike',27,0,NULL,NULL,0),(108,'kevina',30825,'2006-05-24 16:49:49','PlanetLab','Setting up a private PlanetLab inside Emulab','<p>\r\nIt is now possible to set up a private PlanetLab inside Emulab.\r\n</p><p>\r\nThe current setup is based on the MyPLC package. For more information on\r\nMyPLC go to <a href=\"http://www.planet-lab.org/doc/myplc\"\r\n>http://www.planet-lab.org/doc/myplc</a>.\r\n</p>\r\n<p>\r\nA private PlanetLab inside Emulab (plab-in-emulab) experiment is the\r\nsame as a normal experiment except for a few special things.\r\nIn your NS file you declare one node to act as ``PlanetLab Central\'\' (PLC)\r\nusing the commands:\r\n<blockquote><code>\r\n  tb-set-node-os $plc PLAB-PLC<br/>\r\n\r\n  tb-set-node-plab-role $plc plc\r\n</code></blockquote>\r\nYou then also need to declare which nodes will act as PlanetLab nodes\r\nusing the command:\r\n<blockquote><code>\r\n  tb-set-node-plab-role $plab node\r\n</code></blockquote>\r\nfor each such node.\r\n</p>\r\n<p>\r\nSince MyPLC does not seem to support binding some key services (such as the\r\nbootserver and PLC API server) to multiple interfaces, you can setup your\r\nprivate PlanetLab to communicate either on the Emulab control network, which is\r\npublicly routable, or over experimental LAN interfaces.  Currently, the default\r\nis the control network.  If you wish to specify that the private PLC and\r\nassociated nodes should communicate over Emulab experimental LANs or links, you\r\nmust first setup those LANs and links, and then use the\r\n<code>tb-set-node-plab-plcnet</code> command to bind those nodes\' PLC\r\ncommunication to the specified LAN or link.  For instance, to force PLC\r\ncommunication to take place over a simple experimental LAN:\r\n<blockquote><pre>\r\nset innerPlanetLabLan [$ns make-lan \"$plc $node(1) $node(2)\" 100Mb 0ms]\r\n\r\ntb-set-node-plab-plcnet $plc $innerPlanetLabLan\r\ntb-set-node-plab-plcnet $node(1) $innerPlanetLabLan\r\ntb-set-node-plab-plcnet $node(2) $innerPlanetLabLan\r\n</pre></blockquote>\r\nYou can bind each node to any link or LAN you choose; however, you must ensure\r\nthat any nodes you wish to boot successfully can reach the private PLC.\r\nAll communications with PLC will take place over\r\n<code>innerPlanetLabLan</code>, with two exceptions.  First, you will still be\r\nable to access the private PLC website from the fully-qualified hostname of\r\nyour PLC nodes (i.e., https://plc.expname.projname.emulab.net).  Second, to\r\nautomate the PlanetLab node boot process, the nodes boot via TFTP from the PLC\r\nover the control network interface.  After TFTP communication, however, all\r\ncommunication between the node and PLC will occur over the experimental LAN, if\r\nyou have selected one.\r\n</p>\r\n\r\n<p>\r\nYou can use our <a href=\"/nsgen.php3?template=plinabox\">template</a> to\r\ncreate an NS file, or you can use the one below:\r\n</p>\r\n\r\n<blockquote><pre>\r\nset ns [new Simulator]\r\nsource tb_compat.tcl\r\n\r\nset num_pcs 2\r\n\r\nset plc [$ns node]\r\ntb-set-node-os $plc PLAB-PLC\r\ntb-set-node-plab-role $plc plc\r\ntb-set-hardware $plc pc3000\r\n\r\nset lan_string \"\"\r\n\r\nfor {set i 1} {$i <= $num_pcs} {incr i} {\r\n  set n($i) [$ns node]\r\n  tb-set-node-plab-role $n($i) node\r\n  append lan_string \"$n($i) \"\r\n}\r\n\r\nset lan [$ns make-lan $lan_string 100Mb 0ms]\r\n\r\n$ns rtproto Static\r\n$ns run\r\n</pre></blockquote>\r\n\r\n<p>\r\nEmulab currently provides several MyPLC images.  <emph>PLAB-PLC</emph> supports\r\nPLC 4.x and represents our best effort to emulate current production PlanetLab\r\nfunctionality (it is currently built using MyPLC 0.5.4-2007.03.14 with a couple\r\npatches, but with node kernel version 2.6.12-1-F398.7.planetlab from PlanetLab\r\n4.0.0-rc2). \r\n<emph>PLAB-PLC-NIGHTLYSAFE</emph> is the most recent nightly build that we have\r\ntested and verified is \"working\" enough to be usable.\r\n<emph>PLAB-PLC-NIGHTLY</emph> is built with the most recent nightly build, and\r\nwe make exactly zero guarantees as to its functionality. \r\n<emph>PLAB-PLC-v3</emph> supports PlanetLab 3.x.  See the end of this entry for\r\nnotes concerning the 3.x image.\r\n</p>\r\n<p>\r\nThe experiment will take around 5 - 10 minutes to swap in and then another 5\r\n- 10 minutes after that before all the PlanetLab nodes are ready.  The\r\nlarger the experiment, the longer it will take all the PlanetLab nodes to\r\nbecome ready, since they all must download bootstrap data from PLC.\r\nIt is not necessary to wait for all the PlanetLab nodes to become ready\r\nbefore creating slices.  The slices will be created on the nodes as they\r\nbecome ready.\r\nOnce created, slices on the PlanetLab nodes will become ready within\r\napproximately 5 minutes.  For information on how to speed this up\r\nsee section 3.4, ``Creating a slice\'\', in the <a\r\nhref=\"http://www.planet-lab.org/doc/myplc\">MyPLC user\'s\r\nGuide</a>.  In particular, make sure you add users and nodes to the new slice,\r\nor you will be waiting forever for the slice to appear on the nodes!\r\n</p>\r\n<p>\r\nOnce the PLC is setup, all members of the project will have a PLC account.  If\r\nyou normally have root access on the nodes you will \r\nreceive the \'admin\' role.  The creator of the experiment (and the user who\r\nswapped it in) will receive the \'pi\' and \'tech\' roles.  These accounts receive\r\nPlanetLab related emails.  All other users in your project will receive the\r\ndefault \'user\' role.\r\n</p>\r\n<p>\r\nYou can browse to your private PLC by visiting\r\n<code>https://&lt;plc&gt;.&lt;EID&gt;.&lt;PID&gt;.emulab.net</code>.  Once logged in, you can use\r\nthe MyPLC web interface to add slices, modify user account info, etc.\r\n</p>\r\n<p>\r\nYour username for PLC is your official Emulab email (i.e.,\r\n<i>username</i>@emulab.net).   You should login to the web interface using this\r\nemail and your normal Emulab password.  All of the version 2 ssh public keys in\r\nyour <code>~/.ssh/authorized_keys</code> file will be uploaded to your\r\nPLC so that you can login to private PlanetLab nodes easily.  You may also add\r\nadditional keys via the private PlanetLab website.\r\n</p>\r\n<p>\r\nOnce you login to your private PlanetLab nodes, you will notice that they are\r\nalso Emulab nodes.  This means that you will be able to login to the nodes\r\nindependently of PLC or a specific slice.  Normal Emulab tools, such as the\r\nevent system and linktest, should also run correctly.  We have attempted to\r\nmodify the normal Emulab node boot process so that it does not interfere with\r\nPlanetLab node fidelity.\r\n</p>\r\n<p>\r\nYou may swapmod your experiment to add or remove private PlanetLab nodes, but\r\nyou should not remove the PLC node, obviously.  The swapmod process will also\r\npick up any user account changes in the experiment\'s project.\r\n</p>\r\n\r\n<h3>Common Problems</h3>\r\n<p>\r\nWe have occasionally observed that <code>pc3000</code> nodes will hang during\r\nboot of the PlanetLab node kernel, often after you see a message of the\r\nfollowing type on the console output:\r\n<blockquote><pre>\r\nAllocate Port Service[0000:00:06.0:pcie00]\r\nAllocate Port Service[0000:00:06.0:pcie01]\r\n</pre></blockquote>\r\nThis seems to happen only after unclean shutdown (i.e., after forcing a power\r\ncycle from users.emulab.net with the <code>node_reboot</code> command).  If\r\nthis occurs, rebooting the node should get it out of the bad state.\r\n</p>\r\n\r\n<h3>Legacy PLAB-PLC-v3 image notes</h3>\r\n<p>\r\nThis image supports PLC 3.x, and can be used if you need to run or demonstrate\r\nlegacy code or applications.  These notes describe differences in functionality\r\nrelative to that supported PLC 4.x PLAB-PLC image, described above. \r\n</p>\r\n<p>\r\nThe PLC setup output is currently only sent to the console.  A failed setup\r\nwill not stop a swapin.  Once the PLC Setup completed successfully the\r\nfile <code>/planetlab/emulab/setup_passed</code>\r\nwill be written.\r\n</p>\r\n<p>\r\nAll control traffic between the PLC node and the private PlanetLab nodes\r\nis over the control net.\r\nHowever, you may connect the PlanetLab nodes themselves together\r\nvia a private LAN as there is\r\nbasic support for a private network.  In particular there is support\r\nfor bringing up <em>one</em> private interface on each node, but there is no\r\nsupport for adding routes.  This effectively means that all the\r\nPlanetLab nodes need to be on the same private LAN.  Neither of these\r\nconstraints is checked right now, so be sure they are met.\r\n</p>\r\n<p>\r\nYou should also turn off Linktest since it will fail anyway.\r\n</p>\r\n<p>\r\nThe output of the individual PlanetLab node setup is also sent to the\r\nconsole.  A setup log for each node is also uploaded to\r\n<blockquote><code>  http://&lt;plc&gt;/alpina-logs/nodes/</code></blockquote>\r\n\r\nwhere &lt;plc&gt; is the host name of the PLC node for your experiment\r\n</p>\r\n<p>\r\nPlanetLab 3.x supported only one public key, so\r\nwe upload the passphrase-less version 2 public key file,\r\n<code>~/.ssh/id_dsa</code>.  You are free the change it to something else.\r\n</p>\r\n<p>\r\nAll users who normally have root access on the nodes will also have\r\nroot access on the PlanetLab nodes.  You need to login as ``root\'\' using\r\none of your ssh keys found in <code>~/.ssh/authorized_keys</code>. (Unlike with\r\nthe slices all your public keys are used)\r\n</p>\r\n<p>\r\nFinally, note that modifying a plab-in-emulab experiment is currently not\r\nsupported.\r\n</p>','plinabox',0,'2007-03-27 08:09:08','johnsond',30817,0,NULL,NULL,0),(112,'stoller',282,'2006-05-31 07:51:02','Experiment Templates','Template Parameters','Emulab has added an NS extension specifically for use with Experiment\r\nTemplates:\r\n\r\n<blockquote>\r\n<pre>\r\n$ns define-template-parameter <i>name</i> <i>value</i>\r\n</pre>\r\n</blockquote>\r\n\r\n<br>\r\nA template <em>parameter</em> is a user defined variable that can be\r\noverridden when the template is later instantiated. Template parameters\r\nare bound when the NS file is parsed, and are made part of the\r\nenvironment on your experimental nodes via the\r\n<a href=\'tutorial/docwrapper.php3?docname=eventsystem.html#PROGRAM\'>\r\nprogram agent</a>. For example:\r\n\r\n<br><br>\r\n\r\n<blockquote>\r\n<code><pre>\r\n$ns define-template-parameter NodeCount 3\r\n$ns define-template-parameter OS RHL90-STD\r\n\r\nset maxnodes $NodeCount\r\n\r\nfor {set i 1} {$i <= $maxnodes} {incr i} {\r\n    set node($i) [$ns node]\r\n    tb-set-node-os $node($i) $OS\r\n}\r\n</pre></code>\r\n</blockquote>\r\n\r\nThe initial parse of your NS file will bind the template parameters to\r\ntheir default value. Later, when you instantiate your template, you\r\nwill be given an opportunity to (optionally) override the default\r\nvalues with new values. This allows you to more easily set up a series\r\nof experiments with varying arguments.\r\n\r\n\r\n\r\n\r\n','template_parameters',0,'2006-05-31 07:54:42','stoller',282,0,NULL,NULL,0),(261,'mike',27,'2006-06-12 15:37:00','Troubleshooting','What does the warning message \'due to delay implementation, odd delay value N for LAN may be rounded up\' mean?','If you specify a non-zero delay value in <tt>make-lan</tt> it indicates a one-way delay value for any node to any other on the LAN.  One-way LAN delays are implemented by performing half the delay at the sender and half at the receiver.  Thus an odd value (e.g., \"5ms\") would yield a fractional value for each side.  <tt>Dummynet</tt>, which implements delays on shaping nodes, can only handle whole number values and thus the fractional value would be rounded up.  The result is that a delay of 5ms would become 6ms in practice and would trigger a warning from <tt>linktest</tt>.\r\n<p>\r\nThis does <b>not</b> apply to <tt>tb-set-node-lan-delay</tt> or <tt>tb-set-lan-simplex-params</tt>, where the value given indicates the delay from the node to the LAN.','odd-delay-value',1,'2006-06-12 15:46:27','mike',27,0,NULL,NULL,0),(114,'ricci',1182,'2002-09-23 11:03:03','Testbed Operations','How can I clear machines classified dead?',' <p>\n\nTo add a machine back to the pool after it has been classified as dead,\nYou just need to free it from the <code>emulab-ops/hwdown</code> experiment. There\nare two ways to do this: <p>\n\nOn boss, you can run\n<pre>     nfree emulab-ops hwdown pc10</pre>\n\nThrough the web interface, if you\'re in admin mode, you will get a \n\"Free Node\" link on the node\'s page, which you can get to by clicking on the\nnode\'s name on the experiment page for the hwdown experiment. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(115,'ricci',1182,'2002-10-01 18:18:46','Testbed Operations','How can I change a project\'s head UID at approval time?',' <p>\n\n  There is a box to change the head of a project on the project approval\n  \"action\" page.  This will be used when a student applies to start\n  a project - we\'ll have the professor, PI, etc. apply to join the\n  project, then change the head UID when we approve it. <p>\n\n  It\'s okay that the project is not yet approved when the professor joins it. <p>\n\n  Changing the head uid is repected when _any_ action is taken\n  (postponing, more info requests, etc.) Any mail gets sent to the\n  new head, and NOT the old head. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(116,'mike',27,'2002-10-02 09:40:42','Testbed Operations','How do I reserve nodes for maintenance?',' <p>\n\nThere is a state that you can put nodes in, so\nthat they won\'t be allocated to normal user experiments. <p>\n\nThe easiest thing is to move them into one of the special experiments,\nmost likely hwdown:\n<pre>\n	nalloc emulab-ops hwdown pcXX ...\n</pre>\n\nIf you actually want to set up links and test interfaces, etc. then\nyou can just create your own experiment and explicitly allocate the\nnodes you want in the NS file with:\n<pre>\n	# ns: allocate a specific node\n	tb-fix-node $node pcXX\n</pre>\n\nof course, you will still be in a race with others to allocate the\nnode. <p>\n\nIf one of the nodes you want slips away and winds up in someone else\'s\nexperiment you can \"schedule\" it:\n<pre>\n	sched_reserve emulab-ops hwdown pcXX ...\n</pre>\n\nand when the node is freed, it winds up in emulab-ops/hwdown (you can\nactually use any pid/eid).  If you want to get it back right away, you\ncan swapout the experiment it is currently in, and then swap them back\nin (after coordinating with the person of course, since swapout/in is\nnot yet transparent: no disk state is saved). <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(117,'stoller',282,'2002-10-14 17:11:37','Testbed Operations','Understanding ImageID\'s and OSID\'s and defaults',' <p>\n\n<pre>\n&gt; Trying to reload pc34 ... \n&gt; *** /usr/testbed/bin/os_load:\n&gt;     No such imageid RHL71-NEWKERNEL is defined in the DB!\n&gt; /usr/testbed/bin/os_load -s failed on pc34. Thats not supposed to happen.\n</pre>\n\nThis message is because the reload daemon operates from an imageid. You\ncreated a new OSID called RHL71-NEWKERNEL, but maybe not an imageid of that\nname? I\'ll ramble on and then come back to the problem at hand. <p>\n\nThe node_types table specifies two things; a default OSID to boot if the\nuser does not specify one, and a default imageid for the node. The reload\ndaemon uses this default imageid when cleaning up nodes. Of course, the\ndefault osid you specify (for users) must (well, *should*) be an osid in\nthe default imageid that the reload daemon is putting on your nodes! <p>\n\nSo, an imageid is comprised of one or more osids. At Utah, the default\nimage id includes both the freebsd and linux slices, and yours should too\nso that users can pick either of the defaults and not have to worry about\nreloading the nodes when the experiment is created; better to have that\ndone already by the reload daemon. There can be a one to many mapping of an\nosid to imageids that contain it, but that can lead to confusion. Still,\nits allowed, and useful. For example, the default imageid contains both\nfreebsd and linux. Another imageid contains just one or the other, which is\nuseful for users who mess up their nodes and want to reload *just* the\npartition they care about (have selected in ns file).  <p>\n\nOkay, so how do we track what is loaded on a node and what slice to boot?\nWhen os_load sets up the load for a node, it also modifies the \"partitions\"\ntable for that node. The partitions table holds what osid is getting\ndropped on which slice. So, for the combined image the partitions table\nwill get FBSD in slice 1 and RHL in slice 2. Which slice is booted comes\nfrom the imageid; in our combined image we set it so FreeBSD boots instead\nof linux whenever the node is free. When the node is allocated to an\nexperiment, that gets switched to whatever the user specified, or the\ndefault osid I mentioned above if none was specified.  <p>\n\nWhen the experiment is set up, a check is made to see if the osid the user\nselected for a node is loaded on the node. It does this by checking the\npartitions table. If the OSID is on the node, great! If the user selected a\ngeneric osid (RHL-STD instead of RHL71-STD), the user is simply saying he\nwants any version of RHL, and if there is an RHL71 on the node, great!  <p>\n\nOkay, so what if the OSID is not listed in the partitions table? Then we\nneed to load an image. The trick is to find an imageid that has the\nrequested OSID in it, and since we allow a one to many mapping, we need a\nway to decide. Thats what the osidtoimageid DB table does. When you create\na new imageid in the web interface, you can optionally set up these\nmappings (or by hand later).  Basically, for a particular node type (pc600,\npc850), specify what imageid to load when a user wants RHL71-STD. This\ntable forces you to have a unique mapping of course since there won\'t be\nany way to resolve conflicts in the experiment setup path. So, in our\ntable: <p>\n\n<pre>\n+--------------------------------+--------+--------------------------------+\n| osid                           | type   | imageid                        |\n+--------------------------------+--------+--------------------------------+\n| RHL71-STD                      | pc600  | UTAHPC-LINUX71                 |\n| RHL71-STD                      | pc850  | UTAHPC-LINUX71                 |\n| FBSD45-STD                     | pc850  | FBSD45-STD                     |\n| FBSD45-STD                     | pc600  | FBSD45-STD\n|\n</pre>\n\nWhich says that when a user has requested RHL71-STD on a pc600, and that\nosid is not loaded already (in the partitions table), set up an os_load\nusing the imageid UTAHPC-LINUX71. As you can see, osids and imageids can\nhave the same name, or not have the same name. Does not really matter. :-) <p>\n\nOkay, so now we load the UTAHPC-LINUX71 imageid on a node. In the imageid\nit says what gets loaded on each slice (and thus what goes into the\npartitions table), and what slice to boot after its loaded (def_boot_osid\nin the nodes table). This is where frisbee gets started and the node is\nauto loaded during experiment creation. The user can also os_load it by\nhand later (say if he screwed up the node).  <p>\n\nOf course, none of this has much to do with the problem at hand! In this\ncase, you have tripped over a poor design decision (my decision actually).\nThe imageid table holds the pid (project id) under which the imageid was\ncreated. In the case of RHL71-NEWKERNEL, it was created in the mtcp2\nproject. The pid was intended to enforce per-project protection of images,\nbut is also a pain in the ass since we have not been consistent in storing\nthe pid alongside the imageid (there is more to this, but I won\'t bother to\nbore you with 2 more paragraphs!). Anyway, the reload daemon looks for the\nimageid in the emulab-ops pid, and since you created it in the mtcp2 pid,\nit cannot find it. So, after all this text, all you need to is:\n<pre>\n update images set pid=\'emulab-ops\' where imageid=\'mctcp2-RHL71-NEWKERNEL\';\n</pre>\n\nNote that \"mctcp2\" will remain in the imageid tag, but that won\'t really\nmatter; I combine the pid and imagename to form a globally unique id. <p>\n\nAs for imagename and image id (and this applies to osname and osid in the\nos_info table). Originally, osids and imageids were globally unique, so all\nwe had was an imagename and osname slot. Well, after a long while it became\nclear that this was bad, and that they had to be per-project unique\ninstead.  So I added the id slots which gives us globally unique names\nwithin the system, but still allows for different projects to use the same\nimagename. When that change was made, all the related fields in the DB\nwhere shifted to hold ids instead of names, but since we already had\nglobally unique names, I left imagename=imageid (and osname=osid) for the\nset of images (and osids) that existed at that time. All this does is\nexplain why you sometimes see them equal and other times don\'t. The key\nthing is that imagename is what the user selected, and imageid is the\nglobally unique id we give it inside. Utilities like os_load can handle\neither pid,imagename or imageid on the command line (with appropriate\noption). Confusing? I\'ll say! <p>\n\n<pre>\n&gt; Changing the pid didn\'t fix it.  I added a debug line to \n&gt; os_load to see what options it was getting passed, and found that\n&gt; it is using the -m option to load an image based on \n&gt; the ID, and it is using the ID RHL71-NEWKERNEL.  From\n&gt; what you\'ve said I guessed that it is getting this\n&gt; value from the nodes_types table (or at least I thought it was).\n</pre>\n\nos_load with no args except nodeid(s) will look in the node_types table to\nget the default *imageid* for node.  <p>\n\n<pre>\n&gt; How did the nodes types table get set to this value?  Did someone have to\n&gt; set it to that?\n</pre>\n\nYep, we (or you!) set that when we create a default image for a node.\nWe probably did it initially for you. <p>\n\n<pre>\n&gt; In the entry in the nodes_types table to mctcp2-RHL71-NEWKERNEL, expecting\n&gt; that would make the reload daemon use the correct imageid, but it was\n&gt; still using RHL71-NEWKERNEL.  I now guessed the imagename and imageid\n&gt; needed to be the same.\n</pre>\n\nNo, just consistent. Whatever is in the imageid slot in the images table\nhas to be what you put in any slot called \"imageid\" in the rest of the DB.\nThe imagename is just fluff for the users. Sounds like your DB changes\nhad the desired effect. <p>\n\n<pre>\n  > About our default imageid for both redhat and freebsd using\n  > the same image.  I\'ve enclosed a discussion we\n  > had with Mike Hibler.  Experiments created with RHL-STD,\n  > which were supposed to use a multiboot image were always\n  > loading FBSD-STD.\n</pre>\n\nI remember that discussion. My view is that there are two sets of images.\nThe default which includes both, and a set of per-slice images which get\nloaded explicitly by the user. This last has the intended consequence of\nmaking sure the node boots what the user wants. <p>\n\nMike was attempting to solve the problem a different way (not having to\nsetup per-slice images). I tend to disagree, but the benefit is less work\nwhen creating new images. <p>\n\n<pre>\n&gt; For the RHL selections they all resolved to the\n&gt; RHL71-NEWKERNEL image, as expected.  Although, I\n&gt; still don\'t see how/where RHL-STD is mapped to \n&gt; anything.\n</pre>\n\nAn undocumented convention handles this one.  This\nactually requires some work since it can lead to problems.  A \"generic\"\nosid is one in which the version slot is left null. When os_setup sets up\nthe node, if it see the user wanted a generic osid, it looks on the disk to\nsee if there is an already loaded osid that has an actual version (7.1) and\na matching OS field (linux). It picks that. We should have done this with\nanother mapping table, but I was lazy at the time I did it. The downside is\nthat if someone loads an old version (say, 6.2), the next person can get\nthat old version if the disk is not cleaned by the reload daemon before it\nis next allocated. The reload policy is a whole nutter letter to write! <p>\n\n<pre>\n&gt; The strange thing is of the above osid selections only \n&gt; the FBSD45-STD osid did not work, os_load returned: Invalid \n&gt; osid.\n</pre>\n\nRemember, os_load is a \"primitive\" that loads imageids not osids! os_setup\nhandles mapping osids to imageids. You need to specify the imagename (with\noptional pid so it can be found), or with -m using the internal name. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(118,'danderse',2146,'2002-12-22 13:38:21','Testbed Operations','How do I diagnose NTP problems?',' <p>\n\nNote that ntptrace uses a high port to communicate with what\nit\'s tracing, so it won\'t work if the firewall rules are restrictive.\nbut ntpd still will.  login to the node and do a <code>ntpq -p</code> and\nsee if it\'s actually peering or not. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(119,'newbold',2224,'2002-12-28 12:56:38','Testbed Operations','How do I spot idle experiments?',' <p>\n\nThere is a * mark by the node count in all views if the experiment is idle. Same caveats as usual, it only shows after they\'ve been sent a warning and before slothd has detected activity again. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(120,'stoller',282,'2002-12-30 15:19:21','Testbed Operations','What are the groups of \"active\" users who are in no projects?',' <p>\n\nIt is allowed for \"active\" users to be in no projects, in which case they\nget the \"guest\" group. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(121,'stoller',282,'2003-01-10 10:37:04','Testbed Operations','How can I schedule OS reloads by PC type?',' <p>\n\n  Add -t option to sched_reload so that its easier to schedule mass\n  reloads. Usage is:\n<pre>  \n  	sched_reload <options> -t pctype [pctype ...]\n</pre>\n  In other words, schedule a reload for nodes of a particualar type (or\n  types) like pc600, pc850, etc. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(122,'stoller',282,'2003-01-24 11:12:14','Testbed Operations','What are the limitations on the \"delete user\" page?',' <p>\n\nThere is a page to delete a user, either from a single project\n  or from the entire testbed.  \nThere are lots of error checks to make sure not deleting a user who is\n  \"important\" (project head, group head, experiment head, etc). <p>\n\n\"Request\" mode: If a project leader deletes a user from his\n  project, and the user has no more project memberships, show a click\n  button to send us email requesting the user be deleted from the\n  testbed. <p>\n\n  Bottom line, project leaders can now delete users from their project,\n  but must ask us to delete the account from the testbed. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(123,'ricci',1182,'2003-01-27 11:08:16','Testbed Operations','How do I find out about switch errors?',' <p>\n\nYou can look at the error counters on the switch (<code>portstats -e</code>) to\nmake sure nothing funny is going on. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(124,'newbold',2224,'2003-01-28 15:03:52','Testbed Operations','How do I find out about experiments with idle_ignore set on?',' <p>\n\nHere\'s how to find the current list of idle_ignore\'d expts that have nodes in\nthem:\n<pre>\nmysql&gt; select e.pid,e.eid,count(vname) as nodes from experiments as e left\njoin reserved as r on e.pid=r.pid and e.eid=r.eid where idle_ignore =1\ngroup by e.pid,e.eid having nodes>0 order by e.pid,e.eid;\n+------------+--------------+-------+\n| pid        | eid          | nodes |\n+------------+--------------+-------+\n| alchemy    | timesys-test |     1 |\n| emulab-ops | hwdown       |     2 |\n| janos      | wireless     |     1 |\n| ron        | all          |    41 |\n| testbed    | delltest     |     1 |\n| testbed    | ghost        |     1 |\n| testbed    | ixp          |     1 |\n| testbed    | ron-image    |     1 |\n| testbed    | Tone         |     1 |\n| testbed    | ucr-ops      |     1 |\n| testbed    | wireless     |     2 |\n+------------+--------------+-------+\n11 rows in set (0.02 sec)\n</pre>\n\nAnd here\'s the ones that don\'t currently have nodes, that won\'t get\nchecked if/when they swap in again:\n<pre>\nmysql&gt; select e.pid,e.eid,count(vname) as nodes from experiments as e left\njoin reserved as r on e.pid=r.pid and e.eid=r.eid where idle_ignore =1\ngroup by e.pid,e.eid having nodes=0 order by e.pid,e.eid;\n+------------+----------------+-------+\n| pid        | eid            | nodes |\n+------------+----------------+-------+\n| emulab-ops | reloading      |     0 |\n| emulab-ops | reloadpending  |     0 |\n| emulab-ops | swdown         |     0 |\n| SANDS      | SANDSImage     |     0 |\n| testbed    | 4portbvlan     |     0 |\n| testbed    | 4portixplan    |     0 |\n| testbed    | clickipforward |     0 |\n| testbed    | gatech         |     0 |\n| testbed    | umass-images   |     0 |\n| testbed    | wide           |     0 |\n| testbed    | winxp          |     0 |\n+------------+----------------+-------+\n11 rows in set (0.02 sec)\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(125,'stoller',282,'2003-02-03 09:33:32','Testbed Operations','Comments on priority management while handling Tb-Ops mail.',' <p>\r\n\r\nAnother view is this: Don\'t be too quick to jump in and spend a lot of time\r\ntrying to figure out someone\'s problem as soon as they report it. Ask\r\n(simple to ask) questions, and let them spend the time describing the\r\nproblem completely. It is often the case that by forcing the user to\r\ndescribe the problem, they will think about it more and come up with the\r\nanswers themselves. <p>\r\n\r\nAs I\'ve also said, when the bozo factor is high, let the project leader be\r\nthe first line of defense, and don\'t hurry. A long turnaround time also\r\nencourages people to think/act on their own ... <p>\r\n\r\n<hr>\r\n\r\nLook at what really goes on, that you don\'t find out\r\nunless you force people to speak up. <p>\r\n\r\nThe XXX guy is getting stuff ready for a *seminar*\r\napparently a month from now,\r\nthat they *plan* to write a paper about some day, while\r\nthe YYY people have a SIGCOMM deadline on Wednesday. <p>\r\n\r\nEntirely incomparable. <p>\r\n\r\nDon\'t believe the importance of people\'s deadlines until they give you\r\nspecific info. <p>\r\n\r\n',NULL,0,'2006-06-08 16:21:35','fish',30775,0,NULL,NULL,0),(126,'stoller',282,'2001-09-05 06:56:01','Testbed Operations','How do I set an Emulab banner for events like downtime?',' <p>\n\nTo put a banner on the menu page:\n<pre>\n	{6} boss$ /usr/testbed/sbin/webcontrol -m \"Emulab.Net down Sept 7th\n	(5pm) through Sept 9th (8pm) due to construction and power loss in\n	our machine room.\"\n</pre>\n\nTo remove the message:\n<pre>\n	{9} boss$ /usr/testbed/sbin/webcontrol -m \"\"\n	Clearing Web Message of the Day\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(127,'ricci',1182,'2003-03-06 17:14:47','Testbed Operations','How do I turn on cvsweb access for a user?',' <p>\n\nOn boss, from a shell, run:\n<pre>\nmysql tbdb\n</pre>\n\nThen, at the mysql prompt,\n<pre>\nmysql&gt; update users set cvsweb=1 where uid=\'rsims\';\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(128,'stoller',282,'2003-03-26 06:36:50','Testbed Operations','How do batch experiments signal finish status?',' <p>\n\n<pre>\n&gt; When the batch daemon logs an \"end\" for a batch expt, and not a \"cancel\",\n&gt; does that mean it died a natural death, i.e. all the startup commands ended?\n</pre>\n\nNatural. If you look in the log file, it says \"finished\" instead of \"canceled\"\nin the email message. Of course, the user might have logged in and killed\nsomething off. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(129,'barb',5927,'2003-04-11 13:34:16','Testbed Operations','What are sitevars?',' <p>\n\n  Site variables (\"sitevars\") are stored in the sitevariables database table.\n  Each one has a name, a description (NOT OPTIONAL!), a\n  default value, and a current value.\n  If the current value is NULL, the default value is used. <p>\n\n  There is a mechanism in the install process to\n  ensure all needed site variables exist before installing. <p>\n\nManagement pages:\n<ul>\n  <li>\n     editsitevars.php3 page, accessable to admins\n     via the \"Edit Site Variables\" menu option.\n  </li>\n\n  <li>\n     <code>setsitevar</code> script,\n     an interface for listing, viewing in detail, and setting\n     site variables.\n  </li>\n\n  <li>\n    Web interface now uses <code>web/nologins</code> and <code>web/message</code>\n    instead of one-off database tables.\n  </li>\n</ul>\n\n  NOTE that setting a variable to the default value and\n  setting a variable to a value which is string-identical\n  are NOT the same thing. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(130,'stoller',282,'2003-07-17 11:02:22','Testbed Operations','What history is kept for failed experiments?',' <p>\n\nWhen an experiment is first started (created), its history\nis removed if it fails immediately. Its only when the swap interface is\nused that all the history is saved. <p>\n\nIn the start/fail case I maintain a single backup directory for debugging.\n/usr/testbed/expwork/pid/eid-failed. I did this to prevent cluttering up\nthe archive with stuff that does not work, since the vast majority of start\nerrors are parse errors, missing rpm/tarball errors, bad OSID errors, etc. <p>\n\nOn the rare occasions that its an interesting error, we have the -failed\ndirectory to go to. I honestly do not think it is necessary to archive\nfailed experiments. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(131,'stoller',282,'2003-07-21 10:03:09','Testbed Operations','How do I control Idleswap and Autoswap e-mail?',' <p>\n\n  There is a feature for sending warning messages before an idleswap,\n  configurable via a sitevar. <p>\n\n  You can adjust (or turn off) idleswap and Max Duration warnings by setting\n  the corresponding site vars, where 0==no warning. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(132,'stoller',282,'2003-07-25 07:22:58','Testbed Operations','How do I maintain the node type table?',' <p>\n\nAs you notice that node_types is out of date, you can go here:\n	<a href=\"https://www.emulab.net/webdb/webdb.php3\">\n	         https://www.emulab.net/webdb/webdb.php3</a>\n\nto edit the node_types table, and change rows as needed.  <p>\n\n(Note that <code>dbedit</code> must be set to 1 in the user\'s row of the\n<code>users</code> table to allow Webdb access.)  <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(133,'stoller',282,'2003-07-30 07:33:13','Testbed Operations','How do I clear an experiment stuck in the \"swapping\" state?',' <p>\n\nCisco errors can result in experiments permanently stuck in the \"swapping\"\nstate.  We lock the experiment, so that we can look at it. <p>\n\nTo unstick it:\n<pre>\n 	update experiments set expt_locked=NULL, state=\'swapped\'\n 		where pid=\'FileMover\' and eid=\'exp\';\n</pre>  <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(134,'stoller',282,'2003-07-31 16:27:01','Testbed Operations','How do I control verbose syslogging in tmcd?',' <p>\n\n  There is a signal handler to change the verbosity of a running tmcd.\n  To turn on verbosity:\n<pre>\n  	kill -USR1 `cat /var/run/tmcd.pid`\n</pre>\n  \n  To turn off verbosity:\n<pre>\n  	kill -USR2 `cat /var/run/tmcd.pid`\n</pre>\n  \n  You can send the signal to individual children, but that would be\n  silly and pointless. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(135,'kwebb',10109,'2003-08-05 11:42:39','Testbed Operations','What if \"node health monitoring\" complains at boot time?',' <p>\n\n<pre>\n&gt; When I boot up:\n&gt; \n&gt; &gt; Starting node health monitoring ...\n&gt; &gt; i2c-core.o: i2c core module\n&gt; &gt; i2c-piix4.o version 2.6.3 (20020322)\n&gt; &gt; i2c-piix4.o: Error: Can\'t detect PIIX4 or compatible device!\n&gt; &gt; i2c-piix4.o: Device not detected, module not inserted.\n&gt; &gt; /lib/modules/2.4.18-27.7.x/kernel/drivers/i2c/i2c-piix4.o: init_module: No such device\n&gt; &gt; Hint: insmod errors can be caused by incorrect module parameters, including invalid IO or IRQ parameters.\n&gt; &gt; 	You may find more information in syslog or the output from dmesg\n&gt; &gt; /lib/modules/2.4.18-27.7.x/kernel/drivers/i2c/i2c-piix4.o: insmod /lib/modules/2.4.18-27.7.x/kernel/drivers/i2c/i2c-piix4.o failed\n&gt; &gt; /lib/modules/2.4.18-27.7.x/kernel/drivers/i2c/i2c-piix4.o: insmod i2c-piix4 failed\n&gt; \n&gt; Anything to worry about?\n</pre>\n\nNo - it just means that <code>healthd</code> won\'t run on that machine.  This happens\non machines that don\'t have lmsensors support or where its not setup\ncorrectly (we have a pretty naive method of loading lmsensors/i2c\nmodules). <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(136,'mike',27,'2003-08-05 15:54:27','Testbed Operations','How do I mount the Linux slice in BSD?',' <p>\n\nHere\'s the magic for mounting the linux slice in BSD:\n<pre>\n	mount -t ext2fs /dev/ad0s2 /mnt\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(137,'mike',27,'2003-08-15 11:36:25','Testbed Operations','How do I approve a user when the project roots are out of town?',' <p>\n\n<pre>\n&gt;  Eric needs to join the xtcp project to work on the paper.\n&gt;  Looks like the only people who can approve him via the web are\n&gt;  Jay and Rob, both of whom are out of town.\n&gt; \n&gt;  I need a quick way to approve him or to give, say Tim, the ability\n&gt;  to approve him.\n</pre>\n\nSolution: Change Tim to \"group_root\" in the group_membership table. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(138,'stoller',282,'2003-09-05 15:04:19','Testbed Operations','What does \"head user has not been verified\" mean when approving a project?',' <p>\n\n<pre>\n&gt; I just received a request to start a new project for a user,\n&gt; and when I go to the page to approve it, \"approve\" is not one of the options.\n&gt; It lists the following error message.\n&gt; \n&gt;   WARNING: Project cannot be approved, since head user has not been verified\n&gt; \n&gt; He is listed as inactive and an \"newmember\" in the DB which is preventing\n&gt; the PHP code from listing the \"approve\" entry in the drop-down list.\n&gt; However, I can\'t tell how he got into that state, and I am hesitant to\n&gt; manually adjust the DB.\n</pre>\n\nIt means that he ignored the email he received, that instructed him to\n\"verify\" his account. He must do that before you can approve the project.\nTell him to reread the message. <p>\n\nOr, his spam filter got in the way. That\'s no good either. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(139,'stoller',282,'2003-10-17 08:58:52','Testbed Operations','How do I see plab usage?',' <p>\n\nSee <a href=\"https://www.emulab.net/plabstats.php3?records=1000\">\n       https://www.emulab.net/plabstats.php3?records=1000</a>. (Red-dot only.) <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(140,'stoller',282,'2003-11-04 11:11:46','Testbed Operations','What is a \"recently-logged-in user\"?',' <p>\n\nOne that has logged in within the last 24 hours.  <p>\n\nIt\'s a fuzzy notion, intended to give you a handle\non users that report a bug and then log out. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(141,'ricci',1182,'2003-11-12 11:15:57','Testbed Operations','What can I do about switch port problems?',' <p>\n\n<pre>\n&gt; We have had a few cases where a simple 2 or 3 node topology with delay\n&gt; links is created, but the nodes can\'t talk to one another. It looks alot\n&gt; like a cable problem, and in one case that was true... but It is\n&gt; intermittent enough that I would be surprised if this were the case in\n&gt; all situations.  At any rate, some sanity check of each of the links on\n&gt; a node, and all of the ports on the switch, might be warrented before we\n&gt; allow folks back on the platform.\n</pre>\n\nA few things: <p>\n\n1) There is a script on boss, checkports, that you can give a pid and\neid to, and it will check to make sure that all switch ports in the\nexperiment have carrier and are running at the right speed. <p>\n\n<!--XXX - What has switchmac been replaced with? -->\n\n2) There is a script on boss, switchmac, that will report on the MAC\naddresses that the switch has learned, and match those up with what we\nhave recorded for the nodes\' interfaces. The catch is that the switch\nwill only learn MACs on ports that are enabled, of course, and forgets\nthem after a while, so you\'ll only see recently-active interfaces. <p>\n\n3) The scripts for adding nodes to the database use switchmac to\nautomatically figure out what is plugged into where. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(142,'newbold',2224,'2003-11-12 11:58:13','Testbed Operations','How do I turn off idleswap for a bunch of experiments? ',' <p>\n\nThe \"normal\" way to turn off idleswap is on each expts expt page, edit\nmetadata, and turn it off. <p>\n\nThe \"quick\" way to do a lot of them is\n<pre>\nupdate experiments set idleswap=0;\n</pre>\n\nYou could add a where clause to that if you like, too. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(143,'stoller',282,'2003-11-17 08:36:13','Testbed Operations','How does account freezing work?',' <p>\n\nWe guard against DoS and password attacks, since fundamentally we care about\nprotecting ourselves, and if we shut off more than one user temporarily,\nthat seems okay.  Our users are unlikely to be sharing the\nsame proxy (IP) at the same time, along with someone launching an attack. <p>\n\nBoth user and IP prevention are implemented, involving a couple of slots\nin the users table and a table for IPs. <p>\n\nBasically, if a valid uid is provided (in the users table), then I freeze\nthe account after 4 failures in the last minute. In other words, a couple\nfailures is harmless, and is aged out quickly. Its a rapid burst of\nfailures that will cause the login to be frozen. <p>\n\nThen, for any failure, I allow 8 failures in the last two minutes from the\nsame IP. Again, its a burst of failures that will cause the IP to be\nblocked, not single failures over time. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(144,'stoller',282,'2003-12-04 16:26:01','Testbed Operations','How do I grant permission to use types or classes of nodes?',' <p>\n\nThis is done per-project-ID. <p>\n\nIf given a specific \"type\", then grant permission to use just that type. <p>\n\nIf it\'s a class, then grant permission to use all of the types in that class,\nthe class itself, and any aux nodetypes for the type/class\n(node_types_auxtypes table). <p>\n\nFor example:\n<pre>  \n  	wap grantnodetype -p testbed pc2000\n  	wap grantnodetype -p testbed pcvm\n  	wap grantnodetype -p testbed pcplab\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(145,'mike',27,'2004-02-05 12:44:10','Testbed Operations','What do I do with nodes in \"hwdown\"?',' <p>\n\nIt can happen that the nodes in question were in reloading\nso long that something bad happened (i.e., the disk image server died). <p>\n\nSo you can free all the nodes from the experiment:\n<pre>\n	nfree emulab-ops reloading\n</pre>\nwhich has the effect of placing them into reloadpending and then back\ninto reloading to try again.  Along the way it ensures that the necessary\nserver daemons are really running.  So now 13 of the nodes have reloaded\nand are free again. <p>\n\nYou might also check the nodes in hwdown to see if they can be freed.\nTo have any chance of successfully being reloaded the node must:\n<ul>\n  <li>ping</li>\n  <li>be accessible via ssh</li>\n</ul>\n\nSo what I usually do is slogin as root from the boss node (which is \"trusted\"\nby all the nodes).  If that works and you are in FreeBSD (do \"uname\") then\nyou can probably nfree the node and it will reload/free just fine. <p>\n\nIf the ping fails, you will have to hook up a VGA and/or serial line to\nsee what is happening. <p>\n\n<!-- XXX - boot floppy? -->\nIf a node appears to be coming up in Linux when\nit is in the reloading experiment, it may have a bad PXE boot floppy,\ntry cloning a floppy from another machine and try again. <p>\n\nIf a node is in reloading and running FreeBSD, check\n/tmp/frisbee.out to see what it says.  If it shows a bunch of dots,\nit is probably in the process of reloading (do \"ps\" to see).\nIf it says something else, there might be a hardware problem. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(146,'shash',10082,'2004-02-09 11:28:39','Testbed Operations','How do do you create special experiments with no ns file?',' <p>\n\nThere are special experiments with no ns file that are used as containers for\nnodes in various states, for example <code>emulab-ops/reloading</code>. <p>\n\nThese are created using the beginexp form without specifying the ns file, with\nthe red dot on.  Red dot allows you to keep the ns file unspecified. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(147,'mike',27,'2004-02-20 10:08:29','Testbed Operations','What should I do when nodes hang in ',' <p>\r\n\r\nNormally, when something seems to have gone wrong with nodes in the\r\n\"reloading\" experiment, the first thing to try is to:\r\n<pre>\r\n	nfree emulab-ops reloading pc001 ...\r\n</pre>\r\nwhich will \"free\" the nodes.  This is equivalent to clicking on the \"Free \r\nNode\" button on the admin-mode \"Node Information\" page in the web interface. <p>\r\n\r\nThen the system will notice that they\r\nare dirty and move them back into reloading.  This will serve to reset\r\nsome of the infrastructure (e.g., make sure a frisbeed is running) and\r\nis often sufficient to clear up transient problems. <p>\r\n\r\nHere are some useful dianostic tools:\r\n<ul>\r\n  <li> serial1:/usr/testbed/log/tiplogs/pc001.log - \r\n	See if there is recent info in the console log.\r\n  </li> <br>\r\n\r\n  <li> boss:/usr/testbed/log/power.log - \r\n	If nothing seems to be happening, is the outlets port setup\r\n	for pc001? <p>\r\n\r\n	Once they go into reloading, they should be rebooted.  Check\r\n	to see if the system attempted to reboot or power-cycle the machines.\r\n  </li>\r\n\r\n  <li> boss:/usr/testbed/log/dhcpd.log - \r\n        Will tell you if the node tries to PXE boot.\r\n  </li> <br>\r\n\r\n  <li> boss:/usr/testbed/log/bootinfo.log - \r\n        Will show you what boss tells the node to do\r\n	(should be mfs boss:/tftpboot/frisbee .)\r\n  </li> <br>\r\n\r\n  <li> boss:/usr/testbed/log/tftp.log - \r\n        Will show what the nodes are attempting to load.  If all is working, they\r\n	should be downloading files from /tftpboot/frisbee.\r\n  </li> <br>\r\n\r\n  <li> boss:/usr/testbed/log/frisbeed.log - \r\n        Will show you if the node tries to JOIN\r\n	and whether it eventually succeeds in loading the disk.\r\n  </li> <br>\r\n\r\n  <li> boss:/usr/testbed/log/tmcd.log - \r\n	TMCD is the server-side of the client self-configuration\r\n	process.  Look in the log shows to see when it last reported in.\r\n  </li> <br>\r\n\r\n  <li> boss:/usr/testbed/log/stated.log - \r\n	Stated is The Man that keeps tabs on everything that is\r\n	happening.\r\n  </li>\r\n</ul>\r\n\r\nCheck frisbeed.log\r\nto see if the machines ever make a request to the frisbee server.  If they\r\ndownloaded from /tftpboot/frisbee, but never attempted to start frisbee,\r\nthe frisbee startup script failed. <p>\r\n\r\nThe most common cause of this is that\r\nthe kernel in the frisbee MFS did not recognize your hard drive or that\r\nthe machine has a different type of hard drive than indicated in the\r\nnode_types table for that machine type; for example, node_types says \"ad\"\r\n(IDE) but the machines really have \"da\" (SCSI).  You will need to look at\r\nthe console output for one of the machines to determine this. <p>\r\n\r\n',NULL,0,'2006-06-08 16:24:40','fish',30775,0,NULL,NULL,0),(148,'ricci',1182,'2004-02-20 11:00:21','Testbed Operations','When is the dhcpd.conf file regenerated?',' <p>\n\nThe only time dhcpd.conf gets automatically generated is when\nyou click the \"add nodes\" button; it does not get regenrated from, say,\ncron, or anything like that. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(149,'stoller',282,'2004-03-11 16:08:29','Testbed Operations','How do we make special groups on Ops?',' <p>\n\n<pre>\n&gt; Can we add people to groups by hand outside of Emulab,\n&gt; and they\'ll stay, etc etc?\n</pre>\n\nNo. The way to do this is to create the group on boss/ops, and then add\nentries to the unixgroup_membership table in the DB:\n<pre>\n	INSERT INTO unixgroup_membership VALUES (\'stoller\',\'elabsrc\');\n</pre>\nand then run setgroups for any such users:\n<pre>\n	setgroups stoller\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(150,'stoller',282,'2004-04-15 11:09:27','Testbed Operations','How do we partition nodes administratively into multiple \"types\"?',' <p>\n\n<pre>\n&gt; If we have partitioned the nodes administratively into multiple\n&gt; \"types\", can we adminstratively determine what node types a particular\n&gt; project can allocate?\n</pre>\n\nFirst off, there is no web page that indicates what node types a project\ncan use. I will put that on the TODO list. <p>\n\nThe Node Status summary page\nshows what node types a particular user is allowed to use (by virtue of\nthem being listed on the page), but the user might be in multiple projects. <p>\n\nLocally, we partition nodes by leaving them as class \"pc\" but giving them a\ndifferent node \"type\". For example, \"pcwifi\".  We then put entries into the\nnodetypeXpid_permissions table using the grantnodetype script in the sbin\ndirectory:\n<pre>\n	grantnodetype -p testbed pcwifi\n</pre>\n\nWithout at least one entry, the type is considered available for use by\nanyone. Eventually we want a more explicit allow/deny framework, but the\ncurrent setup works okay for what we need. Multiple projects can be granted\npermission to use a node type; just rerun the above command for each\nproject you want to grant to. <p>\n\nNote: Later, the nodetypeXpid_permissions table became a \"cache\" of\n  permissions stored in the group_policies table. The grantnodetype script\n  updates the group_policies table, and runs the update_permissions script to\n  update the cache. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(151,'stoller',282,'2004-05-03 11:28:48','Testbed Operations','Why do I get an error from anything that does an RPC to boss?',' <p>\n\n<pre>\n&gt; I keep getting this error when I try to do anything that does an RPC:\n&gt; \n&gt; Bad response from:\n&gt; ssh://ricci@boss.emulab.net/xmlrpc/emulab\n&gt; \n&gt; Any clues? I have my keys - I can ssh into boss, no problem.\n</pre>\n\nIt\'s because you have a real shell on boss instead of paperbag.  The cure is:\n<pre>\n	cd ~\n	ln -s /usr/testbed/sbin/xmlrpc .\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(152,'stoller',282,'2004-05-05 07:39:15','Testbed Operations','How do I change the id of a new user or project?',' <p>\n\nOn boss:\n<pre>\n	wap /usr/testbed/sbin/changeuid olduid newuid\n	wap /usr/testbed/sbin/changepid oldpid newpid\n</pre>\nas long as the user or project is still <b>UNAPPROVED</b>. <p>\n\nThis script will only operate on as-yet-<b>UNAPPROVED</b> users and projects.  Once\nthey are approved it becomes too difficult to deal with a change because of\nexisting directories which might be exported to active experiments. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(153,'ricci',1182,'2004-05-19 18:01:51','Testbed Operations','How do I find out about ethernet devices on Linux?',' <p>\n\nUse <code>mii-tool</code> to find out about carrier and so on. <p>\n\nThis utility checks or sets the status of a network interface\'s Media\nIndependent Interface (MII) unit. Most fast ethernet adapters use an MII to\nautonegotiate link speed and duplex setting. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(154,'stoller',282,'2004-05-21 06:23:10','Testbed Operations','How do I deal with \"Experiment Configure Failure\"?',' <p>\n\n<pre>\n&gt; By the last part, I meant that not everything got cleaned up.  The\n&gt; experiment directory could not be removed because the event scheduler was\n&gt; still running.  A fair amount of cruft got left in the DB as well:\n</pre>\n\nDon\'t know if you cleaned this up, but an easy way is to create a no-ns\nfile experiment of the same pid/eid in admin mode and then:\n<pre>\n     	/usr/testbed/bin/tbswap out -force pid eid\n</pre>\nand then terminate it. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(155,'mike',27,'2004-05-25 00:51:02','Testbed Operations','How to boot an existing FreeBSD kernel with a different HZ.',' <p>\n\nAt the pxeboot prompt, there is a \"setenv\" command to set loader environment variables.\nType:\n<pre>\n	setenv:kern.hz=2000\n	loader:disk1s1a:/kernel.jail\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(156,'stoller',282,'2004-06-22 15:28:28','Testbed Operations','How do I forcibly terminate an experiment when things are wedged?',' <p>\n\n<pre>\n&gt; I\'ve got an experiment (created in group \"ddos\" with name \"pruned\" by\n&gt; Brett Wilson) that seems to be in some wedged\n&gt; state.  I can\'t cancel swap-in nor terminate it.\n</pre>\n\nThe trick on this is to:\n<pre>\n  select pid,eid,state,expt_locked from experiments where\n		expt_locked is not NULL;\n</pre>\nto see what experiments are wedged, and how they are wedged. <p>\n\nTypically, you\njust put the experiment into the \"active\" state and clear expt_locked.\n<pre>\n   update experiments set state=\'active\',expt_locked=NULL\n	where pid=\'foo\' and eid=\'bar\';\n</pre>\n\nThen you can run a swapout on the experiment again. This works if the\nexperiment wedged on swapin or swapout (activating or swapping). <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(157,'mike',27,'2004-08-19 09:35:26','Testbed Operations','Understanding FreeBSD Kernels on Disk Images',' <p>\n\n<ul>\n  <li> kernel.100HZ == the default kernel with 100Hz clock. </li>\n  <li> kernel.1000HZ == kernel.linkdelay == general kernel with higher res clock. </li>\n  <li> kernel.10000HZ == kernel.delay == special kernel for delay nodes. </li>\n  <li> kernel.jail == 1000HZ kernel with virtual node hacks. </li>\n  <li> kernel.save == last kernel run (created by us when booting one of the others). </li>\n  <li> kernel == copy of kernel that booted (created by us at boot time). </li>\n</ul>  <p>\n\nObviously, we need to reduce the number of kernels.  It\'s on the TODO list! <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(158,'ricci',1182,'2004-08-24 14:00:25','Testbed Operations','What is the algorithm for determining whether a user has permissions to load an image?',' <p>\n\nBasically, it needs to be in your project, or marked \"global\". (Both of\nthese are in the images table) <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(159,'mike',27,'2004-08-25 18:04:51','Testbed Operations','How to use nextosid for a level of indirection',' <p>\n\n<pre>\n&gt; I created an osid FW-IPFW which has nextosid\n&gt; set to emulab-ops-FBSD410-UPDATE, hoping that would give me a level of\n&gt; indirection.\n&gt;\n&gt; I got:\n&gt; &gt; Subject: EMULAB.NET: Swap in Failure: emulab-ops/fwtest\n&gt; &gt;\n&gt; &gt; ...\n&gt; &gt; *** /usr/testbed/libexec/os_setup:\n&gt; &gt;     No image can be found for FW-IPFW on pc127!\n</pre>\n\nWhen doing this form of indirection\n(using nextosid) you have to set the os_info version field to \'\' (empty). <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(160,'stoller',282,'2004-09-08 14:28:55','Testbed Operations','How can I regenerate ssh identity files?',' <p>\n\nYou can remove the\nkey via the web interface, and then on boss:\n<pre>\n	/usr/testbed/sbin/addpubkey -i -f <user>\n</pre>\n\nTwo changes were made to addpubkey:\n<ul>\n  <li> When generating the initial ssh ley, use -C option to keygen so that\n       the comment field is rational. Now set to $user@$domain.\n  </li>\n\n  <li> Add -f (force) option to use in conjunction with -i (inituser)\n    option to regenerate the initial (unencrypted) ssh key. The user\'s\n    auth_keys are files are regenerated as well. <p>\n\n    The bad thing about all this is that you have to go remove any old\n    keys by hand via the web interface since we do not mark the key we\n    generate in the DB.\n  </li>\n</ul>\n <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(161,'ricci',1182,'2004-09-17 10:43:53','Testbed Operations','How do I move an Emulab to a new IP space?',' <p>\n\nWe recently moved our IP space, and I did it in less than a day. Here are the\nthings I can think of that need to change: <p>\n\n1) Update IPs in the database - You can prepare a file full of SQL\ncommands ahead of time and do this quickly. <p>\n\n2) Fix up the exports file on ops (/etc/exports) and run exports_setup\non boss. <p>\n\n3) Re-generated the dhcpd.conf file. <p>\n\n4) Fix /etc/named/schooner.wail.wisc.edu.db.head, and the zone files in\nthe reverse/ directory, and run named_setup. <p>\n\n5) Fix up the hosts files on boss and ops. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(162,'stoller',282,'2004-09-16 11:12:12','Testbed Operations','What are the primary issues that students should be aware of?',' <p>\n\n<ul>\n  <li> That they should be extremely careful of leaving idle experiment swapped\n    in. Trying to fool the idle detection mechanism is a big no-no and bound to\n    get student accounts frozen.\n  </li>\n\n  <li> Students should read through the tutorial first, and start with a simple\n    two node experiment to get the hang of things. Obviously, they are\n    encouraged to read the FAQ as well.\n  </li>\n\n  <li> Questions should first be directed to you, and then questions you cannot\n  answer should be directed to us. Use the project and group email lists as\n  well (e.g. SE17-654-users@emulab.net, subgroup-name@emulab.net, ...). <p>\n  </li>\n</ul>\n\n<pre>\n&gt; I will be creating group areas for each student team (5 of them) to put \n&gt; their work under the project, is that the best way to control their\n&gt; projects?\n</pre>\n\nYep, although read the groups document; if you want to isolate them from\neach other, they should have \"user\" permission in the project and local\nroot in the subgroup. <p>\n\n<pre>\n&gt; What tools are available for development by the students and how would\n&gt; they most easily activate their applications?\n</pre>\n\nThat is entirely up to you and the students. The tutorial explains how to\ncreate custom disk images, so that might be useful if you want to create a\nbaseline image that includes software for students to use in their\nexperiments.  <p>\n\n<pre>\n&gt; If they plan to use CORBA, or J2EE type developments, again what should\n&gt; they be aware of in the Emulab environment?\n</pre>\n\nThe main issue for students is understanding the control network. Your\nexperiments and software needs to be careful of accidentally sending\ntraffic over the control network instead of your internal networks. See\nthis tutorial entry:\n<a href=\"http://www.emulab.net/tutorial/tutorial.php3#ControlNet\">\n	 http://www.emulab.net/tutorial/tutorial.php3#ControlNet</a>\n\nHope this helps; good luck! <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(163,'mike',27,'2004-10-01 12:32:27','Testbed Operations','What version of the OS does a previously swapped-in experiment use?',' <p>\n\nIt uses the version that was current the first time it succeeded. <p>\n\nWhat we did wasn\'t clearly The Right Thing.  But for Linux at least\nit was necessary.  We have seen compatibility problems between RHL 7 and\nRHL 9.  So if you had a swapped-out RHL-STD experiment and you swapped it\nin and got RHL 9 instead of 7, some of your application software (say in\n/proj) might suddenly not work. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(164,'mike',27,'2004-10-20 15:05:31','Testbed Operations','How can I put nodes in hwdown state for hacking?',' <p>\n\nYou could just create an experiment with the desired nodes by using\n\"tb-fix-node bpcXXX\" in the NS file. <p>\n\nBut if you really want to put nodes in hwdown:\n<pre>\n	withadminprivs sched_reserve emulab-ops hwdown pcXXX ...\n</pre>\n\nIf the node is currently free, it will immediately be put in hwdown.\nIf the node is currently allocated to a regular experiment, you will\nthen have to swapout that experiment to force the node into hwdown. <p>\n\nIf the node is currently in a special experiment like \"reloading\",\nyou can free individual nodes with, for example:\n<pre>\n	nfree emulab-ops reloading pcXXX ...\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(165,'dongho',30622,'2004-10-20 17:49:44','Testbed Operations','If I mess up a node\'s disk partitions or something, how do I trigger a complete reinstall of that node?',' <p>\n\nRun os_load on the node from boss.\nType os_load on boss, then it will show the usage. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(166,'mike',27,'2004-11-08 09:50:52','Testbed Operations','How do I restart tftpd?',' <p>\n\n<pre>\n&gt;  I think tftpd just failed:\n&gt;    &gt; tail /usr/testbed/log/tftpd.log\n&gt;    Nov  8 09:13:06 boss tftpd[444]: pid 17875 exits, numchildren=1\n&gt;    Nov  8 09:13:06 boss tftpd[444]: pid 17876 exits, numchildren=0\n&gt;    Nov  8 09:13:06 boss tftpd[444]: select loop: No child processes\n&gt;\n&gt;    &gt; ps auxwww | grep tftpd\n&gt;   stack    21502  0.0  0.0   308  168  pg  R+    9:45AM   0:00.00 grep tftpd\n&gt;\n&gt;  How does one restart it?\n&gt;</pre>\n\n<code>/usr/local/etc/rc.d/tftpd-hpa.sh start</code> <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(167,'stoller',282,'2004-11-15 12:21:43','Testbed Operations','What does the \"New\" line mean in \"Summary stats\"?',' <p>\n\n<pre>\n&gt; New expt creates (included within \"swapins\")?\n</pre>\n\nHmm, not very clear I guess:\n<pre>\n	     \"exptswapin_count+exptstart_count as expt_swapins, \".\n	     \"exptpreload_count+exptstart_count as expt_new \".\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(168,'stoller',282,'2004-11-15 11:37:45','Testbed Operations','How do I transfer project_root status to my alter ego?',' <p>\n\nJust munge the DB;\n<pre>\n	update group_membership set trust=\'project_root\' where uid=\'XXX\'\n	and pid=\'janos\' and pid=gid;\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(169,'stoller',282,'2004-11-15 13:47:14','Testbed Operations','How do I get nodes out of RELOADSETUP state?',' <p>\n\n<pre>\n&gt; Pc\'s 9 and 14 seem to be in some odd state...  They appear to be free, but\n&gt; their eventstate is RELOADSETUP and from the console log, it looks like\n&gt; they bombed out of a disk reload:\n</pre>\n\nA simple thing to try is nalloc them to emula-ops/hwdown, then just free\nthem so that they go back into reloading. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(170,'stoller',282,'2004-11-28 07:23:16','Testbed Operations','How do I deal with \"Swap out Failure\"?',' <p>\n\nIf something breaks, you\njust reset the state and go again so it will get whatever it missed the\nprevious time. <p>\n\nTypically though, you do need to reset the DB state:\n<pre>\n  update experiments set state=\'active\',canceled=0,expt_locked=NULL\n            where pid=\'XXX\' and eid=\'YYY\';\n</pre>\nso that it appears active and not busy (not in transition). <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(171,'mike',27,'2004-11-28 18:13:07','Testbed Operations','How do I restart \"capture\"?',' <p>\n\n<pre>\n&gt; &gt; I\'ve been restarting captures manually just to get some things going \n&gt; &gt; again...  But, is there an automated way to do this?  Can I just rerun \n&gt; &gt; <code>/usr/site/etc/capture.rc</code>; and have it \"just work\"?\n</pre>\n\nI just do this on ops and tipserv1:\n<pre>\n	sudo killall capture\n	sudo sh /usr/site/etc/capture.rc\n</pre>\nbut that is hardly an atomic operation... <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(172,'mike',27,'2004-11-28 22:07:56','Testbed Operations','How to deal with stranded VLANs?',' <p>\n\nSomething hiccuped again and left VLAN turds.\nThis time it was cisco3 that got stuck with VLANs 266-288 and 333-336. <p>\n\nOf course, I didn\'t remember what Rob told me last time about the easiest\nway to fix it!  A simple \"snmpit -o <vlan>\" didn\'t work because the VLAN\nwas not in the DB, just in one switch.  So I just logged into the switches\nto see where they existed, made sure no ports were in them, and removed them. <p>\n\n<hr>\n\nHmm, that should work: <code>snmpit -o</code> actually only consults the DB to see\nif you have permission to modify the VLAN. If you used <code>wap</code>, it should\nhave worked fine. <p>\n\nBut deleting the VLANs by hand was just fine too. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(173,'mike',27,'2004-11-29 09:52:02','Testbed Operations','What is the Emulab ethernet switch configuration?',' <p>\n\nWe have not made that info available both because it is subject to change\nand because the impact of multiple switches should be negligible (on the\norder of a couple of us of latency). <p>\n\nBut here is the current setup: there are three \"experimental\" switches,\nall cisco 6509s, interconnected with 4Gb trunk lines as:\n<pre>\n             4Gb            4Gb\n    cisco4 <=====> cisco3 <=====> cisco1\n</pre>\n\nThe resource mapper takes into account the interswitch bandwidth so\nthat it will not overload any of the interswitch links. <p>\n\nCurrently any PC will have all its experimental interfaces connected to\nthe same switch, though that may change in the future. <p>\n\nThe current node assignments look like:\n<pre>\n	pc1   - pc84:	cisco1\n	pc85  - pc128:	cisco3\n	pc129 - pc141:	cisco4\n	pc142 - pc168:  cisco3\n	pc170 - pc178:	cisco4\n	pc250 - pc251:	cisco4\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(174,'ricci',1182,'2004-12-06 10:37:23','Testbed Operations','What does \"invalid migration assumptions\" mean from \"assign\"?',' <p>\n\n<pre>\n&gt; Assign seems to be complaining about an internal error:\n&gt; \n&gt;     Reverting to best solution\n&gt;     Done\n&gt; &gt;&gt;  Internal error: Invalid migration assumptions.\n&gt;     score:163.44 absbest:164.04 violated:19 absbestviolated:21\n&gt; \n&gt; I haven\'t a clue what that means...\n</pre>\n\nBasically it means that when assign tried to go back to the best solution\nit had found, it gets a different score. <p>\n\nI do know what causes this, and it\'s fixable, but with quite a lot of\nwork. <p>\n\nIt\'s actually not really a problem - the only case in which it gives a\nfalse negative answer is if the <code>absbestviolated</code> score is 0, and the\n<code>violated</code> score is non-zero. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(175,'stoller',282,'2005-01-01 00:00:00','Testbed Operations','How do I restart mysqld on boss?',' <p>\n\nTo kill/restart mysqld:\n<pre>\n  /usr/local/etc/rc.d/2.mysql-server.sh stop\n</pre>\n\n(Should not be necessary:\n</pre>\n  /usr/local/etc/rc.d/2.mysql-server.sh start\n</pre>\n) <p>\n\nIf \"stop\" doesn\'t work, do <code>kill -1</code>, <code>kill</code>, then\n<code>kill -9</code> on mysqld.  The new one seems to start automatically. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(176,'mike',27,'2005-01-03 13:55:36','Testbed Operations','How can I change a project\'s head UID later on?',' <p>\n\nHave the new head \"join\" your project, e.g. using this link:\n<a href=\"https://www.emulab.net/joinproject.php3\">\n	 https://www.emulab.net/joinproject.php3</a>\n\nAlert the <a href=\"mailto:testbed-ops@flux.utah.edu\">TbOps list</a>\nwhen that happens, and we\'ll then exercise special\nWeb/DB support to swap your and his roles. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(177,'ricci',1182,'2005-01-05 14:29:58','Testbed Operations','What does \"Node Checkin Error\" mean?',' <p>\n\n<pre>\n&gt; Subject: SCHOONER.NET: Node Checkin Error\n&gt;   A node attempted to check in as a new node, but it is already\n&gt;   in the database as pc-i2-45-a!\n&gt; \n&gt; Does anybody know what this problem is and how to fix it?\n</pre>\n\nThis means that the node booted our \"newnode\" MFS, and tried to check in\nas a brand-new node. <p>\n\nThe most likely reason for this is that the node\'s control network MAC\naddress is incorrect in the <code>interfaces</code> table. I\'d check the contents\nof that table against the output of <code>ifconfig</code> on the node. <p>\n\nYou can also reboot the node and watch the\n<code>/usr/testbed/log/dhcpd.log</code> on boss.  That will list the MAC\naddress of all requests.  Look for a request which gets assigned an address\nfrom your dynamic range. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(178,'ricci',1182,'2005-02-11 12:37:54','Testbed Operations','How do I deal with bad ports and Cisco switch trunking?',' <p>\n\nWe found what appeared to be a bad port and/or wire in the trunk between\ncisco3 and cisco4.  So, we moved the wire to a new port that was not\ncontiguous with the other three, and tried to make a trunk with non-contiguous\nports, skipping the bad one. <p>\n\nIt seems that this is not legal.  Instead of telling me this, the switch just\nsilently made two trunks. So we had a forwarding loop in the switch topology\nbetween ciscos 3 and 4. <p>\n\nInstead, we dropped back to 3 gigabits between ciscos 3 and 4 temporarily,\ninstead of 4. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(179,'mike',27,'2005-02-11 15:25:44','Testbed Operations','How do I find out the virtual name of a PC given the physical name',' <p>\n\nIt is in the reserved table:\n<pre>\n  select node_id,vname from reserved where node_id=\'pcXXX\';\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(180,'stoller',282,'2005-02-14 09:05:18','Testbed Operations','What happens if the experiment state is wiped out?',' <p>\n\nYou can restore it from backup.  It will mostly be correct if it\'s during a\nquiet time, and because the system is hosed so nothing is changing. <p>\n\nTwo things can be wrong. <p>\n\n<ul>\n  <li> A currently inactive experiment might be marked as active. This is\n       harmless since there are no physical resources associated with it, and\n       swapping it out again won\'t do anything bad (this is by design).  There\n       are probably a few of these, but its easy to deal with just by swapping\n       the experiment out again. \n  </li>\n\n  <li> A currently active experiment is marked as inactive. This is of course\n       more serious since those resources will be hidden.\n  </li>\n</ul>\n\nThis query shows experiments holding resources:\n<pre>\n  \"select distinct r.pid,r.eid,e.state from reserved as r left join\n      experiments as e on r.pid=e.pid and r.eid=e.eid;\"\n</pre>\n\nThey should all be marked as \"new\", \"activating\", \"active\", or \"BATCHSTATE_RUNNING\".\n\"inactive\" is an error. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(181,'kwebb',10109,'2005-02-13 16:25:16','Testbed Operations','What about serial connections to the Admin MFS FreeBSD?',' <p>\n\nIn the Admin Freebsd, the configuration used for the serial line connection is:\n<pre>\nbaud: 115200\ndata bits: 8\nstop bits: 1\nparity: none\nflow control: none\n</pre>\n\nWhen loading the Admin Freebsd, unless you\'ve setup the BIOS on the blade\nservers to redirect their output to the serial console (doubtful), the first\noutput you\'ll see will be from the first stage PXE boot loader (our PXEboot\nprogram).  This program figures out what the node is supposed to do (boot off\none of the disk partitions, load a memory-based image (e.g. admin MFS), wait,\netc.) and executes that action. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(182,'mike',27,'2005-02-22 11:58:14','Testbed Operations','How do I diagnose Windows swap-in failures?',' <p>\n\nIf a Windows node fails and winds up in hwdown, see if you can slogin to it\nfrom boss as root.  If you can, look at /var/log/bootsetup.log and that might\nprovide some clue as to what happened.   <p>\n\nbootsetup.log has all of the Emulab details, but covers only the last reboot. <p>\n\n/var/log/EmulabStartup.log covers all of the reboots since the \"prepare\" script\nwas last run while making an XP image.  But it gets just the Cygwin-specific\npart of the story (from rc.firstboot, rc.cygwinxp, and rc.reboot). <p>\n\nYou can also look at the bootlog in the DB using the \"Show Boot Log\" option on\nthe \"Node Information\" page. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(183,'stoller',282,'2005-02-22 10:19:12','Testbed Operations','How do I handle changes to the tmcd protocol and code?',' <p>\n\nWhen the tmcc-to-tmcd protocol has been changed incompatibly, bump the\nCURRENT_VERSION number in tmcd/decls.h .  Otherwise leave it alone in your new\nversion. <p>\n\nJust adding commands to the command_array in tmcd.c is not an incompatibility,\nbecause old versions of tmcc would not have code to invoke the new commands. <p>\n\nVersioning enables you to add code to handle both the old and new versions of the\nprotocol in tmcd.c, depending on the version number of the tmcc client connecting.\nThe version number is the <code>vers</code> argument in the expansion of the\n<code>COMMAND_PROTOTYPE()</code> macro. <p>\n\ntmcc defaults to communicating with tmcd on boss at port 7777.  You can test\nyour new version of tmcd on a different port with a port number option,\n<code>-p 7778</code> for example. <p>\n\nFurthermore, the tmcd <code>-d -v</code> options turn on debugging mode and\nselect verbose output.  Conveniently when debugging, rather than spawning a\ntmcd daemon into the background, tmcd stays in the foreground printing\nmessages and exits after a single tmcc connection has finished. <p>\n\nGive the same -p argument to tmcc on your client node to connect to your test\ntmcd daemon on boss. <p>\n\nWhen you\'re done testing, please commit your changes to the code, make, and\ninstall before you restart the production tmcd. <p>\n\nHere\'s the command for restarting the tmcd daemon on boss:\n<pre>\n	sudo /usr/testbed/sbin/tmcd.restart\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(184,'stack',424,'2005-02-24 07:46:48','Testbed Operations','How are robot experiment swap-ins handled?',' <p>\n\nAutomatic charging stations for the Garcia robots are not yet available, so we\nhave to manually give them a hand at swap-in and swap-out time.  Following are\nsome details. <p>\n\nNote: there is a separate mailing list, \"robocops\", to split off any\nrobot-experiment related messages to relevant people. <p>\n\n<pre>\n&gt; So the current plan is that robots are turned off between experiments?\n</pre>\n\nWell, I suppose we should leave them on for a little while after the\nexperiment has swapped out, in case the same person wants to try\nsomething else. <p>\n\n<pre>\n&gt; I guess I assumed they were turned on in the morning and off again in the\n&gt; evening.  Or do their batteries not last that long?\n</pre>\n\nThey don\'t :( <p>\n\n<pre>\n&gt; Speaking of batteries, someone should tell The Rest of Us how to\n&gt; change/charge batteries.\n</pre>\n\nOh, duh, I forgot about that...  It\'s probably easier to show in person...\nBasically, you turn off the robot, unhook the top by pushing in on the white\nbushings that hold up the plexiglass and disconnect the battery cable. <p>\n\n<pre>\n&gt;   Do we have like 5 spare batteries so that there is always a\n&gt; replacement charged up?\n</pre>\n\nYep, new batteries are on a shelf in Dan\'s cube, and leave dead batteries on\nthe desk next to the chargers. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(185,'ricci',1182,'2005-03-17 09:59:49','Testbed Operations','How is vlan trunking supported on pc\'s?',' <p>\n\nIf you want to set up trunks for him manually, make some empty VLANs\nwith <code>snmpit -m</code> like so:\n<pre>\n  wap snmpit -m andy1\n  wap snmpit -m andy2\n  wap snmpit -m andy3\n</pre>\n\nThen, for every port he wants to run trunking on, do:\n<pre>\n  wap snmpit -T pc1:0 andy1 andy2 andy3\n  wap snmpit -T pc2:0 andy1 andy2 andy3\n</pre>\n\nYou will probably have to tell him the VLAN numbers that the <code>snmpit\n-m</code>s created, there\'s not really a way to virtualize VLAN numbers. <p>\n\nAlso, before he swaps out, you\'ll need to run:\n<pre>\n  wap snmpit -u pc1:0\n  wap snmpit -u pc2:0\n</pre>\nfor every port to turn trunking back off. <p>\n\nSo, clearly, it\'d be simpler if he can use vlink support... <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(186,'stoller',282,'2005-03-18 06:50:45','Testbed Operations','How do I clear Frisbee failures?',' <p>\n\nAll you do is go to the Image Descriptor page, click on the \"Edit\" link,\nand then clear the Load Address and Frisbee pid fields (in red dot mode). <p>\n\nMike is usually the one to figure out why Frisbee actually died, but often the\nproblem is transient and not something to worry about. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(187,'ricci',1182,'2005-03-22 10:37:41','Testbed Operations','How do I handle SNMPIT switch control errors?',' <p>\n\n<pre>\n&gt; I was trying to create an experiment on schooner and I got the following\n&gt; email back (then I received another email saying the exp failed):\n&gt; \n&gt; &gt; Subject: SCHOONER.NET: snmpitError - SNMP SET failed\n&gt; &gt;\n&gt; &gt; SNMP SET failed - In /usr/testbed/bin/snmpit\n&gt; &gt; SNMPIT set failed - variable was [vmVlan,3,22,INTEGER]\n&gt; &gt; Returned (undefined), ErrorNum was 6\n&gt; &gt; Error string is: noAccess\n</pre>\n\nOne of your switches refused an SNMP connection, probably due to an\nincorrect community string. <p>\n\n<pre>\n&gt; I checked the routers and the community is set correctly.\n&gt; Is there another reason for this to happen or is there a place where I can\n&gt; see the logs to try to find out what happened?\n</pre>\n\nUnfortunately, what you see is what you get, there are no other logs.\nYou could try running tcpdump while you run smpit - tcpdump does know\nhow to parse snmp packets. We could look for the last couple things it\nwas doing. <p>\n\nHave you added any new switches to the DB lately? <p>\n\nAlso, do you have a console open to any of the switches? If you left\nsomething half-finished (ie. creating a VLAN from the CLI), then that\nmight hold some lock that would prevent SNMP from working. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(188,'stack',424,'2005-04-14 10:30:27','Testbed Operations','What do I do for robot nodes in hwdown?',' <p>\n\n<pre>\n&gt; What does one do to try resurrecting a mote, just manually power cycle it?\n</pre>\n\nYes...  But, usually they end up in hwdown for other reasons, like someone \ntook it to connect it to their laptop or are running around with it. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(189,'kwebb',10109,'2005-04-25 13:47:48','Testbed Operations','How do I tell if I left a firewall vlan on the switch?',' <p>\n\nsnmpit can provide you with a list of what vlans are currently setup on \nthe switch:\n<pre>\n	  wap snmpit -l -i cisco2\n</pre>\n\nA \"diff\" operation might be a useful snmpit extension. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(190,'mike',27,'2005-04-26 19:58:33','Testbed Operations','How do I deal with Frisbee \"Device not configured\" errors?',' <p>\n\n<pre>\n&gt; Does anybody know what this error means? This node was \"reloading\" and I did\n&gt; nfree on boss and then I got this error.\n&gt; \n&gt; Using \'-M 969\'\n&gt; Running /etc/testbed/frisbee -S 198.133.225.4 -M 969 -s 2 -D 131 -m 234.5.6.2 -p\n&gt; 3565 /dev/ad0 at Tue Apr 26 13:28:24 MDT 2005\n&gt; Bound to port 3565\n&gt; Using Multicast\n&gt; opening output file: Device not configured\n&gt; Frisbee run failed, status 1\n&gt; Failed to load disk, dropping to login prompt\n</pre>\n\nThis usually means it could not find the disk.  Check the boot time output\nand see if it found ad0.  Should it be an IDE disk, or should it be SCSI?\nIf the latter, then your node_types table has the wrong disk type. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(191,'ricci',1182,'2005-04-29 11:33:47','Testbed Operations','How do I remove a new switch from the stack?',' <p>\n\nOur experimental net has officially grown to six switches... I\'ve added\ncisco8 so that Mike can go through the switchmac path, etc. for the new\nDell nodes. <p>\n\nIn case anything goes wrong with it, here\'s how to get it out of the\nstack fast:\n<pre>\n  delete from switch_stacks where node_id=\'cisco8\';\n  update nodes set role=\'unused\' where node_id=\'cisco8\';\n</pre>\n\nMike, it does have an official trunk back to cisco3, so you could create\nexperiments with other types of nodes if you want to for some reason. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(192,'ricci',1182,'2005-05-16 13:23:41','Testbed Operations','How do I deal with switch \"VLAN edit buffer request failed\" errors?',' <p>\n\n<pre>\n&gt; VLAN edit buffer request failed - try 5 of 40.\n&gt; VLAN edit buffer request failed - try 10 of 40.\n&gt; VLAN edit buffer request failed - try 15 of 40.\n&gt; VLAN edit buffer request failed - try 20 of 40.\n</pre>\n\nThis most commonly occurs when boss loses IP connectivity to an\nexperimental net switch. I would trying pinging (both?) of them from\nboss, and I suspect you\'ll see that you can\'t get to one. <p>\n\nIt could also be: <p>\n\n1) snmpit died at some point while holding the lock. If this is the\n    case, <code>snmpit -l</code> should still work <p>\n\n2) The snmp cmmunity string for a switch could have somehow gotten\n    changed on the switch or in the switch_stack_types table. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(193,'mike',27,'2005-06-02 11:20:33','Testbed Operations','Where do I find a WIFI node with a serial console?',' <p>\n\n<pre>\n&gt; Are there any wifi nodes that have serial consoles for debugging kernel \n&gt; panics, etc.?\n</pre>\n\npcwf18 should have one. <p>\n\nBTW: if you need another wifi node with a serial console (other than pcwf18)\nthen pcwf3 in the conference room is hooked up to \"mug\".  It isn\'t an\nofficial capture-d console line, you have to login to mug and \"tip pcwf3\". <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(194,'mike',27,'2005-06-08 17:49:33','Testbed Operations','How do I make Fedora Core images?',' <p>\n\n<pre>\n&gt; We are trying to create a new Linux image with Fedora core 3 and I was \n&gt; wondering if you have a standard procedure (list of directories and \n&gt; files to copy into) to make an image from a CD installed version?\n</pre>\n\nEric Eide did a test FC2 image, and he has detailed instructions and even\na script to do a lot of it.  Look in the doc/updating-RHL directory. <p>\n\nMy considerably less rigerous \"guidelines\" are in doc/update-node.txt. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(195,'mike',27,'2005-06-30 08:48:13','Testbed Operations','What logging does trafgen do?',' <p>\n\n<pre>\n&gt; I run a static scheduled traffic generator on the testbed.\n&gt; Does the trafgen create any log files?\n</pre>\n\nThe only log will be in /var/emulab/logs.  There is a trafgen.debug\nwhich would only have error messages associated with starting/stopping,\nand then there should be individual log files for each traffic generator\nnamed something like name-pid-eid.debug, where \"name\" is the name given\nin the NS file. <p>\n\nBut these logfiles are only useful for debugging when things go wrong.\nThey don\'t tell you much about actual traffic activity. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(196,'mike',27,'2005-07-01 10:55:11','Testbed Operations','Where can I see power and temperature monitor data?',' <p>\n\nThe \"powermon\" command will return one or\nmore of temp/current/power status for any of the RPC controllers. <p>\n\nIt is run out of crontab to collect data every 5 minutes into\n/usr/testbed/log/powermon.log . <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(197,'ricci',1182,'2005-07-11 14:24:10','Testbed Operations','How is experimental switch trunk port bandwidth determined?',' <p>\n\n<pre>\n&gt; There must be a place in the tbdb that specifies the bandwidth of  \n&gt; trunk between the experimental switches so that assign knows how much  \n&gt; it can handle.\n</pre>\n\nWe get that information from the wires table and interfaces table - a\nwire can be designated with type \"Trunk\".  We look at the interfaces\ntable for both sides of the trunk to find out what type of interface is\nbeing used, then look in interface_types to see what speed they run at. <p>\n\nDetermining the \"in use\" bandwidth from swapped in experiments is\ntrickier. See the code in ptopgen that starts with\n\"$TRACK_INTERSWITCH_BANDWIDTH\". <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(198,'stoller',282,'2005-07-18 06:39:37','Testbed Operations','Questions about node booting in Emulab.',' <p>\n\n<pre>\n&gt; 1) After I \"nfree\" a hwdown node, does the node boot to\n&gt; /tftpboot/frisbee or the FBSD410+RHL90-STD image or the node boots\n&gt; frisbee which loads the FBSD410+RHL90-STD images?  The last time I\n&gt; tried nfree a hwdown node, it booted to /tftpboot/firsbee.  How do I\n&gt; get the nodes to boot the \"real\" image?\n</pre>\n\nAfter the nfree, an Emulab daemon will arrange to reload the node to make\nsure it is \"clean\". That always happens after an nfree. <p>\n\nOnce that is done,\nthe node will reboot into a PXE loaded boot program that waits for Emulab\nto tell it what to do next. Typically, that happens when the node is\nallocated to an experiment, at which time the node will boot an OS on the\ndisk, or arrange to load a custom OS if the user wants an OS that is not\ncurrently loaded. <p>\n\nIf you want to boot an image, then you have to create an experiment to\nallocate the node.  <p>\n\n<pre>\n&gt; 2) In BIOS, do I always set PXE as first boot device? If an node\n&gt; already has an image loaded on its disk and the user types \"reboot\" at\n&gt; prompt, wouldn\'t the node network boot and reload a fresh image\n&gt; (overriding what was on disk)?\n</pre>\n\nYes, the node must PXE boot first. Emulab tells the node what to do after\nthat.  <p>\n\n<pre>\n&gt; 3) Do I need to partition the disk before imageunzip the generic image\n&gt; onto the disk? Do I need to manually partition all nodes\' disks?\n</pre>\n\nNo, you do not need to do anything. The generic image you get from us\nalready has the MBR set up. <p>\n\n<pre>\n&gt; When I boot the Generic image from disk, I get to the following menu:\n&gt; F1: FreeBSD\n&gt; F2: Linux\n&gt; F3: ??\n&gt; \n&gt; PXE Failed: _\n&gt; \n</pre>\n\nThis message comes\nfrom the special boot program we put in the MBR of our images.  It usually\ndoes mean that the PXE boot failed and it has fallen back to booting from\ndisk.  But it can also mean that it didn\'t even try to boot from the network\nand is just booting straight from disk (e.g., the BIOS is misconfigured). <p>\n\n<pre>\n&gt; Do I need to prepare my harddisk before adding it to emulab?\n&gt; I am asking this because my delay node was booting GRUB that I had\n&gt; previously installed on disk.\n</pre>\n\nThis is totally bizarre - I don\'t know how that stuff is getting left on\nyour disk. These machines only have a single disk, right? <p>\n\nAh, wait, I think I know what\'s going on.  For whatever, reason, you\'ve\ngot single-slice images, meaning that they only load into one parition\non the disk. So, they don\'t overwrite the MBR, leaving your GRUB from\nbefore around. <p>\n\nDid Mike leave you with instructions on how to make a full-disk image? <p>\n\n<pre>\n&gt; I did a fdisk yesterday and imageunzip the RHL+FBSD image onto it. \n&gt; Now my delay node boots to the menu:\n&gt; F1: FreeBSD\n&gt; F2: Linux\n&gt; F3: ??\n&gt; \n&gt; Pxe failed: _\n</pre>\n\nThis is expected - we have a special little bootloader that we put into\nthe MBR that basically just reboots. This way, if PXE fails, we reboot\nand try again. <p>\n\n<pre>\n&gt; I was wondering, maybe I need to prepare my disk before adding it to\n&gt; emulab.  What I found was that emulab doesn\'t actually repartition the\n&gt; harddisk.  What was previously on the disk was still on disk.  The\n&gt; GRUB menu, Fedora, and Ubuntu was still on disk after a node has been\n&gt; allocated to an experiment.\n</pre>\n\nYeah, I think the thing we need to do is make you a full-disk image, and\nthen I think we\'ll be okay. <p>\n\n<hr>\n\n<pre>\n&gt; CLIENT MAC ADDR: 00 0E 0C0 68 90 79  GUID: 42CCBA8F 2A47 ....\n&gt; CLIENT IP: 198.162.51.12  MASK: 255.255.255.0  DHCP IP: 198.162.51.253\n&gt; GATEWAY IP: 198.162.51.254\n&gt; PXE LOADER 1.00\n</pre>\n\nOkay, this makes sense - in bootinfo.log on boss, I see:\n<pre>\n  Jul 27 12:00:50 boss bootinfo[240]: 198.162.51.12: REQUEST (vers 1)\n  Jul 27 12:00:50 boss bootinfo[240]: 198.162.51.12: REPLY: boot from mfs 198.162.51.253:/tftpboot/frisbee\n</pre>\n\nSo, it has correctly been told to boot the frisbee loader. The frisbee\nloader, BTW, is as tiny as possible, so it does not have an sshd in it.\nSo it\'s expected that you won\'t be able to ssh in. <p>\n\nI expect that the rest of the boot messages, along with an error\nmessage, went to the serial console. (I assume \"screen\" means the VGA) <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(199,'ricci',1182,'2005-07-18 17:31:02','Testbed Operations','What happens when I free a node?',' <p>\n\n<pre>\n&gt; I am having trouble freeing my nodes. \n&gt; After I type \"nfree emulab-ops hwdown pc1\" on boss, I get the\n&gt; following message \"Moving pc1 to emulab-ops/reloadpending.\"  However,\n&gt; the node does not reboot nor end up in the free pool.  If I manually\n&gt; reboot the node, it boots into /tftpboot/frisbee but it\'s still not in\n&gt; the free pool.\n&gt; \n&gt; The node was fine when it\'s in the \"hwdown\" state.  I can login using\n&gt; ssh or at prompt.\n&gt; \n&gt; Do I need to do anything after I \"nfree\" a node? \n&gt; How do I add nodes to the free pool?\n</pre>\n\nNormally when a node gets freed up, its disk gets reloaded. This takes a\nwhile (potentially 10 or more minutes), so one possibility is that you\njust didn\'t give it enough time. <p>\n\nHere\'s the usual procedure of what happens when you free a node:\n<ul>\n  <li> nfree moves it into emulab-ops/reloadpending\n  </li>\n\n  <li> A daemon on boss called reload_daemon periodically (every minute, I\n  think) scans for nodes in reloadpending. When it finds one, it sets\n  up the database state necessary to load the node, and moves it into\n  emulab-ops/reloading\n  </li>\n\n  <li> reload_daemon reboots the node, which boots into the Frisbee MFS and\n  loads the disk with frisbee\n  </li>\n\n  <li> The node reports that it\'s done with frisbee, and it gets removed from\n  the reloading experiment (making it free)\n  </li>\n</ul>\n <p>\n\nSo, the two places in this sequence I would check are:\n<ol>\n  <li> Check the reloadlog in /usr/testbed/log on boss. Any errors\n   encountered by the reload daemon should show up in here. eg., if it\n   had any problem rebooting the node, you should see something.\n  </li>\n\n  <li> When you got the node booted into the frisbee MFS, did it do\n   anything? Normally, Frisbee prints out a message to the effect\n   of \"playing frisbee\", then prints out a bunch of dots as it runs.\n   If it didn\'t even print \"playing frisbee\", then there was some\n   problem getting loading information from boss, or the frisbeed on\n   boss was not running for some reason. If it printed that message, but\n   no dots, you likely have a problem with multicast on your control\n   network.\n  </li>\n</ol>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(200,'ricci',1182,'2005-07-21 14:12:47','Testbed Operations','How do I deal with a \"PXE Failed\" message?',' <p>\n\n<pre>\n&gt; PXE Failed: _\n</pre>\n\nOkay, this will probably be a ticky one to track down - There are\nnumerous reasons this can happen. <p>\n\nFirst thing to do is look for the PCs MAC in the dhcpd log -\n/usr/testbed/log . Watch that file while the node is supposedly trying\nto PXE boot, and see if any requests get to the dhcp server. <p>\n\nIf it gets a request, hopefully there will be some helpful message. <p>\n\nIIf not, I suspect a problem with your control net switch. Check the\nswitch to see if it thinks it has carrier on that port, and check the\nspeed/duplex settings to make sure they look right. If they\'re set to\nautonegotiate, try setting them to 100/full, or if they\'re hardwired,\ntry setting them to auto. <p>\n\nOur Cisco switches here have a feature that when a port first comes up,\nfor some period of time, they do not forward traffic for it - they are\nwatching for loops in the topology. Of course, this means they drop\nPXE/dhcp packets, since those get sent first. We have to disable this\nfeature on our switches, which is called \"spantree portfast\" (enabling\nportfast disables the feature.) I don\'t know what kinds of control net\nswitches you have, so I don\'t know if this is an issue on them, or how\nyou would deal with it if it is. <p>\n\nFinally, check the PXE configuration in the BIOS and on the card, and\nsee if there\'s anything you can do to lengthen the timeout, etc. <p>\n\nOh, and I guess you should make sure that the interface that is PXEing\nis the one plugged into the control net switch. :) <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(201,'ricci',1182,'2005-07-21 14:12:47','Testbed Operations','Serial console access doesn\'t work, but SSH does?',' <p>\n\n<pre>\n&gt; When I boot the Linux image, it displays debugging messages but\n&gt; stops after the line \"freeing unused kernel memory: 148K freed\". \n&gt; There is no login prompt.  However, I can still SSH into the node from\n&gt; boss.\n</pre>\n\nThe serial console setup is probably wrong in the Linux image in\nsome way. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(202,'ricci',1182,'2005-07-21 14:12:47','Testbed Operations','How do I check whether frisbeed is running on boss?',' <p>\n\n<pre>\n&gt; How do I check whether frisbeed is running on boss?  \n&gt; I did a \"ps -x | grep frisbeed\" on boss and nothing shows up.  \n</pre>\n\nFirst, you probably want to add some more arguments: I like \"ps -auxwww | grep\nfrisbee\".  What you had will only show frisbeed\'s running as you, not others.\nThere are also the frisbeelauncher processes that run a set of frisbeed\'s. <p>\n\nAlso, frisbeed only runs when there is actually a node reloading - after some\namount of time (5 minutes, I think) without it getting any requests, it times\nand and exits. When you run os_load, a frisbeed starts up if none was already\nrunning. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(203,'ricci',1182,'2005-07-21 15:51:39','Testbed Operations','Problem with node booting okay but not recognized?',' <p>\n\n<pre>\n&gt; It seems that boss is able to reboot the node and load an image onto\n&gt; it, but somehow, the node can\'t ack back telling boss that it has\n&gt; booted correctly.\n</pre>\n\nHmm okay - I just realized that there\'s something missing from the list\nof daemons you sent earlier - is elvind running? That could cause this\ntype of failure. The one that runs on boss is used to pass around\ninformation about node booting state. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(204,'ricci',1182,'2005-07-21 15:51:39','Testbed Operations','Problem with \"Assign Failed\" error message?',' <p>\n\n<pre>\n&gt; ASSIGN FAILED:\n&gt;   *** No physical nodes of type pc found\n&gt; Type precheck failed!\n&gt; *** /usr/testbed/libexec/assign_wrapper:\n&gt;     Unretriable error. Giving up.\n&gt; *** Failed (65) to map to reality.\n&gt; \n&gt; I set the node type as \"pc3200\" in the database, but why is it saying\n&gt; that no physical nodes of type \"pc\" found?  Where is it getting the\n&gt; \"pc\" type from?\n</pre>\n\nWhen you do this in your ns file:\n<pre>\n  set mypc [$ns node]\n</pre>\nThe type of mypc automatically gets set to \"pc\" - because the class\nfield of the node_types entry for pc3200 is pc, this means you can get a\npc3200 if you ask (implicitly in this case) for a pc. There\'s a\ntb-set-hardware command that lets you be more specific, like\nspecifically requesting a pc3200. <p>\n\nThis message is coming up because when a node fails during swapin, we\ntry to replace it with another node and swap in again. But, in this\ncase, pc1 had been deemed to be down, so there were no free PCs left.\nThis manifests itself with the message you got - because the resource\nallocator, assign, is only told about free nodes, and there are no free\npcs, it thinks there are no PCs at all. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(205,'ricci',1182,'2005-07-21 15:51:39','Testbed Operations','Problem with \"Setting up for SFS\" message?',' <p>\n\n<pre>\n&gt; I SSH into the node and looked at /var/emulab/logs/bootsetup.debug .\n&gt; There\'s a line saying:\n&gt; Setting up for SFS ...\n&gt; *** This node does not have a host key, skipping SFS stuff\n</pre>\n\nThis is actually fine - SFS is a filesystem that we don\'t use by\ndefault. So, this error is not fatal. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(206,'ricci',1182,'2005-07-22 17:01:13','Testbed Operations','What is the \"Load Address\" of an OS image?',' <p>\n\nThe \"Load Address\" shown on the Image Descriptor page is the assigned\nmulticast group address. <p>\n\nThe multicast group is used by frisbeed to send the compressed image\nfile, in parallel, to the frisbee clients loading the same image.\nWe use a different multicast address for each image. <p>\n\nThe Load Address is generated by the <code>frisbeelauncher</code> script, which as its\nname suggests, starts frisbeed.  There is also a \"Frisbee pid\", giving the\nprocess ID of the related frisbeed process.   <p>\n\nWhen the frisbeed exits, we clear both the load address and frisbee pid in the\nImage ID. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(207,'stoller',282,'2005-07-27 00:56:54','Testbed Operations','How do I deal with an experiment left in the \"swapping\" state?',' <p>\n\n<pre>\n&gt; the one experiment I created after munging the database,\n&gt; which did get swapped in, but got caught when boss hung,\n&gt; was left in the \"swapping\" state\n</pre>\n\nThings are setup so that after editing the following DB state, you can then\nrerun the swapout:\n<pre>\n       update experiments set\n	  expt_locked=NULL, state=\'active\', canceled=0\n       where pid=\'PID\' and eid=\'EID\';\n</pre>\nChange PID and EID of course. Then do a swapout again ... <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(208,'ricci',1182,'2005-07-27 15:23:30','Testbed Operations','What are the stages that the delay node goes through after the PXE wait?',' <p>\n\nThey actually are supposed to go through exactly the same stages as the\nregular nodes - they are sent a packet that tells them to wait up from\npxewait.  At that point, they contact the bootinfo server on boss, which\ntells them what to boot.  In this case, it\'s the disk, from the FreeBSD\nparitition. <p>\n\n<pre>\n&gt; Does it boot the full FreeBSD410 image or something else (a strip down version)?\n</pre>\n\nIt boots the full FreeBSD410 image. The only difference is that it boots\na different kernel, one with a higher system clock rate (10KHz instead\nof 100 Hz), and some firewalling stuff built in. <p>\n\n<pre>\n&gt; When I nfree the nodes, they are loaded with FBSD.\n&gt; Does delay node boot the FBSD that was already on disk or it get a new\n&gt; image from boss?\n</pre>\n\nIt should boot the one already on disk. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(209,'stoller',282,'2005-07-30 09:43:45','Testbed Operations','What do I do if mkproj fails in the middle?',' <p>\n\n<pre>\n&gt; A mkproj failed because the connection failed at the moment.\n&gt; Now, the project and the members are in the limbo...\n&gt; \n&gt; Is there any easy way that we can recover from this error?\n&gt; Or, should I ask them to re-create the project?\n</pre>\n\nmkproj is setup so that you can rerun it and it will do the right thing,\nmost of the time ... On boss:\n<pre>\n	  withadminprivs /usr/testbed/sbin/mkproj $PROJ\n</pre>\nwhwere $PROJ is the project name. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(210,'mike',27,'2005-08-06 23:26:40','Testbed Operations','How do I remotely power cycle Ops?',' <p>\n\nCouldn\'t get on on the console, hung in inode wait. <p>\n\nFortunately, I plugged ops into a power controller so I found the\nright outlet to power cycle it.  Will see shortly what shape the FS\nis in. <p>\n\nFor the record (I haven\'t narrowed this down), doing: <p>\n\n	power cycle ops foo1 foo2 <p>\n\nshould power cycle it.  I think I may have its redundant PSes plugged\ninto two outlets, hence the need to power cycle more than one thing.\nI tried \"ops\" alone, but it did nothing. <p>\n\nAnd, you can tip to ops from snake.flux.utah.edu. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(211,'stoller',282,'2005-08-16 16:40:35','Testbed Operations','How are tipserv nodes represented in the nodes table?',' <p>\n\n<pre>\n&gt; Should we create some new experiment?  Make them a new node class/type?\n</pre>\n\nOh wait, its the \"role\" slot. It is not a \"testnode\" ...\nMake sure the new ones are not testnode either, but \"ctrlnode\".  <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(212,'mike',27,'2005-08-22 12:06:54','Testbed Operations','Problem getting hostname set, resulting in TBFAILED?',' <p>\n\n<pre>\n&gt; &gt; *** WARNING: pc51 reported a TBFAILED event; not retrying\n&gt; \n&gt; Here is part of the console log from pc51:\n&gt; \n&gt;   Starting elvin proxy daemon\n&gt;   Aug 22 10:24:52  evproxy[265]: could not get IP address from hostname: ...emulab.net^M\n&gt;   *** /usr/local/etc/emulab/rc/rc.bootsetup:\n&gt;       Error running /usr/local/etc/emulab/evproxy\n&gt;...\n&gt;   Mon Aug 22 10:26:24 MDT 2005\n&gt;   ^M\n&gt;   FreeBSD/i386 (...emulab.net) (console)^M\n&gt;   ^M\n&gt; \n&gt; So, it figured out it was allocated correctly...  But, it\'s hostname isn\'t \n&gt; right, has anyone seen that before?\n&gt; \n</pre>\n\nUsually a tmcc failure from the sethostname script. <p>\n\nTry again with the -UPDATE image. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(213,'sklower',31077,'2005-08-29 21:29:12','Testbed Operations','How can I partially swap in an experiment for snmpit debugging?',' <p>\n\n<pre>\n&gt; For debugging, I\'d like to partially swap in an experiment and have stuff\n&gt; through assign_wrapper run so that the vlan info gets pushed into the\n&gt; database.  But then I want to run snmpit -t by hand to see what\'s going on\n&gt; and maybe eyeball the database....\n</pre>\n\nFirst \"preload\" the experiment as normal via the web\ninterface. Basically, you want the experiment in the swapped out state, so\nclick the \"do not swap in\" button. Or, if the experiment is already loaded\nand swapped out:\n<pre>\n	  boss> /usr/testbed/libexec/assign_wrapper $pid $eid\n</pre>\n\nThis will generate a bunch of output, but more important it will load the\nphysical state into the DB (nodes are reserved, vlans table entries\ncreated, etc). Now you can run your snmpit command and watch things\nhappening. <p>\n\nWhen you are done, you need to release the nodes and clean up the\nexperiment state. To do that:\n<pre>\n	  boss> /usr/testbed/bin/tbswap -force out $pid $eid\n</pre>\n\nWhich will generate plenty of warnings and output, but you can ignore it;\nthe physical resource will be released and the DB state cleaned up. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(214,'ricci',1182,'2005-08-30 13:05:28','Testbed Operations','How do I clean up orphaned VLANs?',' <p>\n\nOkay, I\'ve got it cleaned up. I ended up doing it by hand instead of\nusing <code>snmpit -c</code>. Here\'s what I did: <p>\n\nFirst, I found all VLANs that weren\'t supposed to exist by doing:\n<pre>\n  wap snmpit -l -w\n</pre>\nwhich lists all VLANs (-l) plus their VLAN numbers on the switch (-w). <p>\n\nI then tried to delete ones that didn\'t belong to a running experiment\n(as evidenced by an empty \"Project/Experiment\" column. Like so:\n<pre>\n  snmpit -o 900\n</pre>\n(note, you can give more than one -o option at a time) <p>\n\nBut this failed on c2980-netlab. I logged into it to check it out, and\ntried removing the vlan by hand. It complained that it was set up as a\nVTP client, which it most certainly shouldn\'t have been (I suspect you\nchanged that when you were trying to get things working?) I fixed this\nwith a <code>set vtp mode transparent</code> on it. At that point, snmpit started\nworking again. <p>\n\nBut only for some VLANs. It failed on the ones you had deleted manually\non the 4006 and 4506, but not on the 2980; it got confused about their\nexisting on some switches and not others. So, I had to remove a bunch\nfrom the 2980 manually. <p>\n\nI just managed to create a VLAN just fine - why don\'t you try to swap in\nan experiment and see if things are back to normal? <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(215,'mike',27,'2005-09-02 17:15:10','Testbed Operations','How does Emulab find the control interface on Linux?',' <p>\n\n<pre>\n&gt; I somehow forgot how an RHL9 disk image finds the  \n&gt; control interface and fills out the /var/emulab/boot/controlif file.   \n&gt; I thought, the mechanism is the same as the one on FreeBSD on which\n&gt; /usr/local/etc/emulab/control_interface is a script that uses the  \n&gt; result of nodetype and etc.\n</pre>\n\nIn the current world order, we DHCP on all interfaces and take the one\nthat first responds to be the control net.  So /etc/dhclient-exit-script\n(which should be on both BSD and Linux) is the one that creates the\ncontrolif file. <p>\n\ncontrol_interface is a dreg, all it does now is cat the controlif file. <p>\n\nThe way that we actually force dhcp on all interfaces is hideous and\nperverted.  See /etc/sysconfig/network-scripts/ifcfg-eth99. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(216,'mike',27,'2005-08-29 11:05:09','Testbed Operations','How do I get an updated image loaded in an experiment, or globally?',' <p>\n\nTurns out you were not getting the right image.  If you are interested in\nseeing if the fix does work, you can do the following to your existing\nexperiment.  From ops (users) do:\n<pre>\n	  os_load -i FBSD41-STD-COM1 -e eWorm,fixtest\n</pre>\n\nThat will force it to load the correct image on the machines. <p>\n\nISI testbed-ops: the problem is that the FBSD41-STD-COM1 osid exists in\nboth the new single-partition image you built as well as the whole-disk\nimage.  When he created the experiment requesting FBSD410-STD-COM1, the\nsystem saw that that OSID was in the image that was already on the disk\nand it didn\'t bother to reload the disk.  Since you didn\'t create a new\nwhole-disk image, he got the old version.  So you need to create a new\nwhole-disk image with the fix. <p>\n\nAnd that is not all.  Even with the new whole-disk image, all your existing\nfree nodes still have the old image, so you have to force them to reload\ntheir disks with sched_reload.  I do:\n<pre>\n	  withadminprivs sched_reload -t pc733 -t pc2800 ...\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(217,'ricci',1182,'2005-09-12 11:32:29','Testbed Operations','How many VLANs should be created for an experiment?',' <p>\n\n<pre>\n&gt; Only *1* VLAN gets instantiated instead of 2:\n</pre>\n\nActually, this is not necessarily a problem. There are a couple reasons\nfor this: <p>\n\n1) When using vnodes, it\'s possible that assign puts all members of a\nLAN on the same physical node, in which case no switch VLAN is needed. <p>\n\n2) When multiplexed links are being used, we have to do some tricks with\nthe VLANs to make sure they can all talk to each other. Basically, we\nhave to take the transitive closure of the set of interfaces that need\nto talk to each other. So, two or more NS file links/LANs may end up in\nthe same switch VLAN. <p>\n\n3) When multiplexed links are being used, we may be using the same\ninterface for two or more links, so you may see one switch VLAN that\nrepresents more than one LAN. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(218,'kwebb',10109,'2005-09-14 19:05:56','Testbed Operations','How do I grant RON node access to a project?',' <p>\n\nI don\'t \nthink the first step is strictly necessary except in the intial web \napproval path, but just to record things properly in the DB I did it \nanyway: <p>\n\n1) Update the pcremote_ok column with the approved types:\n<pre>\n  UPDATE projects set pcremote_ok = \'pcron,pcwa\' where pid = \'$pid\';\n</pre>\n\n2) Grant permission for RON/widearea nodes:\n<pre>\n  wap grantnodetype -p <pid> pcvwa\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(219,'kwebb',10109,'2005-09-24 12:13:59','Testbed Operations','How do I force a reload of everything in \"reloading\"?',' <p>\n\nIt may be necessary force a reload of everything in \"reloading\" if the normal\nreloading process is interrupted. <p>\n\nThe easiest way to do this is:\n<pre>\n	  nfree emulab-ops reloading\n</pre>\n\nSince the nodes are still dirty, they will be sucked back into the \nreloading experiment where the reload daemon will then try os_load\'ing \nthem again. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(220,'stack',424,'2005-09-25 10:45:47','Testbed Operations','How do I handle failed swapouts?',' <p>\n\nJust swap them out again.  They may be left in the \"active\" state with no\nnodes. <p>\n\nDoing another swapout usually fixes everything back up. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(221,'stoller',282,'2005-10-11 14:47:18','Testbed Operations','How do I set a policy to restrict swapins during crunch times?',' <p>\n\nWe announce that for a specified timeframe leading up to a crunch deadline\nsuch as NSDI, only authorized people who have identified themselves as working\non that deadline will be able to swap in experiments. <p>\n\nWe create a project, named DEADLINE, and add these people to the group.  They\ndon\'t run experiments in the project, just their membership in it allows them\nto work normally. <p>\n\nTo install the global policy that will restrict swapins to members of a\nparticular list of groups:\n<pre>\n	  mysql&gt; delete from global_policies;\n	  mysql&gt; insert into global_policies values\n	  mysql&gt;       (\'membership\', \'emulab-ops,testbed,DEADLINE\', \'eq\', 0);\n</pre>\nNotice that the essential local groups as well as the crunch group are included. <p>\n\nIt is important to delete the current policy first, since my hack is too\nbraindead to deal with multiple rows. <p>\n\nThe second argument is a list of pids, up to 128 characters. I\'ll fix that\nlater, maybe. The last two args do not really matter; they are ignore, but\nthey have to be something.  <p>\n\nWhen it is time to remove the restriction, just execute the delete\nstatement. <p>\n\n<hr>\n\nWe also intend that the DEADLINE users also use the per-project mailing list\nto negotiate conflicts.  If we need to administer the list (address bounces,\netc) go here (red dot). <p>\n\n	https://www.emulab.net/showproject.php3?pid=DEADLINE <p>\n\nDown on Project Mailing List line you will see \"(admin access\"). Click that and you\nare logged in to the list with admin rights. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(222,'stack',424,'2005-10-21 11:02:48','Testbed Operations','How do I handle \"Failed to start the event system\" errors?',' <p>\n\n<pre>\n&gt; Starting the event system.\n&gt; TIMESTAMP: 10:50:24:2200 eventsys_control started\n&gt; *** /usr/testbed/sbin/eventsys.proxy:\n&gt;     Failed to start event system for POPI/popitest: 2852 11!\n&gt; *** Failed to start the event system.\n&gt; Cleaning up after errors.\n&gt; Stopping the event system\n</pre>\n\nLook in event-sched.log in the experiment\'s log directory to find out what\'s happening. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(223,'stoller',282,'2005-10-21 14:07:59','Testbed Operations','How do I turn off idle detection?',' <p>\n\n<pre>\n&gt; 	So we get periodic e-mails warning us that our nodes stuck in\n&gt; reloading or those in hwdown have been idle for such and such a time and\n&gt; could we please terminate or swap the experiment out.  While the reloading\n&gt; e-mails are somewhat useful the hwdown e-mails are definitely not.  Is\n&gt; there a way to turn off idle detection or reporting for special\n&gt; experiments like hwdown?\n</pre>\n\nYour emulab-ops experiments were set up before the install process took\ncare of this ... <p>\n\nIn red dot mode, go to the experiment page for emulab-ops/hwdown. Click on\nEdit Metadata and you will see an option called \"idle ignore\" which tells\nthe idle daemon to skip it. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(224,'stoller',282,'2005-10-29 07:00:56','Testbed Operations','How do I add group \"wheel\" access for help from Utah on my Emulab?',' <p>\n\n<pre>\n&gt;    I have gone ahead and added you all to the wheel group itself , so \n&gt; you should have all the access you need, i guess. Thanks for helping us \n&gt; out.\n</pre>\n\nNot sure this is documented ... but the proper way to do this so that it is\n\"sticky\" (entered in the DB so it doesn\'t get wiped out) is: <p>\n\n	boss> withadminprivs /usr/testbed/sbin/unixgroups -a mike wheel <p>\n\nAlso note that people with \"admin\" status are automatically added to group\nwheel by the account system. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(225,'stoller',282,'2005-10-31 15:22:51','Testbed Operations','How do I administer a per-project mailing list?',' <p>\n\nThere is a \"Project Mailing List:\" link on the project page. <p>\n\nIf you are an admin person (red dot) and not in the project, use the \"(admin\naccess)\" link right next to it. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(226,'stoller',282,'2005-11-03 11:22:15','Testbed Operations','Problem with IP addresses not being configured.',' <p>\n\n<pre>\n&gt; When I swap in an experiment, the IP addresses for the interfaces on the\n&gt; experiment are not set automatically-which I assume they should be for\n&gt; the customized generic FBSD image.  From sdcollectd.log on boss:\n</pre>\n\nFirst thing to do is look in /var/emulab/boot on the broken nodes and see\nif the node is getting the right stuff from the DB. <p>\n\nWhat is in /var/emulab/boot/tmcc/ifconfig ? ... If it\'s empty, then the DB is\nnot setup properly and we need to look further upstream.  <p>\n\n<hr>\n\n<pre>\n&gt; INTERFACE IFACETYPE=sk INET=10.1.1.2 MASK=255.255.255.0 MAC=0004e2d6ab65\n&gt; SPEED=1000Mbps DUPLEX=full IPALIASES=\"\" IFACE= RTABID=0 LAN=lan0\n&gt; \n&gt; I\'m assuming that the IFACE= with the missing value is likely the\n&gt; problem..\n</pre>\n\nThe IFACE can actually be null; its really an override used with virtual\nnodes. <p>\n\nAnyway, the MAC address is more important. Is that MAC address really on\nthe node, and is that interface \"active\" to the switch (did the switch port\nget activated?) <p>\n\nAnd of course, I assume you looked at the console log for obvious errors! <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(227,'stoller',282,'2005-11-04 13:50:09','Testbed Operations','What does \"Could not remove project\" mean?',' <p>\n\n<pre>\n&gt; Subject: EMULAB.NET: TBExptDestroy: Could not remove directory\n&gt; \n&gt; Could not remove /proj/tbres/exp/it-lan.\n&gt; Someone will need to do this by hand.\n</pre>\n\nThis happens when you terminate an experiment while still running something\ninto a file in that directory, or because your current working directory is\nin there. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(228,'stoller',282,'2005-11-08 06:41:44','Testbed Operations','How do I cross-reference Knowledge Base entries?',' <p>\n\nJust a reminder to people. The reason for the \"cross reference tag\" in the\nkb entry is so that you can do this:\n<pre>\n	  href=\"../kb-show.php3?xref_tag=tiptunnel\"\n</pre>\ninstead of:\n<pre>\n	  href=\"../kb-show.php3?idx=39\"\n</pre>\n\nThe former makes it possible to export the KB without worrying about how\nthe remote DB loads the entries. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(229,'ricci',1182,'2005-11-11 15:29:14','Testbed Operations','Where are messages from the Cisco switches logged?',' <p>\n\nThe log is in boss:/usr/testbed/log/cisco-switches . <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(230,'ricci',1182,'2005-11-16 14:23:58','Testbed Operations','Problems with switches dropping out of the switch stack.',' <p>\r\n\r\n<pre>\r\n&gt; Our Nortel switch stack has 7 pizza boxes.\r\n&gt; Since the weekend, some of the boxes randomly drop out of the switch  \r\n&gt; stack.\r\n&gt; Power cycling puts the units back to the stack, but it does not last  \r\n&gt; more than half a day.\r\n&gt; Then, some other units drop out next...\r\n</pre>\r\n\r\nI would recommend looking to see if there were any experiments that were\r\nswapped in every time the switch failed.  In our experience, it\'s not too\r\nuncommon to have experimenters send traffic that makes the switches\r\nbehave badly. <p>\r\n\r\n<hr>\r\n\r\nUpdate from Keith Sklower, 10/04/06 16:26 <p>\r\n\r\nWhat the problem actually turned out to be was that I was trying\r\nto enable multicast snooping via SNMP, and this is on not just the\r\nslow path but the slow-as-molasses-in-january-slow path, so the\r\nsnmpit code was retrying much too agressively, and the nortels\r\nseemed to regard the retried requests as <b>new</b> ones, got behind,\r\ngot mad, crashed, etc... <p>\r\n\r\nAnd, IGMP snooping is unnecessary anyway.  The current nortel snmpit\r\nmodule now, after it does any potentially challenge set, does\r\na suitably delayed get, retrying that a few times before giving up\r\n(for something on the order of 30 seconds) before retrying the set. <p>\r\n\r\nIGMP snooping is normally turned off, but can be enabled (at your\r\nperil) by setting $self-&gt;{SKIPIGMP} = 0; up in sub new($$$;) of\r\nsnmpit_nortel.pm <p>\r\n\r\n\r\n\r\n\r\n',NULL,0,'2006-10-05 10:35:42','fish',30775,0,NULL,NULL,0),(231,'stack',424,'2005-11-17 16:18:59','Testbed Operations','How do I grant access to the Emulab Mobile Wireless Testbed.',' <p>\n\n\"robot\" and \"mote\" are classes of node types.  Use these commands to grant\naccess, replacing $pid with the project name:\n<pre>\n    grantnodetype -p $pid robot\n    grantnodetype -p $pid mote\n</pre>\n\nHere\'s a message template you can send to the user:\n<pre>\nWe\'ve granted you access to the robots and the mica motes, so you should\nbe able to mess around with them now.  If you haven\'t already found it,\nthere is a short tutorial for using the robots here: <p>\n\n  http://www.emulab.net/tutorial/mobilewireless.php3 <p>\n\nAlso, if you\'re having robot-related problems, you\'ll want to send mail \nto: <p>\n\n  testbed-robocops@flux.utah.edu <p>\n\ninstead of \"testbed-ops\" since it will reach the robot knowledgeable\npeople.\n</pre>\n\nUntil we get auto-charger bases for the Garcia\'s, swapping-in a robot\nexperiment requires manual intervention.  When there is a large time\ndifference involved, we\'ll have to work something out so the user can still\nrun the robots while we\'re not physically present to change batteries and fix\nany random problems.  (For example, swap in before going home.) <p>\n\nThe static motes should be usable all the time though. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(232,'ricci',1182,'2005-11-28 11:53:27','Testbed Operations','How do I enable multicast for Frisbee on router interfaces?',' <p>\n\n<pre>\n&gt; Could be you need to explicitly enable multicast on the router interfaces.\n</pre>\n\nIt\'s a Cisco router? <p>\n\nIf so, I think these are the two magic configuration lines you need to\nfeed it:\n<pre>\n  ip multicast-routing\n  ip multicast multipath\n</pre>\n\nIf you have any firewall rules, you\'ll need to allow igmp through them. <p>\n\nIf the switch is a CatOS switch, here are the two commands to get\nmulticast working at the switch level:\n<pre>\n  set igmp enable\n  set igmp fastleave enable\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(233,'stoller',282,'2005-11-30 11:57:43','Testbed Operations','How do I rename a project?',' <p>\n\nCreate a new project the old fashioned way, and then magically move the\nmembership over.  Much easier then trying to rename a project! <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(234,'mike',27,'2005-10-14 22:51:19','Testbed Operations','How can I control the Reserved Nodes list on the Experiment info page?',' <p>\n\nUnder showexp.php3,\n<ol>\n  <li> Add a \"showclass\" param to shownodes so that the\n    node listing will include only nodes of the indicated class.\n    Prepend \"no-\" to exclude nodes of a particular class.  So:\n    <pre>\n	showexp.php3&amp;pid=...&amp;showclass=pc,mote\n    </pre>\n    would show just pcs and motes.\n  </li>\n\n  <li> Now the real reason I added the above: the hwdown experiment\n    node list includes \"showclass=no-pcplabphys\" by default, so I don\'t have\n    to flip through 600+ dead plab nodes.  Change the URL to \"&amp;showclass=all\"\n    if you want to see the plab nodes in hwdown.\n  </li>\n</ol>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(235,'mike',27,'2005-12-02 09:49:42','Testbed Operations','How do I find out switch port info for a given node?',' <p>\n\n\"if2port pcNNN\" is the quick way to find this out. <p>\n\n<pre>\n#\n# if2port - Given an interface (specified as node[:card]), find the\n# port on the switches that it\'s connected to. With the -v switch, gives\n# some human-readable information to help in following wires and diagnosing\n# problems.\n# <p>\n\n#\n# IMPORTANT: This file contains some information specific to the Utah\n# Network Testbed! If you want to use it in another enviroment, change\n# the information below (%switches, %cards, %wires)\n#\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(236,'mike',27,'2005-12-02 12:53:16','Testbed Operations','Gig-e links on Ops.',' <p>\n\nIn case it helps, ops has Gb links to both cisco5 and cisco8 that you can\nuse for spanning:\n<pre>\n	  em0: cisco5.2/16\n	  em1: cisco8.1/26\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(237,'mike',27,'2005-12-05 09:23:07','Testbed Operations','How do I see interface error counts?',' <p>\n\nOn FreeBSD, \"netstat -i\" will show if there are errors. <p>\n\nIf you want more detail, you can do \"sudo sysctl hw.emN.stats=1\" where N is\nthe interface number, and stats will get spit out on the console. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(238,'kwebb',10109,'2005-12-26 13:44:56','Testbed Operations','What can cause NFS mount failures to fs/ops?',' <p>\n\n<pre>\n&gt; &gt; ...\n&gt; &gt; *** Giving up on pc131 - it\'s been 7 minute(s).\n&gt; &gt; Tail of pc131 console:\n&gt; &gt; pc131:     WARNING: Could not /bin/mount -o vers=2,udp  \n&gt; &gt; fs.emulab.net:/users/rricci on /users/rricci: No such file or  \n&gt; &gt; directory.\n&gt; &gt; pc131:   Mounting fs.emulab.net:/users/barb on /users/barb.\n&gt; &gt; pc131: mount: RPC: Timed out.\n&gt; &gt; ...\n&gt; \n&gt; When mountd was restarted it wasn\'t set to listen on port 900, which we\n&gt; do for some reason.  I\'ve restarted it with <code>mountd -r -p 900</code>.\n</pre>\n\nWe do it so that we don\'t have to worry about which of the 100s of ports \nSUN-RPC might choose for it (and thus have to open gaping holes in the \nfirewall to accomodate).  This is setup in /etc/rc.conf, but if we start it \nourselves, we have to remember to specify the port. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(239,'ricci',1182,'2005-12-27 10:47:21','Testbed Operations','How do I check for partial switch setup/teardowns?',' <p>\n\n<pre>\n&gt; With the new improved snmpit, I guess all operations should have failed\n&gt; with an error, so there should have been no partial setup/teardowns that\n&gt; would lead to it getting out of synch.\n</pre>\n\nYeah, that SHOULD be the case. <p>\n\nHere\'s what I did to check:\n<pre>\n  wap snmpit -l -i cisco5\n</pre>\n\n... and looked for VLANs with no members. Since cisco5 is not a\n\"transit\" switch (ie. it\'s only connected to one other switch), it\nshouldn\'t ever have VLANs with no members. <p>\n\nThere was one, I deleted it. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(240,'kwebb',10109,'2005-12-27 14:33:02','Testbed Operations','How do I deal with \"ERROR - unable to find channel information\"?',' <p>\n\n<pre>\n&gt; TIMESTAMP: 13:08:30:645860 rebooting/reloading finished\n&gt; Waiting for local testbed nodes to finish rebooting ...\n&gt; TIMESTAMP: 13:08:30:647433 Local node waiting started\n&gt;   Creating VLAN 252683 as VLAN #320 on cisco8 ... Succeeded.\n&gt;     Applying VLAN changes on cisco8 ... Succeeded\n&gt;   Creating VLAN 252683 as VLAN #320 on cisco3 ... Succeeded.\n&gt;     Applying VLAN changes on cisco3 ... Succeeded\n&gt; ERROR - unable to find channel information on cisco3 for cisco3-cisco8 EtherChannel\n&gt; *** snmpit: Failed to create VLAN with id 252683\n&gt; *** tbswap: Failed to set up VLANs.\n&gt; Cleaning up after errors.\n&gt; Waiting for os_setup to finish\n</pre>\n\nI turned trunking on and off on cisco3 as Rob described he did the last \ntime cisco3 had trouble finding the channel info.  I submitted an \nexperiment with links that crossed the cisco3-cisco8 and cisco3-cisco5 \ntrunks and it came up fine (links test OK).  Teardown succeeded as well. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(241,'kwebb',10109,'2006-01-03 16:27:27','Testbed Operations','Why is switch cisco8 special?',' <p>\n\n<pre>\n&gt; What does this mean?\n&gt; \n&gt; &gt; Jan  3 14:42:20 cisco8 3535: 4d04h: %SYS-5-CONFIG_I: Configured from\n&gt; &gt; 10.11.12.1 by snmp\n&gt; \n&gt; cisco8 appears to be the only switch doing this, or at least its the only\n&gt; saying it is!\n</pre>\n\ncisco8 runs IOS (which it must) whereas all the others run CatOS, thus the \nunique output.  This is a normal/harmless message. <p>\n\n<pre>\n&gt; &gt; Basically, its hard to see what is happening on cisco 8 since its only\n&gt; &gt; message is that one about being configured. No details ...\n&gt; \n&gt; Yeah...  Let me see if I can find a way to crank up it\'s logging.\n</pre>\n\nNothing I tried seemed to make any difference, and the IOS reference guide \nis no help.  I did change the syslog facility to local7 so that cisco8\'s \nmessages will go into /usr/testbed/log/cisco-switches (like all the other \nswitches).  They were going into /var/log/cisco . <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(242,'stack',424,'2005-12-13 14:24:25','Testbed Operations','Where do I find NFS trace logs?',' <p>\n\nRecently, we\'ve been collecting some trace data on what files people are \naccessing over NFS on the testbed.  The plan is to be able to take a \nsnapshot of the files and potentially restore them at some future date.  \nThe traces consist of file names and, in the more recent traces, the sizes \nof the files and whether they\'ve been read or written.  In case you\'re \ninterested in what these look like, I\'ve collected the logs into a mail \narchive and put them in my home on bas.\n<pre>\n    mutt -R -f ~stack/flux/nfstrace.mail\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(243,'mike',27,'2006-01-16 12:31:50','Testbed Operations','Is there a backdoor to log in to the web interface when nologins is set?',' <p>\n\nI always forget what it is and eventually stumble upon it again, try: <p>\n\n        https://www.emulab.net/login.php3?adminmode=1 <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(244,'kwebb',10109,'2006-01-17 12:31:50','Testbed Operations','How do we prevent spam on the Emulab mailing lists?',' <p>\n\nEveryone needs to remember to add the \"X-Auth:\" header when sending to any of\nthe emulab-* lists.  Without it, the message is bounced and its headers are\neventually logged to testbed-ops in a \"Spam Report\" message (twice a day.) <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(245,'stoller',282,'2006-01-23 06:54:43','Testbed Operations','How do I reserve nodes for an experiment in bulk?',' <p>\n\nThere is a \"Pre-Reserve Node\" option on the red-dot shownode page to cause a\nnode to be allocatable only to a given project.  But to\nreserve a large number of nodes this way would be painful. <p>\n\nYou can go directly to the DB to do it by node type, for example:\n<pre>\n	  update nodes set reserved_pid=\'tbres\' where type=\'pc3000\';\n</pre>\n\n<pre>\n&gt; 1. What happens after an experiment uses some of these nodes?  Does the\n&gt; reserved_pid field stay set?\n</pre>\n\nYes, it stays set. <p>\n\n<pre>\n&gt; 2. What is the incantation to undo the reservation? <p>\n\n	update nodes set reserved_pid=NULL where type=\'pc3000\';\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(246,'mike',27,'2006-03-07 15:48:20','Testbed Operations','Problem with nodes getting stuck in an infinite loop under os_load',' <p>\n\nOur nodes are getting stuck in an infinite loop when we try to os_load\nthem.  Rob and I looked at it a bit and the sequence seems to be this: <p>\n\n<pre>\n  Node:\n  1. Reboots into frisbee and frisbees fine.\n  2. Node says \"Waiting for server to reboot us ...\".  This never happens.\n  3. Stated times out in state RELOAD/RELOADDONEV2.\n  4. Node times out and \"No response from server, rebooting myself ...\"\n  5. As stated timed out the node boots back into frisbee. GOTO 1.\n</pre>\n\nAny idea what could be causing this?  It seems the problem is that the\n\"Waiting for server...\" never gets satisfied. <p>\n\n<hr>\n\n<pre>\n&gt; Make sure your stated is sending an \"ipod\" for nodes in the\n&gt; RELOADDONEV2 state.\n</pre>\n\nHow do I check this?  There is no mention of ipod in stated.log. <p>\n\n<hr>\n\nhandleCtrlEvent() in /usr/testbed/sbin/stated on Boss should have:\n<pre>\n	      if ($event eq $TBRELOADDONEV2) {\n		  info(\"Sending an apod to $node\n\");\n		  system(\"$apod $node\") == 0 or\n		      notify(\"Could not apod $node after $TBRELOADDONEV2!\n\");\n	      }\n</pre>\n\nIf it does, maybe the apod (authenticated ipod) is not being properly\ntriggered.  If the IP/mask/key were wrong, then the client would be\nputting out a message on the console about a failed ipod.  Since you\ndon\'t see that, it would mean that maybe icmp type 6 packets are not making\nit to the node. <p>\n\n<hr>\n\nThe code is there. <p>\n\nThere is no such console message.  If I run apod manually it correctly\nreboots the node. <p>\n\n<hr>\n\n<pre>\n&gt; Does your stated log have lines like:\n&gt;   Mar  7 00:01:17 boss stated[323]: Clearing reload info for pc211\n&gt;   Mar  7 00:01:17 boss stated[323]: Sending an apod to pc211\n&gt;</pre>\n \nNo. <p>\n\n<hr>\n\n<pre>\n&gt; Do you have this in your DB:\n&gt; \n&gt; mysql&gt; select * from state_transitions where state1=\'RELOADDONEV2\' or state2=\'RELOADDONEV2\';\n&gt; +---------+-----------+--------------+------------+\n&gt; | op_mode | state1    | state2       | label      |\n&gt; +---------+-----------+--------------+------------+\n&gt; | RELOAD  | RELOADING | RELOADDONEV2 | ReloadDone |\n&gt; +---------+-----------+--------------+------------+\n&gt; 1 row in set (0.00 sec)\n&gt; \n&gt; though I am not entirely clear what all \"state\" state there is in the DB\n&gt; and what is important.\n</pre>\n\nOkay, I found the problem. <p>\n\nI had mismerged my scenario additions to database-fill.sql and as a result\nhad missed a single line, a state trigger to trigger a reboot on\nreloading.  After fixing database-fill.sql and refilling it looks like\neverything is working. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(247,'stack',424,'2006-03-13 15:33:44','Testbed Operations','What can cause topomap write failures to prevent swap-in?',' <p>\n\nThis can happen when the disk fills up on Ops. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(248,'ricci',1182,'2006-03-15 10:13:53','Testbed Operations','When do trunks show up on a control-net switch?',' <p>\n\n<pre>\n&gt; We occasionally have a trunk show up on our switch.  I know snmpit can now\n&gt; set up trunks.  Is there any code anywhere that might call snmpit to set\n&gt; up a trunk?\n</pre>\n\nAs far as I know, that option is only ever called for control-net\nswitches, and only when an experimenters requests that the experiment be\nfirewalled off from the outside world. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(249,'stoller',282,'2006-03-16 12:17:34','Testbed Operations','Logging of testbed errors to their own list under Tblog',' <p>\n\nNew list created; testbed-errors@flux.utah.edu ... <p>\n\nI added it to config, so you can reference @TBERRORSEMAIL@ in your scripts\n(like TBOPSEMAIL is). <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(250,'stoller',282,'2006-03-20 12:23:39','Testbed Operations','How long do user transaction keys last?',' <p>\n\nVerification keys for new user requests do not expire. <p>\n\nThe key used for change password (from the Forgot Your Password page) expires quickly. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(251,'stoller',282,'2006-03-23 06:08:16','Testbed Operations','What can cause the Boss CVS tree to get out of date?',' <p>\n\nI think someone checked in some files that were not in the flux\ngroup.  Not sure what happened, but after I did a \"chmod -R flux\" on the\ntestbed repo (/usr/testbed/CVS/testbed), it started working again. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(252,'mike',27,'2006-03-22 09:56:13','Testbed Operations','How do I deal with a non-existent experiment with allocated nodes?',' <p>\n\nThere are nodes in the reserved table associated with a non-existent\nexperiment:\n<pre>\n  mysql> select node_id,pid,eid,rsrv_time,vname,erole from reserved where eid=\'team4\';\n  +---------+-----------+-------+----------------+-----------+-----------+\n  | node_id | pid       | eid   | rsrv_time      | vname     | erole     |\n  +---------+-----------+-------+----------------+-----------+-----------+\n  | pcwf16  | CEN5540P2 | team4 | 20060321160016 | A4        | node      |\n  | pcwf7   | CEN5540P2 | team4 | 20060321160016 | A1        | node      |\n  | pc133   | CEN5540P2 | team4 | 20060321160017 | G4        | node      |\n  | pc134   | CEN5540P2 | team4 | 20060321160017 | tbsdelay0 | delaynode |\n  | pc144   | CEN5540P2 | team4 | 20060321160017 | G3        | node      |\n  | pc147   | CEN5540P2 | team4 | 20060321160017 | G2        | node      |\n  | pcwf8   | CEN5540P2 | team4 | 20060321160016 | FTP2      | node      |\n  | pc131   | CEN5540P2 | team4 | 20060321160016 | fw        | node      |\n  | pc275   | CEN5540P2 | team4 | 20060321160015 | G1        | node      |\n  | pcwf1   | CEN5540P2 | team4 | 20060321160015 | A3        | node      |\n  | pcwf5   | CEN5540P2 | team4 | 20060321160015 | FTP1      | node      |\n  | pcwf14  | CEN5540P2 | team4 | 20060321160015 | A2        | node      |\n  | pcwf15  | CEN5540P2 | team4 | 20060321160015 | V         | node      |\n  | pc130   | CEN5540P2 | team4 | 20060321160016 | G5        | node      |\n  | pcwf18  | CEN5540P2 | team4 | 20060321160017 | C         | node      |\n  +---------+-----------+-------+----------------+-----------+-----------+\n  15 rows in set (0.00 sec)\n</pre>\n\nThis was one of the firewall experiments that failed.  Probably related\nto the wifi nodes.  But I have not been able to track down how/when nodes\ngot left in reserved. <p>\n\nI will just clear these \"team4\" rows from the reserved table and look\naround a bit more for other \"team4\" state, unless someone has a better idea. <p>\n\nThe other places where state exists are: delays, v2pmap, vlans. <p>\n\n<hr>\n\n<pre>\n&gt; Sounds like something really went bad during one the recent mysql\n&gt; lockups.\n</pre>\n\n<hr>\n\n<pre>\n&gt; &gt; I\'m guessing that I cannot free them up, that nfree will see that the\n&gt; &gt; experiment they are in doesn\'t exist and will choke?  But I will try.\n&gt; \n&gt; Just remove the entries from the reserved table by hand.\n&gt; \n&gt; 	delete from reserved where pid=\'xxx\' and eid=\'team4\';\n</pre>\n\nI created an experiment emulab-ops/team4 using an NS file that used the\nsame vnames and tb-fix-node\'ed all the right nodes. <p>\n\nFor all those tables with info for CEN5540P2/team4, I changed the eid to\nemulab-ops.  Now all the nodes were hooked up with my experiment. <p>\n\nThen I changed the experiment state to active and swapped it out.\nEverything seems to have been cleaned up as it should have. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(253,'mike',27,'2006-03-22 14:32:01','Testbed Operations','Problem with os_load',' <p>\n\n<pre>\n&gt; Sometimes when I try to load an image I see:\n&gt; \n&gt; ---\n&gt; boss:~ 1 (108)&gt; wap os_load -i FBSD410+RHL90-STD pc-i2-42-a\n&gt; osload (pc-i2-42-a): Changing default OS to emulab-ops-FBSD410-STD\n&gt; osload: Updating image signature.\n&gt; *** swapinfo: WARNING: got no partition info for pc-i2-42-a!\n&gt; Setting up reload for pc-i2-42-a (mode: Frisbee)\n&gt; osload: Issuing reboot for pc-i2-42-a and then waiting ...\n&gt; reboot (pc-i2-42-a): Attempting to reboot ...\n&gt; reboot (pc-i2-42-a): Successful!\n&gt; reboot: Done. There were 0 failures.\n&gt; ...\n&gt; ---\n&gt; \n&gt; and the node never comes up and it eventually gives up.   Looking at the\n&gt; console  I see:\n&gt; \n&gt; ---\n&gt; &gt; telnet ts-42 pc-i2-42-a\n&gt; Trying 198.133.225.212...\n&gt; Connected to ts-42.schooner.wail.wisc.edu.\n&gt; Escape character is \'^]\'.\n&gt; CC\n&gt; pollinfo: Got one\n&gt; Entering boot wait mode. Type ^C for interactive mode ...\n&gt; pollinfo: Got one\n&gt; Entering boot wait mode. Type ^C for interactive mode ...\n&gt; pollinfo: Got one\n&gt; Entering boot wait mode. Type ^C for interactive mode ...\n&gt; ---\n&gt; \n&gt; So it doesn\'t actually boot to frisbee.  The bootinfo.log gives:\n&gt; \n&gt; ---\n&gt; Mar 22 12:18:09 boss bootinfo[71809]: 198.133.225.26: SEND: query bootinfo\n&gt; Mar 22 12:18:09 boss bootinfo[346]: 198.133.225.26: REQUEST (vers 1)\n&gt; Mar 22 12:18:09 boss bootinfo[346]: 198.133.225.26: REPLY: wait mode\n&gt; ---\n&gt; \n&gt; Is the partition info error important?  Any ideas what\'s going on?\n</pre>\n\nWere you trying to load a free node?  In my experience, os_loading a free\nnode (i.e., one that is in PXEWAIT) never works right unless you use\nsched_reload. <p>\n\nThe swapinfo WARNING should not matter, it is only for tracking hash\nsignatures which are not used yet. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(254,'stoller',282,'2006-03-22 16:25:55','Testbed Operations','How do I deal with warnings that \"Linktest is already running\"? ',' <p>\n\n<pre>\n&gt; The CEN5540P2/team7 experiment shows that linktest is running.\n&gt; When I go look at the swapin log, it says:\n&gt; \n&gt; 	*** WARNING: tbswap: Linktest is already running! 66927\n&gt; \n&gt; I don\'t think it is really running, but I suspect that maybe something\n&gt; got left behind by a previous failed swapin/swapout.  What is it that\n&gt; indicates linktest is running?\n</pre>\n\nThe linktest_pid in the experiments table? <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(255,'mike',27,'2006-03-28 10:31:37','Testbed Operations','What is the purpose of \"/tftpboot/proj\" ?',' <p>\n\n<pre>\n&gt; &gt; The problem is that /tftpboot/proj does not exist.  mkproj is indeed\n&gt; &gt; setuid.\n&gt; \n&gt; Who removed it? Seriously, that directory has been around for years, or in\n&gt; your case since you brought your emulab up.\n&gt; \n&gt; In any event, it is a symlink to /usr/testbed/tftpboot ...\n&gt; \n&gt; Note to tbops; I do not think we use this anymore, so I will delete it\n&gt; unless someone objects.\n</pre>\n\nI believe it is there for OSKit or other netboot\'ed kernels.  Really, for\nany place where a Mere User needs to TFTP boot something.  I am hesitant to\nremove it. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(256,'ricci',1182,'2006-04-09 19:12:44','Testbed Operations','What\'s special about NTP on PLAB-DEVBOX?',' <p>\n\nOkay, the PLAB-DEVBOX image now has working ntp. <p>\n\nOne thing to be careful of - it takes ntpd a while to sync after the node boots. So,\nfor the first 10-15 minutes after the node boots, ntptrace won\'t work.\nAfter that, though, it should. <p>\n\n(This gave me trouble - I thought ntpd wasn\'t working, when, in fact, I\njust hadn\'t given it enough time.) <p>\n\n<pre>\n&gt; Then why would it still take 15 minutes to sync?  Is ntpdate not working?\n</pre>\n\nThe time is set correctly - it just seems to take ntpd a while to decide\nwhat stratum it\'s on. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(257,'kwebb',10109,'2006-04-17 14:48:32','Testbed Operations','Problem with events not firing on plab nodes.',' <p>\n\n<pre>\n&gt; &gt; Which experiment is this?  It turns out that plab450 is the same node \n&gt; &gt; Kevin reported problems with.\n&gt; \n&gt; It\'s tbres/nstest. I just swapped it in this morning. I\'ll turn off\n&gt; ide-swap so that you can look at it w/o it getting swapped out.\n</pre>\n\nOK, it turns out that the messages complaining about mapping to agents \nlike \"__plab_XXX\" are expected.  You will find several of these scattered \nabout in most any event scheduler log.  Essentially, any time a plab event \nproxy first comes online, it will broadcast an UPDATE event destined to \nall schedulers so that it can get itself subscribed to all experiments \nthat have a vnode (sliver) residing on it\'s respective host.  If your \nexperiment isn\'t one of these, then your experiment\'s event scheduler will \ncomplain thusly.  We can squelch these errors pretty easily, but they \naren\'t doing any harm so I\'ll punt for now. <p>\n\nHowever, one of the nodes (plab122) you are using is in the same state I \nfound plab450 in:  The proxy is connected, but not receiving events from \nops.  I\'m going to hack up a little program to dump the set of \nsubscriptions from an elvind to help track this down further (if someone \nhas already done this, please speak up!). <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(258,'mike',27,'2006-04-19 13:02:49','Testbed Operations','Problem with a Linux frisbee image coming up in FreeBSD.',' <p>\n\n<pre>\n&gt; 	I just created a disc image on pc-i2-44-d.  It is a Linux disk image\n&gt; that has Click installed.  I have made a brand new disc image called\n&gt; Click2 just to be on the safe side.  When I os_load a node with the\n&gt; image, the node comes up with FreeBSD.\n</pre>\n\nA couple of possibilities:\n<ol>\n  <li> The node could be stuck in \"admin mode\" for some reason.\n       You can \"admin_mode -n off pcXXX\" to turn it off.\n  </li>\n\n  <li> He specified the boot partition wrong in the imageid (1 instead of 2).\n  </li>\n</ol>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(259,'stoller',282,'2006-04-26 07:13:37','Testbed Operations','Problem with Elab mail mgmt of elabft-discussion list',' <p>\n\n<pre>\n&gt; Problem: I can\'t get to the archives, because it doesn\'t appear\n&gt; anywhere on my list of mailing lists.\n&gt; \n&gt; Is this because he made the list with testbed-ops as a member\n&gt; instead of my user name?  Or is it a real bug/misfeature?\n</pre>\n\nThe former ...\n<pre>\n	  {180} ops$ sudo -u mailman ./list_members elabft-discussion\n	  kevina@cs.utah.edu\n	  mkasick@andrew.cmu.edu\n	  priya@cs.cmu.edu\n	  ricci@flux.utah.edu\n	  spertet@ece.cmu.edu\n	  testbed-ops@flux.utah.edu\n</pre>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(260,'mike',27,'2006-05-05 14:14:23','Testbed Operations','Problem with bad switch module again?',' <p>\n\n<pre>\n&gt; &gt; I was looking into why I was getting xmit errors from one NIC on pc295\n&gt; &gt; when I get this on cisco5:\n&gt; &gt; \n&gt; &gt; 2006 May 04 17:29:34 MDT -06:00 %SYS-4-SYS_LCPERR4:Module 4: RChip Port#23 Boc Header Crc Error: \n&gt; &gt; 2006 May 04 17:29:34 MDT -06:00 %SYS-4-SYS_LCPERR4:Module 4: RChip Port#24 Boc Header Crc Error:\n&gt; &gt; \n&gt; &gt; My port is actually 4/21, but this sounds suspiciously close.  Didn\'t we have\n&gt; &gt; problems with module 4 once before?\n&gt; \n&gt; We had problems with port 4/15 as well.  This module has not ever been \n&gt; replaced, BTW.  Looks like it might be time to switch it out.  I don\'t \n&gt; recall if we have spare WS-X6548 - I\'ll have to go look.\n</pre>\n\nAfter isolating all the affected nodes, I power cycled the module in question.\nThat seems to have cleared up the problem, at least for now. <p>\n\n',NULL,0,NULL,NULL,0,0,NULL,NULL,0),(262,'stoller',282,'2006-06-20 09:49:11','Testbed Operations','Nodes Stuck in Transistion','Sometimes the nightly database audit will tell you about nodes that\r\nare <em>stuck in transition</em>, as in:\r\n\r\n<code><pre>\r\n	The following experiments are stuck in transition.\r\n\r\n	Pid          Eid                  When\r\n	------------ -------------------- ------------------------\r\n	testbed      myexp                2004-11-03 14:28:17\r\n</pre></code>\r\n\r\nThis typically happens if your boss node crashes or if mysqld dies, or\r\nif a software error causes a script to terminate unexpectedly.\r\n\r\n<br><br>\r\nIn order to unstick these stuck experiments, you need to alter the\r\ndatabase state slightly, and then swap them out. Using the above\r\nexperiment as an example, issue the following command to mysql:\r\n\r\n<code><pre>\r\n	boss > mysql tbdb\r\n	mysql> update experiments set\r\n	mysql>    state=\'active\',expt_locked=NULL,canceled=0\r\n	mysql>    where pid=\'testbed\' and eid=\'myexp\';\r\n</pre></code>\r\n\r\nThen go to the web interface, and use the \"Swap Experiment Out\" option\r\non the Show Experiment page.\r\n\r\n',NULL,0,'2006-06-20 14:29:33','stoller',282,0,NULL,NULL,0),(263,'mike',27,'2006-06-21 16:03:31','Software Setup','FreeBSD kernel sources, support for ipfw and dummynet','\r\n<pre>\r\n&gt; I am looking to load a FreeBSD kernel with support for ipfw and dummynet\r\n&gt; for one of my experiments. The image FBSD410-STD does not let me create\r\n&gt; my own dummynet pipes: it gives me the following error:\r\n&gt; \r\n&gt; bash-2.05b$ sudo ipfw add pipe 1 ip from any to any\r\n&gt; ipfw: getsockopt(IP_FW_ADD): Protocol not available\r\n&gt; \r\n&gt; I presume this error is because of the dummynet options not enables in \r\n&gt; the kernel. but I did not find the kernel source in this disk image to\r\n&gt; recompile the kernel myself with the necessary options. So is there any\r\n&gt; way I can use my own dummynet pipes on emulab hosts?\r\n</pre>\r\n\r\nSource is in <code>/share/freebsd/4.10/src</code> or as\r\n<code>/share/freebsd/4.10/src.tar.gz</code> if you want to copy it over to a\r\nnode. <p>\r\n\r\nYou could also just copy <code>/kernel.linkdelay</code> over to\r\n<code>/kernel</code> as it supports IPFW.  However, that kernel also includes\r\na couple of other features, though the only one that might affect you would be\r\nthat the clockrate is 1ms instead of 10ms. <p>\r\n\r\nAlso see <a href=\"kb-show.php3?xref_tag=freebsd-kernels\">What FreeBSD kernels\r\nare available and what features do they include?</a>\r\n\r\n','kernel-sources',0,'2006-06-22 15:00:53','fish',30775,0,NULL,NULL,0),(264,'mike',27,'2006-06-29 09:26:22','Troubleshooting','My program agent command did not execute, why not?','If your program agent commands do not appear to be executing, then mostly\r\nlikely your <code>-command=</code> string is being mis-parsed.\r\nTo find out what the program agent executed, login to a node on which the\r\ncommand should have executed and look at\r\n<code>/local/log/<i>obj</i>.status</code>\r\nwhere <i>obj</i> is the name of the program agent object that the command\r\nis associated with.  This will show you the command line that was passed to\r\nthe shell.  The <i>obj</i>.err file contains the output of <code>stderr</code>\r\nfor the shell and will show you any error it might have encountered.\r\n<p>\r\n<a href=\"tutorial/docwrapper.php3?docname=eventsystem.html#PROGRAM-CMDLINE\">\r\nThis section</a>\r\nof the Emulab tutorial will reveal the awful truth about program agent\r\ncommand lines.\r\n','progagent',1,'2006-06-29 09:26:58','mike',27,0,NULL,NULL,0),(265,'mike',27,'2006-07-21 11:44:06','Troubleshooting','I get a WARNING message from linktest, what does it mean?','There are currently two warning messages that you might get from Linktest:\r\n<ul>\r\n<li><code>*** WARNING: some hosts do not support linktest, skipping links between those hosts</code>\r\n<br>\r\nThis means that one or more of the hosts in your experiment are running an\r\nOS that does not support Linktest.  You can find our for sure by visiting the\r\n<a href=\"showosid_list.php3\">OSID List</a>, looking up your image(s), and\r\nseeing if it has an ``osfeature\'\' of ``linktest\'\'.  Other links in your\r\nexperiment will be tested.\r\n\r\n<li><code>*** WARNING: tb-set-noshaping used on one or more links, skipping BW tests for those links.</code>\r\n<br>\r\nYou have specified\r\n<a href=\"tutorial/docwrapper.php3?docname=nscommands.html#tb-set-noshaping\"><code>tb-set-noshaping</code></a>\r\nfor one or more links or LANs in your NS file.  Since these commands will\r\ndisable bandwidth shaping on the indicated links,\r\nLinktest will not test their bandwidth.  All other links in your experiment\r\nwill be tested.\r\n<li><code>*** May see BW errors for <i>node-link</i> to <i>node-link</i> (...)</code>\r\n<br>\r\nIn a nutshell, the link in question has some combination of low-bandwidth,\r\nhigh-latency, and high-lossrate that might result in an inaccurate bandwidth\r\nreading.\r\nLinktest uses an <code>iperf</code> run on each link for measuring bandwidth\r\nand it limits the length of each such run in order to bound the maximum runtime\r\nfor the entire Linktest session.\r\nWhen an <code>iperf</code> run completes, the sender expects a final\r\nacknowledgement from the receiver before it ``stops the clock\'\' in order to\r\ncalculate the observed bandwidth.\r\nThe longer it takes to receive the ACK, the less accurate the bandwidth\r\nreading will be.\r\nLinktest calculates how long it should reasonably wait to receive the ACK,\r\nbased on the bandwidth, delay and loss rate of the link and possibly lengthens\r\nthe <code>iperf</code> run to minimize the effect of the ACK wait.\r\nIf the required run time exceeds the maximum per-test runtime, this warning\r\nis given.\r\n</ul>\r\n\r\n','linktest-warnings',1,'2007-05-16 12:33:14','mike',27,0,NULL,NULL,0),(266,'mike',27,'2006-08-29 16:33:12','Using the Testbed','Why can\'t I swap in my N node experiment, when there are more than N nodes free?','Even if the \"Free PC\" count shows that there are more than N nodes \"free\",\r\nyou may still not be able to swapin an N node experiment.  The common reasons\r\nare:\r\n<ul>\r\n<li><b>You did not take into account traffic shaping nodes.</b>\r\nIf you have shaped links in your experiment, additional \"shaping nodes\" are\r\nrequired to perform the shaping.  In the current testbed, a minimum of one\r\nshaping node is needed for every two shaped links.  For shaped LANs, one\r\nshaping node is needed for every two members of the LAN.  Worse case, it can\r\nrequire one shaping node per shaped link (per LAN member).\r\n\r\n<li><b>Not all nodes can run all OSes.</b>\r\nSome images are intended for, or restricted to, specific nodes or node types.\r\nFor example, experiments requring wireless networks can only run on nodes\r\nwith wireless interfaces!  Ditto for Gigabit Ethernet.  Also, some older\r\nimages do not have drivers for newer hardware and are thus restricted to\r\nrunning on older machines.\r\n\r\n<li><b>The physical testbed topology may limit which nodes can be used for\r\nan experiment.</b>\r\nIn particular, the inter-switch bandwidth between particular switches may\r\nlimit the nodes that can be used.  For example, LANs of 40 or more nodes\r\nmay have to be clustered on nodes connected to a single switch.\r\n\r\n<li><b>The physical to virtual mapping tool is not perfect.</b>\r\n<code>Assign</code> uses a heuristic algorithm and may not find a solution\r\n(mapping) when one exists.  This typically occurs when there are very few\r\nnodes free in the testbed and you ask for most of them.\r\n</ul>\r\n\r\n',NULL,1,NULL,NULL,0,0,NULL,NULL,0),(267,'fish',30775,'2006-09-17 21:32:23','Software Setup','Locking complaints during compilation','While compiling software on Emulab, you may encounter complaints similar to this one:\r\n<pre>\r\n+ autoreconf -i\r\nautom4te: cannot lock autom4te.cache/requests with mode 2 (perhaps you\r\nare running make -j on a lame NFS client?): Permission denied \r\n</pre>\r\n\r\nTypically, you do not want to build your software across NFS. It puts an\r\nexcessive load on our NFS server, which we discourage with a variety of\r\nmechanisms...  :-) <p>\r\n\r\nPlease build your software on \"local disk\" on your experimental node. Copy your\r\nsoftware to <b>local</b> disk and then build it.  (Remember that your user home directory and project/group directories are remote across NFS, not local.) <p>\r\n\r\nIf you need more disk space on your local node, type \"mkextrafs\" into the\r\nEmulab search box to find out how to create another whole file system. <p>','lame_nfs',1,'2006-09-17 21:37:40','fish',30775,0,NULL,NULL,0),(268,'stoller',282,'2006-10-24 08:11:55','Using the Testbed','What is LinkTest','<p>\r\n\r\n<b>LinkTest</b> is a recent feature in Emulab that allows you to\r\nautomatically test the traffic shaping on your links and lans. You can\r\naccess LinkTest from the web interface or from the command line on\r\n<tt>users.emulab.net</tt>. More information about LinkTest can be\r\nfound on the LinkTest\r\n<a href=doc/docwrapper.php3?docname=linktest.html>tutorial page</a>.\r\n<br>\r\n<br>\r\n<b>We strongly recommend that you always use LinkTest or some other testing mechanism to ensure that your links and lans are behaving as you expect them to!</b>','linktest',0,'2006-10-24 08:19:11','stoller',282,0,NULL,NULL,0),(269,'johnsond',30817,'2006-11-13 09:58:25','Customizing your experiment','How do I build a custom Linux kernel?','<p>\r\nIf your kernel build is failing, the kernel panics, or anything else, this\r\nguide should help you compile a working kernel for Emulab machines.  Since most\r\nusers are interested in building the latest, greatest vanilla kernel from\r\nkernel.org, these instructions apply to the 2.6 kernels.  The instructions\r\nassume a machine running one of the Emulab standard Fedora Core 4 or 6 images\r\n(i.e., FC4-STD or FC6-STD).  Note that the instructions for FC4 and FC6 differ\r\nslightly, since FC6 uses GRUB instead of LILO as the bootloader.\r\n</p>\r\n\r\n<p>\r\nFirst, note that lots of useful information for building your own images can be\r\nfound in /share on users.emulab.net .  For the purposes of this guide, we\'re\r\ninterested in /share/fedora/FC4/src and /share/fedora/FC6/src, which have\r\nkernel config files and source trees (if only the config files are present, you\r\ncan download the source from <a href=\"http://www.kernel.org\">kernel.org</a>).\r\nThe <code>config-emulab</code> kernel config will get you a kernel which should\r\nboot on all machines that we currently have.  For kernel versions prior to\r\n2.6.20, the <code>config-emulab-SMP</code> config gets you a kernel \r\nthat enables SMP, hyperthreading, and multi-core support (which will work on\r\npc3000s and pc3000ws.  The reason these two\r\nconfigs are separate is because SMP-enabled kernels don\'t seem to boot on our\r\nolder machines, as of 2.6.18.1.  However, the 2.6.20 FC6 configs contain\r\nsupport for SMP, hyperthreading, and multi-core, and build kernels that work on\r\nall our machines.\r\n</p>\r\n\r\n<p>\r\nNow, let\'s get to building your kernel.\r\n<ul>\r\n<li>\r\nSwap in a one-node experiment with FC4-STD or FC6-STD (or another of our Fedora\r\nCore 4/6 images).\r\n</li>\r\n<li>\r\nOnce logged into the node you just swapped in, run these steps from a shell\r\n(note that they require local_root privileges), changing the kernel version as\r\ndesired:<br>\r\n<code>\r\n$ sudo chown -R YOUR_UID:YOUR_GID /usr/src <br>\r\n$ cd /usr/src <br>\r\n</code><br>\r\nIf you only need to add some modules for your application, we suggest that you\r\ntry using the Emulab kernel source tree for either FC4 or FC6 in /share; i.e.,\r\n<br>\r\n<code>\r\n$ rsync -avz ops.emulab.net:/share/fedora/FC6/src/linux-2.6.20-1.2944.fc6.emulab-1 ./ <br>\r\n</code><br>\r\nOtherwise, download the kernel that you\'re interested in from kernel.org:<br>\r\n<code>\r\n$ wget http://kernel.org/pub/linux/kernel/v2.6/linux-2.6.18.1.tar.bz2 <br>\r\n$ bunzip2 -c linux-2.6.18.1.tar.bz2 | tar xf -   <br>\r\n</code><br>\r\nThen, continue with <br>\r\n<code>\r\n$ ln -s linux-<version> linux <br>\r\n$ cd linux <br>\r\n$ cp /share/fedora/FC6/src/linux-2.6.20-1.2944.fc6.emulab-1/config-emulab .config <br>\r\n$ make <br>\r\n$ sudo make modules_install <br>\r\n$ sudo make install <br>\r\n</code>\r\n</li>\r\n<li>\r\n<b>If you\'re building on FC6</b>, <code>make install</code> will not produce\r\nerrors, but you need to fix up <code>/boot/grub/grub.conf</code>.  Make sure\r\nthat each line starting with <code>kernel</code> contains the correct\r\n<code>root=/dev/(s,h)dX</code> parameter (i.e., you need to set the\r\n<code>root</code> parameter to the device and partition on which the current\r\nroot partition is mounted).  For our machines, this is either /dev/sda2 or\r\n/dev/hda2 (find out which via <code>mount | grep dev</code>; look for something\r\nlike <code>/dev/sda2 on / type ext3 (rw)</code>.  Do not use the standard\r\nFedora <code>root=\"LABEL=/\" syntax</code>; if you do, we cannot assure that\r\nyour image will run on all our machines.\r\n<br><br>\r\n<b>If you\'re building on FC4</b> and <code>make install</code> complains about\r\nduplicate aliases, this is really lilo complaining about duplicate aliases for\r\nkernel image entries in /etc/lilo.conf.  So, just <code>sudo emacs -nw\r\n/etc/lilo.conf</code> (or your preferred editor) and change the top image\r\nentry\'s <code>alias=</code> to something different than the others in the file.\r\nThen, do <br>\r\n<code>\r\n$ sudo /sbin/lilo -v\r\n</code>\r\n<br>\r\nand note that there are no errors.  Then you should be ready to go.\r\n</li>\r\n</ul>\r\n</p>\r\n\r\n<p>\r\nIf you need to modify our default kernel configs, try as much as possible\r\n(shouldn\'t be a problem) NOT TO MODIFY the device drivers.  If you remove\r\nsupport for certain chipsets, NICs, and disk controllers, your kernel will\r\nprobably not boot on some or all of our machines.  If you absolutely must\r\nreduce the size of the kernel or build times, the output of \"dmesg | less\"\r\ncan help you understand which drivers are actually being used by devices on a\r\nparticular node.\r\n</p>','linux_kernel',1,'2007-04-19 12:28:10','johnsond',30817,0,NULL,NULL,0),(270,'ricci',1182,'2007-01-17 10:53:48','Emulab Source Code','Read-Only Access to Emulab CVS','<p>\r\nWe provide read-only access to the Emulab CVS repository for some developers at\r\nother sites. At the present time, this is mostly limited to administrators\r\nof Emulab installations who have shown an interest in contributing code.\r\nIf you fall into this category, send mail to <a href=\"mailto:testbed-ops@flux.utah.edu\">testbed-ops</a> to request an account on\r\nour CVS server.\r\n</p>\r\n\r\n<p>Due to security concerns, our CVS pserver is only available through an SSL\r\ntunnel. It runs on <code>cvs.flux.utah.edu</code> on port 2405. The CVS root\r\ndirectory is <code>/CVS</code> and the module is named <code>testbed</code>.\r\n\r\n<p>On Unix-type\r\nmachines, use <a href=\"http://ccvssh.sourceforge.net\">ccvssh</a> to connect\r\nto our CVS. Here\'s what you need to do:</p>\r\n</p>\r\n\r\n<ol>\r\n  <li>Download the ccvssh <a href=\"http://sourceforge.net/project/showfiles.php?group_id=56871\">source code</a></li>\r\n  <li>Download and apply <a href=\"http://www.emulab.net/downloads/ccvssh-argorder.patch\">this\r\n    patch</a>, which fixes a bug in ccvssh</li>\r\n   <li>Compile and install ccvssh with the standard <code>./configure; make; make install</code> method. Make sure the ccvssh binary ends up somewhere\r\nin your $PATH</li>\r\n   <li>Set the following environment variables: <code>CVSROOT=:ext:USERNAME@cvs.flux.utah.edu:/CVS</code>, replacing USERNAME with the username you were given by testbed-ops, and <code>CVS_RSH=ccvssh</code></li>\r\n   <li>Run <code>ccvssh login</code>, and supply the password you were given</li>\r\n   <li>Use the <code>cvs</code> command as normal; ie. start with <code>cvs co testbed</code></li>\r\n</ol>\r\n\r\n\r\n<p>On Windows machines, you should be able to use <a href=\"http://www.sabren.net/code/cvssh/\">cvssh</a> (note that\r\nthere is only one \'c\' at the begging of that name!) We have not yet tried this\r\nmethod, so let us know about your experiences with it.</p>','ro-cvs',0,'2007-01-17 12:32:25','ricci',1182,0,NULL,NULL,0),(271,'fish',30775,'2007-01-29 10:03:24','Using the Testbed','Available network topological data','<pre>\r\n    >I\'m trying to find the router-level topology data for any big \r\n    >networks, like Abilene or some big ISPs, for a research on setting up \r\n    >connections among end hosts and networks, but I\'m having a hard time \r\n    >to reach the right persons or sources of the data. Can any one please \r\n    >point me to the right direction to where I can possibly get the data.\r\n</pre>\r\n\r\nThe Rocketfuel work comes to mind, specifically their 2002 SigComm paper.\r\nThe data is there to download, too.  \r\nSee <a href=\"http://www.cs.washington.edu/research/networking/rocketfuel\">\r\nhttp://www.cs.washington.edu/research/networking/rocketfuel</a> . <p>\r\n\r\nAlso see /share/data/rocketfuel on Ops for a copy of the data, and some\r\nlittle scripts we once used to transform the ISP data for our purposes.\r\nMore details in the README.txt file there.  <p>\r\n\r\nNote one point to be wary of: Rocketfuel often uses incomplete data, and several of the graphs are not fully connected. Therefore, when using a Rocketfuel topology, be sure to check for connectivity, and if it isn\'t fully connected, possibly just use the largest partition.\r\n\r\n','Rocketfuel',1,'2007-01-30 10:49:31','fish',30775,0,NULL,NULL,0),(272,'johnsond',30817,'2007-04-05 16:08:47','PlanetLab','Using PlanetLab nodes with a specific version in your experiment.','<p>\r\n  At certain times, you may want to use only PlanetLab nodes running a specific version of the PlanetLab software.  For instance, as PlanetLab migrates to version 4.0, there are some \"Production\" nodes running 3.x-era software, and other \"Rollout\" nodes running the latest software that will eventually be rolled out to all nodes.\r\n</p>\r\n<p>\r\n  Selecting nodes of a specific version is easy.  To request a PlanetLab node running current \"Rollout\" software, add a line similar to the following to your NS file:\r\n<br>\r\n<code><pre>    $myplabnode add-desire plabstatus-Rollout 1.0</pre></code>\r\n<br>\r\nBy default, if you do not set a desire for your PlanetLab nodes in your NS file, you will receive only \"Production\" nodes, unless you have requested more PlanetLab nodes than there are \"Production\" nodes (the remainder nodes in your experiment will receive any other available PlanetLab nodes).\r\n</p>\r\n<p>\r\n  We obtain feature names like \"plabstatus-Rollout\" from PlanetLab\'s sites.xml file; each node entry contains a \"STATUS\" field, which we append to \"plabstatus-\" to form the node feature name.  Therefore, if you want to select nodes with a different status, i.e. \"Alpha\", just add a desire for the feature name \"plabstatus-Alpha\" with a weight of 1.0, as shown in the example above.\r\n</p>\r\n','plab-node-versions',0,'2007-04-05 16:10:14','johnsond',30817,0,NULL,NULL,0),(273,'mike',27,'2007-05-17 14:08:02','Software Setup','What device drivers do I need in my operating system to run in Emulab?','<b>NOTE: this entry refers to the Utah Emulab only.</b>\r\n\r\n<h4>FreeBSD</h4>\r\nThe easiest thing to do is to use a GENERIC kernel.  All current Emulab hardware\r\nis supported by this configuration.  Note that some newer node types require\r\nrecent versions of drivers.  FreeBSD 6 (aka STABLE), as of 5/1/07 should work\r\nwith all current Emulab hardware.\r\n<p>\r\nCritical device drivers (disk, network) should be linked into the kernel,\r\nthere is no boot time support for including needed device drivers.\r\n</p><p>\r\nIf you are customizing your kernel, use\r\n<tt>/share/freebsd/<i>&lt;version&gt;</i>/src/sys/i386/conf/TESTBED</tt>\r\nas an example.\r\n</p>\r\nThe particular hardware, and the drivers required follows.\r\n<ul>\r\n<li>pc600, pc850:\r\n<ul>\r\n<li>disk: ata, atadisk</li>\r\n<li>network: fxp</li>\r\n<li>other: atkbdc, atkbd, psm, kbdmux, vga, sio,\r\n    loop, random, ether, tun, pty, md, bpf</li>\r\n<li>notes: uniprocessor</li>\r\n</ul>\r\n\r\n<li>pc2000:\r\n<ul>\r\n<li>disk: ata, atadisk</li>\r\n<li>network: fxp, em</li>\r\n<li>other: atkbdc, atkbd, psm, kbdmux, vga, sio,\r\n    loop, random, ether, tun, pty, md, bpf</li>\r\n<li>notes: uniprocessor, ACPI support should be disabled,\r\n    there is an unconnected \'xl\' NIC in each</li>\r\n</ul>\r\n\r\n<li>pc3000:\r\n<ul>\r\n<li>disk: mpt, scbus, da, pass, ses</li>\r\n<li>network: em</li>\r\n<li>other: atkbdc, atkbd, psm, kbdmux, vga, sio,\r\n    loop, random, ether, tun, pty, md, bpf</li>\r\n<li>notes: uniprocessor, 64-bit</li>\r\n</ul>\r\n\r\n<li>pc3000w:\r\n<ul>\r\n<li>disk: ata, atadisk</li>\r\n<li>network: em, ath</li>\r\n<li>other: atkbdc, atkbd, psm, kbdmux, vga, sio,\r\n    loop, random, ether, tun, pty, md, bpf</li>\r\n<li>notes: uniprocessor, 64-bit, requires FreeBSD 5+ for SATA support,\r\n    wireless interfaces</li>\r\n</ul>\r\n\r\n</ul>\r\n\r\n<h4>Linux</h4>\r\n\r\nNetwork drivers are loaded dynamically via\r\n<tt>/etc/sysconfig/network-scripts/ifcfg-eth99</tt>\r\nand should <b>not</b> be statically linked into the kernel.\r\n\r\n<h4>Windows</h4>\r\n\r\nDon\'t even try...\r\n','kernel-drivers',1,'2007-05-17 14:25:28','mike',27,0,NULL,NULL,0);
UNLOCK TABLES;
/*!40000 ALTER TABLE `knowledge_base_entries` ENABLE KEYS */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

