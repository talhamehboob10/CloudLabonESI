#
# Copyright (c) 2000-2020 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
SRCDIR		= ../../../../../clientside/event/linktest/iperf
TESTBED_SRCDIR	= ../../../../..
OBJDIR		= ../../../..
SUBDIR		= $(subst $(TESTBED_SRCDIR)/,,$(SRCDIR))
SYSTEM         := $(shell $(SRCDIR)/../../../tmcc/osstuff.sh -o)


IPERFVERSION    = 2.0.2
OSTAG=$(shell $(SRCDIR)/../../../tmcc/osstuff.sh -t)
OSREL=$(shell $(SRCDIR)/../../../tmcc/osstuff.sh -r)

ifeq ($(SYSTEM),Linux)
# NB: the 2.0.10 patch is still subtly broken, so we continue to keep
# the 2.0.2 patch alive.  Add exceptions in the filter case below if you
# really want to use the 2.0.10 patch.
ifneq (,$(filter $(OSTAG),))
IPERFVERSION    = 2.0.10
# If 2.0.10, we have to disable 64-bit seq numbers; they mess up the
# client_hdr size in a backwards-incompat way.
CONFIG_ARGS     = --disable-seqno64b
endif
endif
TARBALL		= iperf-$(IPERFVERSION).tar.gz

include $(OBJDIR)/Makeconf

SYSTEM         := $(patsubst CYGWIN%,CYGWIN,$(shell uname -s))

ISBROKEN = 0
ifeq ($(host_cpu),arm)
ISBROKEN = 1
endif
ifeq ($(OSTAG),freebsd11)
ifeq ($(OSREL),11.4)
ISBROKEN = 1
endif
endif
ifeq ($(OSTAG),freebsd12)
ifeq ($(OSREL),12.2)
ISBROKEN = 1
endif
endif
ifeq ($(OSTAG),freebsd13)
ISBROKEN = 1
endif

ifeq ($(SYSTEM),CYGWIN)
# Compile single-threaded on Windows.  Otherwise, the client iperf often hangs
# after the first phase of a two-way bandwidth test.
CONFIG_ARGS     = --disable-threads
endif

ifeq ($(ISBROKEN),1)
TARGETS =
ITARGETS =
else
TARGETS = src/emulab-iperf
ITARGETS = iperf-install
endif

all: $(TARGETS)

vars:
	@echo "IPERFVERSION=$(IPERFVERSION)"
	@echo "SYSTEM=$(SYSTEM)"
	@echo "ISBROKEN=$(ISBROKEN)"
	@echo "TARGETS=$(TARGETS)"

include $(TESTBED_SRCDIR)/GNUmakerules

# Next two rules for linux, where make=gmake.
%-am:		Makefile force
	$(MAKE) -f Makefile $@

%-recursive:	Makefile force
	$(MAKE) -f Makefile $@

src/emulab-iperf:	iperf-$(IPERFVERSION) config.status build-iperf

build-iperf: Makefile
	$(MAKE) -f Makefile all

client: all

iperf-install: build-iperf
	$(INSTALL_PROGRAM) -s src/iperf $(DESTDIR)$(CLIENT_BINDIR)/emulab-iperf

client-install: $(ITARGETS)

# Note: GNU make wants to pass options in MAKEFLAGS (w) that are incompatible
# with BSD make.  So we just force configure to assume/use gmake for BSD.
#
# Note 2: Starting with FreeBSD 11.2 (actually clang 6.0) the conftest.c files
# generated by the default configure script ("checking 3rd argument of accept")
# will not compile. We need to create a newer version of configure to solve this.
# We could probably do this on all OSes, but I don't want to test all OSes...
#
config.status:
ifneq (,$(filter $(OSTAG),freebsd11 freebsd12 freebsd13))
	cd iperf-$(IPERFVERSION) && autoconf
endif
	MAKE=$(MAKE) iperf-$(IPERFVERSION)/configure $(CONFIG_ARGS)

iperf-$(IPERFVERSION):
	$(SRCDIR)/iperf-fetch.sh $(SRCDIR) $(TARBALL) $(IPERFVERSION)

clean:
	if [ -r Makefile ]; then $(MAKE) -f Makefile clean; fi
	rm -f config.h config.log stamp-h1

reallyclean: clean
	rm -rf config.status Makefile compat doc include src \
	    iperf-$(IPERFVERSION) $(TARBALL)

Makefile: config.status

force: ;
