/*
 * Automatically generated by jrpcgen 1.0.5 on 14-Feb-05 4:35:56 PM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://acplt.org/ks/remotetea.html for details
 */
package net.emulab;
import org.acplt.oncrpc.*;
import java.io.IOException;

public class mtp_config_vmc implements XdrAble {
    public robot_config [] robots;
    public camera_config [] cameras;

    public mtp_config_vmc() {
    }

    public mtp_config_vmc(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr)
           throws OncRpcException, IOException {
        { int $size = robots.length; xdr.xdrEncodeInt($size); for ( int $idx = 0; $idx < $size; ++$idx ) { robots[$idx].xdrEncode(xdr); } }
        { int $size = cameras.length; xdr.xdrEncodeInt($size); for ( int $idx = 0; $idx < $size; ++$idx ) { cameras[$idx].xdrEncode(xdr); } }
    }

    public void xdrDecode(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        { int $size = xdr.xdrDecodeInt(); robots = new robot_config[$size]; for ( int $idx = 0; $idx < $size; ++$idx ) { robots[$idx] = new robot_config(xdr); } }
        { int $size = xdr.xdrDecodeInt(); cameras = new camera_config[$size]; for ( int $idx = 0; $idx < $size; ++$idx ) { cameras[$idx] = new camera_config(xdr); } }
    }

}
// End of mtp_config_vmc.java
