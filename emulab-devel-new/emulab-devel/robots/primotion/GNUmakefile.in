#
# Copyright (c) 2004, 2005 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

SRCDIR		= @srcdir@
TESTBED_SRCDIR	= @top_srcdir@
OBJDIR		= ../..
SUBDIR		= robots/primotion

include $(OBJDIR)/Makeconf

ifeq ($(BRAINSTEM_DIR),)
PROGS = 
else
PROGS = garcia-pilot brainstem-reset
endif

all client: $(PROGS)
install control-install:
client-install: client
	$(INSTALL) -m 755 -d $(DESTDIR)$(CLIENT_BINDIR)
	$(INSTALL) -m 755 -d $(DESTDIR)$(CLIENT_ETCDIR)
	$(INSTALL_PROGRAM) pilot-wrapper.sh \
		$(DESTDIR)$(CLIENT_BINDIR)/pilot-wrapper.sh
	$(INSTALL_PROGRAM) garcia-pilot \
		$(DESTDIR)$(CLIENT_BINDIR)/garcia-pilot
	$(INSTALL_PROGRAM) brainstem-reset \
		$(DESTDIR)$(CLIENT_BINDIR)/brainstem-reset
	$(INSTALL_DATA) $(SRCDIR)/garcia.config \
		$(DESTDIR)$(CLIENT_ETCDIR)/garcia.config

include $(TESTBED_SRCDIR)/GNUmakerules

CXXFLAGS	+= -O -g -Wall -I${OBJDIR} -I/usr/local/include
CXXFLAGS	+= -I${SRCDIR}/../mtp -I../mtp -pthread -D_REENTRANT

LDFLAGS		= -L../mtp -Ldgrobot

ifeq ($(host_cpu),arm)
BRAINSTEM_ARCH=ARM
else
BRAINSTEM_ARCH=$(host_cpu)
endif

ifeq ($(BRAINSTEM_DIR),)
CXXFLAGS	+= -DGROBOT_SIM
else
CXXFLAGS += \
	-DaUNIX \
	-I$(BRAINSTEM_DIR)/aCommon \
	-I$(BRAINSTEM_DIR)/aUnix \
	-I$(BRAINSTEM_DIR)/aIO/aCommon \
	-I$(BRAINSTEM_DIR)/aIO/aUnix \
	-I$(BRAINSTEM_DIR)/aUI/aCommon \
	-I$(BRAINSTEM_DIR)/aUI/aUnix \
	-I$(BRAINSTEM_DIR)/aRelease/aSystem \
	-I$(BRAINSTEM_DIR)/aStem/aCommon \
	-I$(BRAINSTEM_DIR)/aStem/aUnix \
	-I$(BRAINSTEM_DIR)/aGarcia/aGarcia \
	-I$(BRAINSTEM_DIR)/aGarcia/aUnix \
	-I$(BRAINSTEM_DIR)/aGarcia/aCommon

ifeq ($(host_cpu),arm)
LDFLAGS += -static
endif

LDFLAGS += \
	-L$(BRAINSTEM_DIR)/aDebug/aUnix/$(BRAINSTEM_ARCH)/ \
	-laGarcia \
	-laStem \
	-laIO \
	-laUI \
	-pthread \
	-lm
endif

LIBS	 += -lmtp # -ldgrobot

test_gorobot.sh: gorobot

PILOT_OBJS = \
	buttonManager.o \
	dashboard.o \
	faultDetection.o \
	garcia-pilot.o \
	garciaUtil.o \
	ledManager.o \
	pilotButtonCallback.o \
	pilotClient.o \
	wheelManager.o

BSTEM_OBJS = garciaUtil.o

garcia-pilot-version.c: $(PILOT_OBJS)

garcia-pilot-debug: garcia-pilot-version.c $(PILOT_OBJS)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)

garcia-pilot: garcia-pilot-debug
	$(STRIP) -o $@ $<

brainstem-reset: brainstem-reset.cc $(BSTEM_OBJS)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)

flash-user-led: flash-user-led.o ledManager.o garciaUtil.o
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

watch-user-button: watch-user-button.o buttonManager.o garciaUtil.o
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

gorobot: gorobot.o ../mtp/libmtp.a dgrobot/libdgrobot.a
	$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ gorobot.o $(LIBS)

clean: clean-subdirs
	rm -f *.o

# How to recursively descend into subdirectories to make general
# targets such as `all'.
%.MAKE:
	@$(MAKE) -C $(dir $@) $(basename $(notdir $@))
%-subdirs: $(addsuffix /%.MAKE,$(SUBDIRS)) ;

.PHONY:	$(SUBDIRS)
